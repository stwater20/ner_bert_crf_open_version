Some B-Entity
groups I-Entity
carefully O
plan B-Action
watering B-Entity
hole I-Entity
attacks I-Entity
. O

For O
example O
the O
Hidden O
Lynx O
group O
stopped O
using O
a O
zero-day O
vulnerability O
in O
a O
large O
watering O
hole O
attack O
after O
Microsoft O
released O
details O
on O
the O
vulnerability O
. O

This O
helped O
to O
cover O
their O
activities O
and O
avoid O
unwanted O
attention O
. O

A O
few O
days O
later O
the B-Entity
group I-Entity
resumed B-Action
the B-Entity
watering I-Entity
hole I-Entity
attack I-Entity
again O
, O
this O
time O
using B-Modifier
a B-Entity
different I-Entity
exploit I-Entity
. O

For O
more O
difficult O
targets O
, O
man-in-the-middle O
attacks O
can O
be O
used O
. O

These O
can O
be O
performed O
either O
at O
the O
same O
physical O
location O
, O
posing B-Action
as B-Modifier
a B-Entity
genuine I-Entity
Wi-Fi I-Entity
hotspot I-Entity
or O
through O
supply O
chain O
attacks O
. O

This O
can O
enable O
the B-Entity
attacker I-Entity
to O
swap B-Action
an B-Entity
update I-Entity
of I-Entity
legitimate I-Entity
software I-Entity
for B-Modifier
a B-Entity
maliciously I-Entity
crafted I-Entity
version I-Entity
. O

Once B-Modifier
the B-Entity
victim I-Entity
installs I-Entity
the I-Entity
genuine I-Entity
looking I-Entity
update I-Entity
, O
the B-Entity
attacker I-Entity
effectively O
gains B-Action
control B-Entity
over I-Entity
the I-Entity
computer I-Entity
. O

Due O
to O
the O
complexity O
of O
such O
an O
attack O
, O
they O
are O
rarely O
used O
. O

Depending O
on O
the O
skills O
of O
the O
attacker O
and O
the O
time O
available O
, O
the O
attacker O
might O
also O
attack O
systems O
at O
the O
perimeter O
, O
such O
as O
Web O
servers O
, O
and O
try O
to O
break O
in O
from O
there O
. O

The O
malware O
used O
is O
not O
always O
sophisticated O
. O

Sometimes O
a B-Entity
regular I-Entity
off-the-shelf I-Entity
back I-Entity
door I-Entity
Trojan I-Entity
is B-Action
used I-Action
. O

In O
these O
cases O
the O
person O
behind O
the O
malware O
orchestrating O
the O
commands O
is O
what O
makes O
the O
difference O
between O
a O
targeted O
attack O
and O
a O
broad O
generic O
infection O
. O

Having O
said O
this O
, O
on O
very O
unique O
targets O
, O
we O
will O
often O
see O
the O
use O
of O
a O
specifically O
designed O
piece O
malware O
, O
such O
as O
in O
the O
case O
of O
Stuxnet O
. O

Depending O
on O
the O
protection O
measures O
implemented O
by O
the O
target O
, O
the O
attackers O
may O
also O
digitally O
sign O
their O
malware O
creation O
. O

In O
the O
past O
there O
have O
been O
quite O
a O
few O
cases O
where O
code O
signing O
certificates O
were O
stolen O
and O
later O
misused O
to O
sign O
malware O
in O
order O
to O
pass O
it O
unnoticed O
to O
high O
value O
targets O
. O

Once O
the O
attacker O
has O
a O
foothold O
on O
one O
system O
, O
the O
next O
step O
is O
to O
create O
a O
plan O
for O
lateral O
movement O
through O
the O
network O
until O
the O
interesting O
data O
is O
found O
. O

With O
more O
specialized O
teams O
of O
attackers O
, O
we O
can O
often O
observe O
that O
the B-Entity
infected I-Entity
system I-Entity
is B-Action
first I-Action
analyzed I-Action
to B-Modifier
ensure B-Entity
that I-Entity
it I-Entity
is I-Entity
of I-Entity
interest I-Entity
to I-Entity
them I-Entity
. O

With O
watering O
hole O
attacks O
especially O
, O
it O
can O
happen O
that O
computers O
that O
were O
not O
targeted O
get O
infected O
. O

Infected O
computers O
need O
to O
be O
assessed O
by O
the O
attacker O
and O
, O
if O
necessary O
, O
removed O
to O
keep O
the O
profile O
, O
and O
with O
that O
the O
chances O
of O
exposure O
, O
low O
. O

One O
of O
the O
obvious O
tasks O
performed O
by O
attackers B-Entity
is O
to O
install B-Action
key B-Entity
loggers I-Entity
, O
dump B-Action
local B-Entity
credentials I-Entity
, O
search B-Action
local B-Entity
storage I-Entity
for B-Modifier
saved B-Entity
accounts I-Entity
and O
sniff B-Action
the B-Entity
network I-Entity
for B-Modifier
passwords B-Entity
. O

Any O
account O
detail O
can O
be O
useful O
to O
them O
. O

Domain O
administrator O
passwords O
are O
of O
especially O
high O
value O
, O
as O
they O
can O
help O
greatly O
in O
moving O
further O
through O
the O
Intranet O
. O

Often B-Entity
small I-Entity
scripts I-Entity
or I-Entity
even I-Entity
manual I-Entity
commands I-Entity
are B-Action
used I-Action
to B-Modifier
comb B-Entity
through I-Entity
local I-Entity
files I-Entity
and I-Entity
create I-Entity
network I-Entity
mappings I-Entity
. O

Simple O
system O
commands O
can O
help O
the B-Entity
attacker I-Entity
to O
learn B-Action
about B-Modifier
installed B-Entity
security I-Entity
tools I-Entity
, I-Entity
saved I-Entity
links I-Entity
to I-Entity
internal I-Entity
platforms I-Entity
and I-Entity
local I-Entity
address I-Entity
books I-Entity
. O

Once O
new O
systems O
are O
identified O
the O
attacker O
will O
attempt O
to O
hop O
onto O
them O
as O
well O
. O

In O
some O
instances O
they B-Entity
might O
even O
use B-Action
zero-day B-Entity
vulnerabilities I-Entity
to B-Modifier
spread B-Entity
further I-Entity
into I-Entity
the I-Entity
network I-Entity
. O

One O
method O
which O
is O
gaining O
more O
relevance O
is O
the O
hijacking B-Action
of O
local B-Entity
software I-Entity
distribution I-Entity
systems I-Entity
for B-Modifier
further B-Entity
distribution I-Entity
. O

This O
can O
either O
be O
proprietary O
systems O
, O
such O
as O
the O
case O
of O
Trojan.Jokra O
in O
South O
Korea O
, O
or O
OS-specific O
, O
such O
as O
hijacking O
Windows O
Update O
, O
in O
the O
case O
of O
Flamer O
. O

Once O
the O
attackers O
have O
successfully O
managed O
to O
create O
and O
distribute O
their O
own O
package O
, O
they B-Entity
can O
easily O
infect B-Action
all B-Entity
connected I-Entity
systems I-Entity
at B-Modifier
once B-Entity
. O

Especially O
in O
cases O
of O
wiping O
attacks O
, O
such O
Trojan.Jokra O
, O
this O
is O
a O
very O
efficient O
way O
to O
disrupt O
as O
many O
computers O
as O
possible O
. O

If O
the O
target O
is O
assumed O
to O
be O
in O
a O
separated O
network O
not O
connected O
to O
the O
Internet O
, O
the B-Entity
malware I-Entity
used O
might O
try O
and O
autonomously B-Action
infect I-Action
removable B-Entity
drives I-Entity
, I-Entity
like I-Entity
USB I-Entity
sticks I-Entity
, I-Entity
or I-Entity
project I-Entity
files I-Entity
for I-Entity
PLCs I-Entity
. O

This O
could O
allow O
the B-Entity
malware I-Entity
to O
be O
manually O
introduced B-Action
to B-Modifier
the B-Entity
destination I-Entity
network I-Entity
, O
without O
the O
knowledge O
of O
the O
carrier O
, O
essentially O
jumping B-Action
air B-Entity
gaps I-Entity
into B-Modifier
isolated B-Entity
networks I-Entity
. O

At O
the O
end O
of O
the O
discovery O
phase O
the B-Entity
attackers I-Entity
should O
know B-Action
the B-Entity
internals I-Entity
of I-Entity
the I-Entity
infected I-Entity
networks I-Entity
and O
have O
identified B-Action
systems B-Entity
with I-Entity
interesting I-Entity
data I-Entity
or I-Entity
with I-Entity
connected I-Entity
industrial I-Entity
control I-Entity
systems I-Entity
. O

The O
capture O
and O
exfiltration O
phases O
are O
not O
always O
present O
. O

If O
the O
sole O
goal O
of O
the O
attackers O
is O
to O
cause O
a O
disruption O
they O
may O
directly O
jump O
to O
a O
destructive O
payload O
. O

However O
, O
in O
most O
cases O
information O
is O
extracted O
first O
, O
which O
in O
turn O
allows O
the O
sabotage O
to O
be O
constructed O
more O
efficiently O
at O
a O
later O
phase O
. O

In O
this O
phase O
the B-Entity
interesting I-Entity
data I-Entity
is B-Action
gathered I-Action
and O
sent B-Action
back I-Action
to B-Modifier
the B-Entity
attackers I-Entity
. O

This O
can O
be O
done O
with O
different O
levels O
of O
sophistication O
. O

The B-Entity
simple I-Entity
attacks I-Entity
compress B-Action
the B-Entity
files I-Entity
and O
upload B-Action
them B-Entity
through B-Modifier
FTP B-Entity
or O
through B-Modifier
a B-Entity
HTTP I-Entity
POST I-Entity
request I-Entity
to I-Entity
a I-Entity
remote I-Entity
drop I-Entity
server I-Entity
. O

More B-Entity
sophisticated I-Entity
attackers I-Entity
obfuscate B-Action
the B-Entity
data I-Entity
by B-Modifier
XOR-ing B-Entity
it I-Entity
, I-Entity
encrypting I-Entity
it I-Entity
with I-Entity
proper I-Entity
asymmetric I-Entity
encryption I-Entity
or I-Entity
embedding I-Entity
it I-Entity
into I-Entity
media I-Entity
files I-Entity
using I-Entity
steganography I-Entity
to B-Modifier
hide B-Entity
the I-Entity
data I-Entity
from I-Entity
traffic I-Entity
inspection I-Entity
. O

In O
addition O
to O
this O
, O
the O
amount O
of O
data O
sent O
and O
the O
timing O
can O
be O
chosen O
in O
a O
smart O
way O
. O

For O
example O
, O
some B-Entity
malware I-Entity
samples I-Entity
will O
send B-Action
the B-Entity
data I-Entity
in B-Modifier
smaller B-Entity
bursts I-Entity
so B-Modifier
as I-Modifier
not B-Entity
to I-Entity
swamp I-Entity
the I-Entity
network I-Entity
or I-Entity
generate I-Entity
network I-Entity
spikes I-Entity
that I-Entity
might I-Entity
attract I-Entity
attention I-Entity
. O

Since O
most O
employees O
use O
laptops O
, O
the B-Entity
malware I-Entity
can O
use B-Action
location B-Entity
awareness I-Entity
to B-Modifier
detect B-Entity
if I-Entity
the I-Entity
compromised I-Entity
computer I-Entity
is I-Entity
outside I-Entity
of I-Entity
the I-Entity
corporate I-Entity
network I-Entity
and O
send B-Action
the B-Entity
data I-Entity
once B-Modifier
it B-Entity
's I-Entity
directly I-Entity
connected I-Entity
to I-Entity
the I-Entity
Internet I-Entity
, I-Entity
such I-Entity
as I-Entity
from I-Entity
a I-Entity
Wi-Fi I-Entity
hotspot I-Entity
at I-Entity
an I-Entity
airport I-Entity
. O

This O
might O
allow O
the B-Entity
traffic I-Entity
to O
bypass B-Action
perimeter B-Entity
security I-Entity
and O
receive B-Action
less B-Entity
scrutiny I-Entity
. O

In O
some O
instances O
the O
infected O
computer O
might O
not O
have O
a O
direct O
connection O
to O
the O
Internet O
. O

In O
such O
cases O
, O
a B-Entity
previously I-Entity
compromised I-Entity
computer I-Entity
in I-Entity
the I-Entity
DMZ I-Entity
can O
act B-Action
as B-Modifier
a B-Entity
proxy I-Entity
, O
forwarding B-Action
all B-Entity
the I-Entity
collected I-Entity
data I-Entity
. O

This O
is O
when O
any O
destructive O
payload O
is O
launched O
. O

If O
the O
attackers O
are O
only O
after O
information O
this O
phase O
might O
not O
happen O
at O
all O
. O

The O
targets O
and O
the O
goals O
for O
disruption O
attacks O
can O
be O
very O
different O
, O
there O
is O
no O
such O
thing O
as O
one- O
size-fits-all O
for O
disruption O
attacks O
. O

For O
example O
, O
Stuxnet O
was O
tailored O
to O
attack O
a O
specific O
uranium O
enrichment O
facility O
and O
would O
not O
work O
against O
a O
different O
target O
. O

In O
recent O
times O
, O
wiper O
Trojans O
have O
been O
popular O
in O
attacks O
against O
the O
energy O
sector O
. O

The B-Entity
malware I-Entity
deletes B-Action
all B-Entity
files I-Entity
on I-Entity
a I-Entity
computer I-Entity
and O
then O
deletes B-Action
the B-Entity
master I-Entity
boot I-Entity
record I-Entity
, O
rendering B-Action
the B-Entity
computer I-Entity
unusable B-Entity
. O

This O
can O
happen O
on O
any O
operating O
systems O
and O
we O
have O
seen O
scripts O
for O
different O
UNIX O
flavors O
being O
used O
as O
well O
. O

Depending O
on O
the O
disaster O
recovery O
plan O
in O
place O
, O
these O
computers O
can O
be O
remotely O
recovered O
. O

However O
, O
there O
may O
still O
be O
an O
outage O
while O
the O
computers O
are O
being O
restored O
. O

In O
the O
world O
of O
malware O
threats O
, O
only O
a O
few O
rare O
examples O
can O
truly O
be O
considered O
groundbreaking O
and O
almost O
peerless O
. O

What O
we O
have O
seen O
in O
Regin O
is O
just O
such O
a O
class O
of O
malware O
. O

Regin B-Entity
is O
an O
extremely O
complex O
piece O
of O
software O
that O
can O
be O
customized O
with O
a O
wide O
range O
of O
different O
capabilities O
which O
can O
be O
deployed O
depending O
on O
the O
target O
. O

It B-Entity
is O
built O
on O
a O
framework O
that O
is O
designed O
to O
sustain B-Action
long-term B-Entity
intelligence-gathering I-Entity
operations I-Entity
by O
remaining B-Action
under B-Modifier
the B-Entity
radar I-Entity
. O

It B-Entity
goes O
to O
extraordinary O
lengths O
to O
conceal B-Action
itself B-Entity
and I-Entity
its I-Entity
activities I-Entity
on I-Entity
compromised I-Entity
computers I-Entity
. O

Its O
stealth O
combines O
many O
of O
the O
most O
advanced O
techniques O
that O
we O
have O
ever O
seen O
in O
use O
. O

The B-Entity
main I-Entity
purpose I-Entity
of I-Entity
Regin I-Entity
is B-Action
intelligence B-Entity
gathering I-Entity
and O
it B-Entity
has O
been O
implicated B-Action
in B-Modifier
data B-Entity
collection I-Entity
operations I-Entity
against I-Entity
government I-Entity
organizations I-Entity
, I-Entity
infrastructure I-Entity
operators I-Entity
, I-Entity
businesses I-Entity
, I-Entity
academics I-Entity
, I-Entity
and I-Entity
private I-Entity
individuals I-Entity
. O

The O
level O
of O
sophistication O
and O
complexity O
of O
Regin O
suggests O
that O
the O
development O
of O
this O
threat O
could O
have O
taken O
well-resourced O
teams O
of O
developers O
many O
months O
or O
years O
to O
develop O
and O
maintain O
. O

Regin O
is O
a O
multi-staged O
, O
modular O
threat O
, O
meaning O
that O
it O
has O
a O
number O
of O
components O
, O
each O
depending O
on O
others O
, O
to O
perform O
attack O
operations O
. O

This O
modular O
approach O
gives O
flexibility O
to O
the O
threat O
operators O
as O
they O
can O
load O
custom O
features O
tailored O
to O
individual O
targets O
when O
required O
. O

Some O
custom O
payloads O
are O
very O
advanced O
and O
exhibit O
a O
high O
degree O
of O
expertise O
in O
specialist O
sectors O
. O

The B-Entity
modular I-Entity
design I-Entity
also O
makes B-Action
analysis B-Entity
of I-Entity
the I-Entity
threat I-Entity
difficult I-Entity
, O
as O
all O
components O
must O
be O
available O
in O
order O
to O
fully O
understand O
it O
. O

This O
modular O
approach O
has O
been O
seen O
in O
other O
sophisticated O
malware O
families O
such O
as O
Flamer O
and O
Weevil O
( O
The O
Mask O
) O
, O
while O
the O
multi-stage O
loading O
architecture O
is O
similar O
to O
that O
seen O
in O
the O
Duqu/Stuxnet O
family O
of O
threats O
. O

Regin O
is O
different O
to O
what O
are O
commonly O
referred O
to O
as O
'' O
traditional O
'' O
advanced O
persistent O
threats O
( O
APTs O
) O
, O
both O
in O
its O
techniques O
and O
ultimate O
purpose O
. O

APTs B-Entity
typically O
seek B-Action
specific B-Entity
information I-Entity
, I-Entity
usually I-Entity
intellectual I-Entity
property I-Entity
. O

Regin O
's O
purpose O
is O
different O
. O

It B-Entity
is B-Action
used I-Action
for B-Modifier
the B-Entity
collection I-Entity
of I-Entity
data I-Entity
and O
continuous O
monitoring B-Action
of B-Modifier
targeted B-Entity
organizations I-Entity
or I-Entity
individuals I-Entity
. O

This O
report O
provides O
a O
technical O
analysis O
of O
Regin O
based O
on O
a O
number O
of O
identified O
samples O
and O
components O
. O

This O
analysis O
illustrates O
Regin O
's O
architecture O
and O
the O
many O
payloads O
at O
its O
disposal O
. O

Regin O
is O
a O
multi-purpose O
data O
collection O
tool O
which O
dates O
back O
several O
years O
. O

Symantec O
first O
began O
looking O
into O
this O
threat O
in O
the O
fall O
of O
2013 O
. O

Multiple O
versions O
of O
Regin O
were O
found O
in O
the O
wild O
, O
targeting O
several O
corporations O
, O
institutions O
, O
academics O
, O
and O
individuals O
. O

Regin B-Entity
has O
a O
wide O
range O
of O
standard O
capabilities O
, O
particularly O
around O
monitoring B-Action
targets B-Entity
and O
stealing B-Action
data B-Entity
. O

It O
also O
has O
the O
ability O
to O
load O
custom O
features O
tailored O
to O
individual O
targets O
. O

Some O
of O
Regin O
's O
custom O
payloads O
point O
to O
a O
high O
level O
of O
specialist O
knowledge O
in O
particular O
sectors O
, O
such O
as O
telecoms O
infrastructure O
software O
, O
on O
the O
part O
of O
the O
developers O
. O

Regin B-Entity
is O
capable O
of O
installing B-Action
a B-Entity
large I-Entity
number I-Entity
of I-Entity
additional I-Entity
payloads I-Entity
, O
some O
highly O
customized O
for O
the O
targeted O
computer O
. O

The B-Entity
threat I-Entity
's I-Entity
standard I-Entity
capabilities I-Entity
include B-Action
several B-Entity
remote I-Entity
access I-Entity
Trojan I-Entity
( I-Entity
RAT I-Entity
) I-Entity
features I-Entity
, O
such O
as O
capturing B-Action
screenshots B-Entity
and O
taking B-Action
control B-Entity
of I-Entity
the I-Entity
mouse I-Entity
's I-Entity
point-and-click I-Entity
functions I-Entity
. O

Regin B-Entity
is O
also O
configured O
to O
steal B-Action
passwords B-Entity
, O
monitor B-Action
network B-Entity
traffic I-Entity
, O
and O
gather B-Action
information B-Entity
on I-Entity
processes I-Entity
and I-Entity
memory I-Entity
utilization I-Entity
. O

It B-Entity
can O
also O
scan B-Action
for B-Modifier
deleted B-Entity
files I-Entity
on I-Entity
an I-Entity
infected I-Entity
computer I-Entity
and O
retrieve B-Action
them B-Entity
. O

More O
advanced O
payload O
modules O
designed O
with O
specific O
goals O
in O
mind O
were O
also O
found O
in O
our O
investigations O
. O

For O
example O
, O
one B-Entity
module I-Entity
was O
designed O
to O
monitor B-Action
network B-Entity
traffic I-Entity
to I-Entity
Microsoft I-Entity
Internet I-Entity
Information I-Entity
Services I-Entity
( I-Entity
IIS I-Entity
) I-Entity
web I-Entity
servers I-Entity
, O
another B-Entity
was O
designed O
to O
collect B-Action
administration B-Entity
traffic I-Entity
for I-Entity
mobile I-Entity
telephony I-Entity
base I-Entity
station I-Entity
controllers I-Entity
, O
while O
another B-Entity
was O
created O
specifically O
for O
parsing B-Action
mail B-Entity
from I-Entity
Exchange I-Entity
databases I-Entity
. O

Regin B-Entity
goes O
to O
some O
lengths O
to O
hide B-Action
the B-Entity
data I-Entity
it B-Entity
is B-Action
stealing I-Action
. O

Valuable B-Entity
target I-Entity
data I-Entity
is B-Action
often I-Action
not I-Action
written I-Action
to B-Modifier
disk B-Entity
. O

In O
some O
cases O
, O
Symantec O
was O
only O
able O
to O
retrieve O
the O
threat O
samples O
but O
not O
the O
files O
containing O
stolen O
data O
. O

Symantec O
is O
aware O
of O
two O
distinct O
versions O
of O
Regin O
. O

Version O
1.0 O
appears O
to O
have O
been O
used O
from O
at O
least O
2008 O
to O
2011 O
. O

Version O
2.0 O
has O
been O
used O
from O
2013 O
onwards O
, O
though O
it O
may O
have O
possibly O
been O
used O
earlier O
. O

Version O
1.0 O
appears O
to O
have O
been O
abruptly O
withdrawn O
from O
circulation O
in O
2011 O
. O

Version O
1.0 O
samples O
found O
after O
this O
date O
seem O
to O
have O
been O
improperly O
removed O
or O
were O
no O
longer O
accessible O
to O
the O
attackers O
for O
removal O
. O

This O
report O
is O
based O
primarily O
on O
our O
analysis O
of O
Regin O
version O
1.0 O
. O

We O
also O
touch O
on O
version O
2.0 O
, O
for O
which O
we O
only O
recovered O
64-bit O
files O
. O

Symantec O
has O
assigned O
these O
version O
identifiers O
as O
they O
are O
the O
only O
two O
versions O
that O
have O
been O
acquired O
. O

Regin O
likely O
has O
more O
than O
two O
versions O
. O

There O
may O
be O
versions O
prior O
to O
1.0 O
and O
versions O
between O
1.0 O
and O
2.0 O
. O

The O
Regin O
operators O
do O
not O
appear O
to O
focus O
on O
any O
specific O
industry O
sector O
. O

Regin O
infections O
have O
been O
observed O
in O
a O
variety O
of O
organizations O
, O
including O
private O
companies O
, O
government O
entities O
, O
and O
research O
institutes O
. O

Infections O
are O
also O
geographically O
diverse O
, O
having O
been O
identified O
mainly O
in O
10 O
different O
regions O
. O

The O
infection O
vector O
varies O
among O
targets O
. O

A O
reproducible O
infection O
vector O
is O
unconfirmed O
at O
time O
of O
writing O
. O

Targets O
may O
be O
tricked O
into O
visiting O
spoofed O
versions O
of O
well- O
known O
websites O
and O
the B-Entity
threat I-Entity
may O
be B-Action
installed I-Action
through B-Modifier
a B-Entity
web I-Entity
browser I-Entity
or O
by B-Modifier
exploiting B-Entity
an I-Entity
application I-Entity
. O

On O
one O
computer O
, O
log O
files O
show O
that O
Regin B-Entity
originated B-Action
from B-Modifier
Yahoo B-Entity
! I-Entity
Instant I-Entity
Messenger I-Entity
through B-Modifier
an B-Entity
unconfirmed I-Entity
exploit I-Entity
. O

Regin O
has O
a O
six-stage O
architecture O
. O

The B-Entity
initial I-Entity
stages I-Entity
involve B-Action
the B-Entity
installation I-Entity
and I-Entity
configuration I-Entity
of I-Entity
the I-Entity
threat I-Entity
's I-Entity
internal I-Entity
services I-Entity
. O

The O
later O
stages O
bring O
Regin O
's O
main O
payloads O
into O
play O
. O

This O
section O
presents O
a O
brief O
overview O
of O
the O
format O
and O
purpose O
of O
each O
stage O
. O

The O
most O
interesting O
stages O
are O
the O
executables O
and O
data O
files O
stored O
in O
Stages O
4 O
and O
5 O
. O

The O
initial O
Stage O
1 O
driver O
is O
the O
only O
plainly O
visible O
code O
on O
the O
computer O
. O

All B-Entity
other I-Entity
stages I-Entity
are B-Action
stored I-Action
as B-Modifier
encrypted B-Entity
data I-Entity
blobs I-Entity
, O
as O
a O
file O
or O
within O
a O
non-traditional O
file O
storage O
area O
such O
as O
the O
registry O
, O
extended O
attributes O
, O
or O
raw O
sectors O
at O
the O
end O
of O
disk O
. O

Symantec O
Security O
Response O
has O
not O
obtained O
the O
Regin O
dropper O
at O
the O
time O
of O
writing O
. O

Symantec O
believes O
that O
once O
the B-Entity
dropper I-Entity
is O
executed O
on O
the O
target O
's O
computer O
, O
it B-Entity
will O
install B-Action
and O
execute B-Action
Stage B-Entity
1 I-Entity
. O

It O
's O
likely O
that O
Stage B-Entity
0 I-Entity
is O
responsible O
for O
setting B-Action
up I-Action
various B-Entity
extended I-Entity
attributes I-Entity
and/or I-Entity
registry I-Entity
keys I-Entity
and I-Entity
values I-Entity
that I-Entity
hold I-Entity
encoded I-Entity
versions I-Entity
of I-Entity
stages I-Entity
2 I-Entity
, I-Entity
3 I-Entity
, I-Entity
and I-Entity
potentially I-Entity
stages I-Entity
4 I-Entity
and I-Entity
onwards I-Entity
. O

The O
dropper O
could O
be O
transient O
rather O
than O
acting O
as O
an O
executable O
file O
and O
may O
possibly O
be O
part O
of O
the O
infection O
vector O
exploit O
code O
. O

Stage B-Entity
1 I-Entity
is B-Action
the B-Entity
initial I-Entity
load I-Entity
point I-Entity
for I-Entity
the I-Entity
threat I-Entity
. O

There O
are O
two O
known O
Stage O
1 O
file O
names O
: O
These O
are O
kernel B-Entity
drivers I-Entity
that O
load B-Action
and I-Action
execute I-Action
Stage B-Entity
2 I-Entity
. O

These O
kernel B-Entity
drivers I-Entity
may O
be O
registered O
as O
a O
system O
service O
or O
may O
have O
an O
associated O
registry O
key O
to O
load B-Action
the B-Entity
driver I-Entity
while O
the O
computer O
is O
starting O
up O
. O

Stage B-Entity
1 I-Entity
simply O
reads B-Action
and I-Action
executes I-Action
Stage B-Entity
2 I-Entity
from B-Modifier
a B-Entity
set I-Entity
of I-Entity
NTFS I-Entity
extended I-Entity
attributes I-Entity
. O

If O
no O
extended O
attributes O
are O
found O
, O
Stage B-Entity
2 I-Entity
is B-Action
executed I-Action
from B-Modifier
a B-Entity
set I-Entity
of I-Entity
registry I-Entity
keys I-Entity
. O

Stage B-Entity
2 I-Entity
is O
a O
kernel B-Entity
driver I-Entity
that O
simply O
extracts B-Action
, I-Action
installs I-Action
and I-Action
runs I-Action
Stage B-Entity
3 I-Entity
. O

Stage B-Entity
2 I-Entity
is O
not O
stored O
in O
the O
traditional O
file O
system O
, O
but O
is B-Action
encrypted I-Action
within B-Modifier
an B-Entity
extended I-Entity
attribute I-Entity
or I-Entity
a I-Entity
registry I-Entity
key I-Entity
blob I-Entity
. O

Stage B-Entity
2 I-Entity
can O
be B-Action
found I-Action
encrypted I-Action
in O
: O
This B-Entity
stage I-Entity
can O
also O
hide B-Action
running B-Entity
instances I-Entity
of I-Entity
Stage I-Entity
1 I-Entity
. O

Once O
this O
happens O
, O
there O
are O
no O
remaining O
plainly O
visible O
code O
artifacts O
. O

Similar O
to O
previous O
stages O
, O
Stage B-Entity
2 I-Entity
finds B-Action
and I-Action
loads I-Action
an B-Entity
encrypted I-Entity
version I-Entity
of I-Entity
Stage I-Entity
3 I-Entity
from B-Modifier
either B-Entity
NTFS I-Entity
extended I-Entity
attributes I-Entity
or I-Entity
a I-Entity
registry I-Entity
key I-Entity
blob I-Entity
. O

Stage B-Entity
2 I-Entity
can O
also O
monitor B-Action
the B-Entity
state I-Entity
of I-Entity
the I-Entity
threat I-Entity
. O

This B-Entity
stage I-Entity
drops B-Action
the B-Entity
file I-Entity
msrdc64.dat I-Entity
, O
which O
appears O
to O
always O
be O
512 O
bytes O
in O
size O
. O

The O
first O
two O
bytes O
are O
used O
and O
the O
remaining O
bytes O
are O
set O
to O
zero O
. O

The O
second O
byte O
indicates O
the O
exclusive O
maximum O
number O
of O
instances O
allowed O
to O
run O
, O
which O
is O
set O
to O
two O
. O

This O
means O
no O
more O
than O
one O
instance O
should O
run O
at O
any O
time O
. O

The O
first O
byte O
indicates O
how O
many O
instances O
were O
run O
or O
attempted O
to O
run O
. O

Therefore O
, O
the O
potential O
combinations O
for O
the O
first O
two O
bytes O
are O
: O
Stage O
3 O
is O
a O
kernel O
mode O
DLL O
and O
is O
not O
stored O
in O
the O
traditional O
file O
system O
. O

Instead O
, O
this B-Entity
file I-Entity
is B-Action
encrypted I-Action
within B-Modifier
an B-Entity
extended I-Entity
attribute I-Entity
or I-Entity
registry I-Entity
key I-Entity
blob I-Entity
. O

Stage O
3 O
can O
be O
found O
in O
the O
following O
locations O
: O
The O
file O
is O
six O
to O
seven O
times O
the O
size O
of O
the O
driver O
in O
Stage O
2 O
. O

In O
addition O
to O
loading B-Action
and I-Action
executing I-Action
Stage B-Entity
4 I-Entity
, O
Stage B-Entity
3 I-Entity
offers O
a O
framework O
for O
the O
higher O
level O
stages O
. O

Stages O
3 O
and O
above O
are O
based O
on O
a O
modular O
framework O
of O
code O
modules O
. O

These O
modules O
offer O
functions O
through O
a O
private O
, O
custom O
interface O
. O

Each O
file O
in O
stages O
3 O
and O
above O
can O
'' O
export O
'' O
functionality O
to O
other O
parts O
of O
Regin O
. O

In O
the O
case O
of O
Stage O
3 O
, O
the O
following O
primitives O
are O
offered O
: O
These O
primitives O
are O
provided O
through O
a O
custom O
export O
methodology O
. O

The O
Stage O
3 O
DLL O
exports O
a O
wide O
range O
of O
functionality O
through O
a O
custom O
export O
methodology O
. O

The O
interface O
used O
to O
export O
functionality O
does O
not O
make O
use O
of O
the O
traditional O
Windows O
DLL O
export O
mechanism O
by O
name O
or O
ordinal O
. O

Exported O
Regin O
methods O
are O
referenced O
by O
a O
tuple O
consisting O
of O
a O
major O
and O
minor O
number O
. O

Stage O
3 O
exports O
hundreds O
of O
methods O
, O
organized O
into O
12 O
different O
major O
groups O
. O

The O
numbers O
used O
vary O
across O
versions O
. O

We O
acquired O
artifacts O
using O
two O
different O
numbering O
schemes O
. O

Table O
2 O
is O
an O
example O
listing O
. O

With O
Regin O
's O
modular O
nature O
, O
Stage O
4 O
kernel O
modules O
and O
Stage O
5 O
user O
modules O
( O
payloads O
) O
can O
provide O
functionality O
and O
export O
routines O
using O
the O
same O
major O
and O
minor O
numbering O
scheme O
. O

The B-Entity
files I-Entity
for I-Entity
Stage I-Entity
4 I-Entity
, O
which O
are B-Action
loaded I-Action
by O
Stage B-Entity
3 I-Entity
, O
consist O
of O
a O
user-mode O
orchestrator O
and O
multiple O
kernel O
payload O
modules O
. O

They O
are O
stored O
in O
two O
EVFS O
containers O
as O
files O
: O
• O
% O
System O
% O
\config\SystemAudit.Evt O
: O
Contains O
Stage O
4 O
kernel O
drivers O
, O
which O
constitute O
the O
kernel O
mode O
part O
of O
Regin O
's O
payload O
. O

• O
% O
System O
% O
\config\SecurityAudit.Evt O
: O
Contains O
a O
user O
mode O
version O
of O
Stage O
3 O
. O

The O
files O
are O
injected O
into O
services.exe O
. O

When O
the B-Entity
attackers I-Entity
who I-Entity
operated I-Entity
Regin I-Entity
cleaned B-Action
up I-Action
compromised B-Entity
computers I-Entity
once O
they O
were O
finished O
with O
them O
, O
they O
often O
failed O
to O
remove O
Stage O
4 O
and O
5 O
artifacts O
from O
the O
system O
. O

Stage O
4 O
also O
uses O
the O
same O
export O
methodology O
described O
in O
Stage O
3 O
. O

Stage O
5 O
consists O
of O
the O
main O
Regin O
payload O
functionality O
. O

The B-Entity
files I-Entity
for I-Entity
Stage I-Entity
5 I-Entity
are B-Action
injected I-Action
into B-Modifier
services.exe B-Entity
by O
Stage B-Entity
4 I-Entity
. O

Stage O
5 O
files O
are O
EVFS O
containers O
containing O
other O
files O
: O
Regin O
's O
payload O
involves O
the O
DLLs O
contained O
in O
the O
SystemLog.evt O
EVFS O
container O
. O

The O
payload O
functionality O
differs O
depending O
on O
the O
targeted O
computer O
. O

Custom O
payload O
files O
will O
likely O
be O
delivered O
for O
each O
specific O
environment O
. O

Example O
payload O
functionality O
seen O
to O
date O
includes O
: O
Regin B-Entity
stores B-Action
data B-Entity
files I-Entity
and I-Entity
payloads I-Entity
on B-Modifier
disk B-Entity
in B-Modifier
encrypted B-Entity
virtual I-Entity
file I-Entity
system I-Entity
files I-Entity
. O

Such O
files O
are O
accessed O
by O
the O
major O
routines O
3Dh O
. O

Files B-Entity
stored I-Entity
inside I-Entity
EVFS I-Entity
containers I-Entity
are B-Action
encrypted I-Action
with B-Modifier
a B-Entity
variant I-Entity
of I-Entity
RC5 I-Entity
, O
using B-Modifier
64-bit B-Entity
blocks I-Entity
and I-Entity
20 I-Entity
rounds I-Entity
. O

The B-Entity
encryption I-Entity
mode I-Entity
is B-Action
reverse B-Entity
cipher I-Entity
feedback I-Entity
( I-Entity
CFB I-Entity
) I-Entity
. O

Known O
extensions O
for O
EVFS O
containers O
are O
*.evt O
and O
*.imd O
. O

The O
structure O
of O
a O
container O
is O
similar O
to O
the O
FAT O
file O
system O
. O

One O
major O
difference O
is O
that O
files O
do O
not O
have O
a O
name O
; O
instead O
, O
they O
're O
identified O
using O
a O
binary O
tag O
. O

The O
tag O
itself O
is O
the O
concatenation O
of O
a O
major O
number O
and O
a O
minor O
number O
. O

The O
major O
number O
typically O
indicates O
the O
major O
function O
group O
that O
will O
handle O
the O
file O
. O

A O
container O
starts O
with O
the O
header O
in O
Table O
3 O
( O
little-endian O
ordering O
) O
. O

The O
header O
is O
followed O
by O
the O
file O
entry O
table O
( O
Table O
4 O
) O
. O

Each O
file O
entry O
is O
13h+taglen O
bytes O
long O
. O

The O
sectors O
follow O
( O
Table O
5 O
) O
. O

A O
sector O
of O
sectsize O
bytes O
starts O
with O
a O
DWORD O
pointing O
to O
the O
next O
sector O
( O
if O
the O
file O
does O
not O
fit O
within O
single O
sector O
) O
, O
followed O
by O
sectsize-4 O
bytes O
of O
payload O
data O
. O

As O
explained O
above O
, O
the B-Entity
files I-Entity
are B-Action
encrypted I-Action
. O

Other O
layers O
of O
encryption O
and O
compression O
may O
also O
be O
in O
place O
, O
although O
those O
would O
be O
handled O
by O
higher O
level O
components O
. O

Regin B-Entity
's I-Entity
C I-Entity
& I-Entity
C I-Entity
operations I-Entity
are B-Action
extensive B-Entity
. O

These O
backchannel B-Entity
operations I-Entity
are B-Action
bidirectional B-Entity
, O
which O
means O
either O
the B-Entity
attackers I-Entity
can O
initiate B-Action
communications B-Entity
with B-Modifier
compromised B-Entity
computers I-Entity
on B-Modifier
the B-Entity
border I-Entity
network I-Entity
or O
the B-Entity
compromised I-Entity
computers I-Entity
can O
initiate B-Action
communications B-Entity
with B-Modifier
the B-Entity
attacker I-Entity
. O

Furthermore O
, O
compromised B-Entity
computers I-Entity
can O
serve B-Action
as B-Modifier
a B-Entity
proxy I-Entity
for I-Entity
other I-Entity
infections I-Entity
and O
command B-Entity
and I-Entity
control I-Entity
can O
also O
happen B-Action
in B-Modifier
a B-Entity
peer-to-peer I-Entity
fashion I-Entity
. O

All B-Entity
communications I-Entity
are B-Action
strongly I-Action
encrypted I-Action
and O
can O
happen B-Action
in B-Modifier
a B-Entity
two-stage I-Entity
fashion I-Entity
where O
the B-Entity
attacker I-Entity
may O
contact B-Action
a B-Entity
compromised I-Entity
computer I-Entity
using B-Modifier
one B-Entity
channel I-Entity
to O
instruct B-Action
it B-Entity
to O
begin B-Action
communications B-Entity
on B-Modifier
a B-Entity
different I-Entity
channel I-Entity
. O

Four O
transport O
protocols O
are O
available O
for O
C O
& O
C O
: O
• O
ICMP O
: O
Payload B-Entity
information I-Entity
can O
be B-Action
encoded I-Action
and I-Action
embedded I-Action
in B-Modifier
lieu I-Modifier
of I-Modifier
legitimate B-Entity
ICMP/ping I-Entity
data I-Entity
. O

The O
string O
'shit O
' O
is O
scattered O
in O
the O
packet O
for O
data O
validation O
. O

In O
addition O
, O
CRC O
checks O
use O
the O
seed O
'31337 O
' O
. O

• O
HTTP O
: O
Payload B-Entity
information I-Entity
can O
be B-Action
encoded I-Action
and I-Action
embedded I-Action
within B-Modifier
cookie B-Entity
data I-Entity
under O
the O
names O
SESSID O
, O
SMSWAP O
, O
TW O
, O
WINKER O
, O
TIMESET O
, O
LASTVISIT O
, O
AST.NETSessionId O
, O
PHPSESSID O
, O
or O
phpAdsd O
. O

This O
information O
can O
be O
combined O
with O
another O
cookie O
for O
validation O
under O
the O
names O
USERIDTK O
, O
UID O
, O
GRID O
, O
UID=PREF=ID O
, O
TM O
, O
utma O
, O
LM O
, O
TMARK O
, O
VERSION O
, O
or O
CURRENT O
. O

The B-Entity
C I-Entity
& I-Entity
C I-Entity
operations I-Entity
are B-Action
undertaken I-Action
by O
various B-Entity
modules I-Entity
, O
including O
major O
groups O
C373h O
, O
19h O
, O
9 O
, O
as O
well O
as O
Stage O
5 O
payloads O
, O
such O
as O
C375h O
and O
1Bh O
. O

Regin B-Entity
logs B-Action
data B-Entity
to B-Modifier
the B-Entity
ApplicationLog.dat I-Entity
file I-Entity
. O

This O
file O
is O
not O
an O
encrypted O
container O
, O
but O
it B-Entity
is B-Action
encrypted I-Action
and I-Action
compressed I-Action
. O

Regin B-Entity
can O
be B-Action
distributed I-Action
with B-Modifier
various B-Entity
payload I-Entity
modules I-Entity
or O
receive B-Action
payload B-Entity
modules I-Entity
after B-Modifier
infection B-Entity
. O

The O
extensible O
nature O
of O
Regin O
and O
its O
custom O
payloads O
indicate O
that O
many O
additional O
payloads O
are O
likely O
to O
exist O
in O
order O
to O
enhance O
Regin O
's O
capabilities O
. O

Furthermore O
, O
we O
have O
found O
data O
files O
accompanying O
payload O
modules O
that O
have O
not O
been O
recovered O
. O

The O
following O
table O
describes O
the O
Stage O
4 O
kernel O
payload O
modules O
and O
Stage O
5 O
user O
mode O
payload O
modules O
, O
which O
we O
have O
seen O
several O
variants O
of O
Regin O
use O
. O

The B-Entity
IIS I-Entity
web I-Entity
server I-Entity
log I-Entity
stealing B-Action
module B-Entity
, O
27E9h B-Entity
, O
is O
an O
example O
of O
a B-Entity
payload I-Entity
module I-Entity
that O
was B-Action
installed I-Action
after B-Modifier
the B-Entity
initial I-Entity
infection I-Entity
and O
was O
specifically O
deployed O
for O
a O
particular O
target O
. O

Only O
a O
small O
amount O
of O
the O
64-bit O
Regin O
files O
have O
been O
recovered O
. O

These O
samples O
may O
represent O
version O
2.0 O
or O
their O
differences O
may O
possibly O
be O
solely O
specific O
to O
64-bit O
versions O
of O
Regin O
. O

We O
also O
recovered O
files O
from O
infected O
computers O
that O
may O
or O
may O
not O
be O
associated O
with O
64-bit O
Regin O
, O
including O
several O
variants O
of O
svcsstat.exe B-Entity
, O
a B-Entity
file I-Entity
that O
aims O
to O
retrieve B-Action
binary B-Entity
data I-Entity
over B-Modifier
pipes B-Entity
or O
sockets B-Entity
and O
execute B-Action
the B-Entity
data I-Entity
. O

The O
recovered O
files O
do O
not O
appear O
to O
fundamentally O
vary O
from O
their O
32-bit O
counterparts O
, O
apart O
from O
a O
few O
noteworthy O
differences O
. O

The O
32-bit O
and O
64-bit O
versions O
of O
Regin O
use O
different O
file O
names O
. O

These O
differences O
are O
shown O
in O
the O
first O
section O
of O
this O
paper O
as O
well O
as O
in O
the O
appendix O
. O

Most O
importantly O
, O
in O
the O
64-bit O
version O
of O
Regin O
, O
the O
names O
of O
containers O
are O
changed O
: O
The O
64-bit O
version O
of O
Regin O
's O
Stage O
1 O
( O
wshnetc.dll O
) O
is O
no O
longer O
a O
kernel O
mode O
driver O
, O
as O
drivers O
under O
64-bit O
Windows O
must O
be O
signed O
. O

Instead O
, O
Stage B-Entity
1 I-Entity
is O
a O
user O
mode O
DLL O
loaded B-Action
as B-Modifier
a B-Entity
Winsock I-Entity
helper I-Entity
when B-Modifier
the B-Entity
computer I-Entity
is I-Entity
starting I-Entity
up I-Entity
. O

Rather O
than O
loading O
Stage O
2 O
from O
an O
NTFS O
extended O
attribute O
, O
Stage B-Entity
1 I-Entity
looks B-Action
for B-Modifier
the B-Entity
last I-Entity
partition I-Entity
( I-Entity
in I-Entity
terms I-Entity
of I-Entity
physical I-Entity
location I-Entity
) I-Entity
on I-Entity
disk I-Entity
and O
searches B-Action
for B-Modifier
the B-Entity
payload I-Entity
in B-Modifier
the B-Entity
raw I-Entity
sectors I-Entity
in I-Entity
this I-Entity
area I-Entity
of I-Entity
the I-Entity
disk I-Entity
. O

The O
64-bit O
Regin O
's O
Stage O
3 O
has O
not O
been O
recovered O
. O

We O
believe O
that O
it O
may O
not O
exist O
, O
as O
the O
32-bit O
version O
is O
a O
driver O
. O

Stage O
4 O
is O
an O
orchestrator O
just O
like O
its O
32-bit O
counterpart O
and O
it O
uses O
the O
same O
major O
and O
minor O
values O
to O
export O
functionality O
. O

No O
Stage O
5 O
payload O
modules O
have O
been O
recovered O
. O

Regin B-Entity
is O
a O
highly-complex O
threat O
which O
has O
been B-Action
used I-Action
for B-Modifier
large-scale B-Entity
data I-Entity
collection I-Entity
or I-Entity
intelligence I-Entity
gathering I-Entity
campaigns I-Entity
. O

The O
development O
and O
operation O
of O
this O
threat O
would O
have O
required O
a O
significant O
investment O
of O
time O
and O
resources O
. O

Threats O
of O
this O
nature O
are O
rare O
and O
are O
only O
comparable O
to O
the O
Stuxnet/Duqu O
family O
of O
malware O
. O

The O
discovery O
of O
Regin O
serves O
to O
highlight O
how O
significant O
investments O
continue O
to O
be O
made O
into O
the O
development O
of O
tools O
for O
use O
in O
intelligence O
gathering O
. O

Many O
components O
of O
Regin O
have O
still O
gone O
undiscovered O
and O
additional O
functionality O
and O
versions O
may O
exist O
. O

Symantec O
and O
Norton O
products O
detect O
this O
threat O
as O
Backdoor.Regin O
. O

Regin O
's O
data O
files O
are O
classified O
as O
Stage O
5 O
components O
and O
are O
contained O
in O
an O
EVFS O
container O
. O

As O
the O
data O
files O
are O
stored O
in O
a O
container O
, O
they O
do O
not O
have O
names O
. O

Just O
like O
Stage O
5 O
modules O
, O
they O
are O
referenced O
by O
their O
filetag O
, O
which O
is O
the O
aggregation O
of O
the O
major O
and O
minor O
identifiers O
. O

The O
major O
identifier O
indicates O
which O
major O
routine O
group O
likely O
handles O
or O
creates O
the O
file O
. O

Not O
all O
data O
files O
have O
been O
recovered O
, O
so O
the O
information O
remains O
incomplete O
. O

Data O
files O
associated O
with O
Stage O
4 O
kernel O
modules O
have O
not O
been O
recovered O
Table O
8 O
lists O
recovered O
data O
files O
used O
by O
Stage O
5 O
modules O
. O

The O
associated O
modules O
that O
supposedly O
manipulate O
those O
data O
files O
were O
not O
recovered O
. O

The O
following O
details O
can O
be O
used O
to O
help O
determine O
whether O
you O
have O
been O
impacted O
by O
this O
threat O
. O

One O
of O
the O
questions O
which O
comes O
up O
in O
the O
months O
after O
big O
security O
whitepaper O
disclosures O
is O
: O
where O
are O
they O
now O
? O
In O
other O
words O
, O
what O
happened O
to O
the O
operators O
, O
tools O
, O
and O
infrastructure O
which O
was O
revealed O
in O
the O
reports O
, O
blog-posts O
, O
and O
press O
interviews O
. O

Did O
they O
continue O
on O
as O
before O
, O
did O
they O
re-build O
the O
disclosed O
infrastructure O
and O
tools O
, O
did O
they O
go O
away O
and O
get O
jobs O
in O
another O
line O
of O
work O
? O
In O
some O
cases O
, O
the O
disclosure O
had O
little O
, O
if O
any O
impact O
on O
the O
operation O
. O

For O
example O
, O
after O
the O
McAfee O
ShadyRAT O
report O
in O
2011 O
, O
there O
was O
absolutely O
no O
change O
in O
the O
attacks O
from O
the O
group O
behind O
this O
. O

However O
, O
when O
Mandiant O
released O
their O
APT1 O
report O
in O
2013 O
, O
there O
was O
a O
noticeable O
reduction O
in O
activity O
from O
the O
group O
– O
and O
much O
of O
the O
tools O
and O
infrastructure O
has O
not O
been O
seen O
since O
. O

In O
the O
September O
2010 O
issue O
of O
Foreign O
Affairs O
magazine O
, O
former O
US O
Deputy O
Secretary O
of O
Defense O
William O
J. O
Lynn O
discussed O
a O
cyber-attack O
which O
happened O
two O
years O
previously O
on O
the O
DoD's O
classified O
computer O
networks O
. O

Lynn O
described O
how O
a O
foreign O
intelligence O
agency O
planted O
malicious O
code O
on O
the O
networks O
with O
the O
aim O
of O
transferring O
data O
to O
servers O
under O
their O
control O
. O

The O
article O
included O
the O
now O
oft-quoted O
phrase O
'digital O
beachhead O
' O
to O
describe O
what O
was O
undoubtedly O
a O
significant O
compromise O
of O
US O
military O
systems O
. O

Further O
reports O
in O
the O
press O
kept O
the O
story O
alive O
in O
2011 O
, O
but O
since O
then O
this O
threat O
has O
received O
remarkably O
little O
attention O
. O

However O
, O
the O
operation O
behind O
the O
attacks O
has O
continued O
with O
little O
modification O
to O
the O
tools O
and O
techniques O
, O
in O
spite O
of O
the O
widespread O
attention O
a O
few O
years O
ago O
. O

They B-Entity
use O
highly O
sophisticated O
malware O
tools O
to O
maintain B-Action
persistent B-Entity
access I-Entity
to I-Entity
their I-Entity
targets I-Entity
. O

These B-Entity
tools I-Entity
can O
be B-Action
used I-Action
for B-Modifier
covert B-Entity
communications I-Entity
in B-Modifier
a B-Entity
number I-Entity
of I-Entity
different I-Entity
modes I-Entity
, O
some B-Entity
of I-Entity
which I-Entity
present B-Action
significant B-Entity
challenges I-Entity
for I-Entity
traditional I-Entity
security I-Entity
technologies I-Entity
to I-Entity
detect I-Entity
. O

There O
are O
some O
threats O
which O
come O
and O
go O
, O
whilst O
there O
are O
others O
which O
are O
permanent O
features O
of O
the O
landscape O
. O

In O
this O
paper O
, O
we O
describe O
the O
tools O
and O
techniques O
of O
one O
of O
the O
most O
sophisticated O
and O
persistent O
threats O
we O
track O
. O

We O
hope O
this O
will O
help O
victims O
identify O
intrusions O
and O
understand O
their O
need O
to O
improve O
defences O
. O

Cyber O
security O
is O
a O
collaborative O
effort O
– O
the O
operation O
described O
in O
this O
paper O
again O
raises O
the O
bar O
for O
the O
security O
community O
in O
their O
efforts O
to O
keep O
up O
with O
the O
attackers O
in O
cyber-space O
. O

When O
antivirus O
back-end O
classification O
platforms O
can O
not O
identify O
a O
malware O
family O
for O
an O
analysed O
malicious O
sample O
, O
they O
assign O
generic O
names O
, O
such O
as O
'' O
Trojan O
Horse O
'' O
or O
'' O
Agent O
'' O
. O

The O
variant O
letters O
are O
also O
assigned O
automatically O
, O
by O
using O
hexavigesimal O
( O
or O
Base26 O
) O
notation O
. O

That O
is O
, O
the O
variant O
letters O
are O
auto-assigned O
starting O
from O
'' O
A O
'' O
, O
followed O
with O
'' O
B O
'' O
, O
and O
so O
on O
until O
'' O
Z O
'' O
. O

Next O
comes O
'' O
AA O
'' O
, O
'' O
AB O
'' O
and O
so O
on O
, O
until O
'' O
ZZ O
'' O
. O

After O
that O
, O
the O
variant O
letters O
start O
from O
'' O
AAA O
'' O
, O
'' O
AAB O
'' O
and O
so O
on O
, O
until O
'' O
ZZZ O
'' O
. O

Back O
in O
2008 O
an O
unknown O
malicious O
file O
was O
discovered O
and O
auto-classified O
as O
'' O
Agent.BTZ O
'' O
, O
meaning O
it O
was O
registered O
as O
unknown O
malicious O
sample O
# O
1,898 O
in O
an O
anti-virus O
classification O
system O
. O

It O
was O
n't O
given O
an O
actual O
name O
, O
only O
a O
generic O
one O
. O

Meanwhile O
, O
internally O
the O
authors O
behind O
this O
malware O
were O
using O
their O
own O
naming O
systems O
- O
with O
specific O
titles O
for O
their O
file O
components O
and O
projects O
such O
as O
'' O
snake O
'' O
, O
'' O
uroburos O
'' O
, O
'' O
sengoku O
'' O
, O
and O
'' O
snark O
'' O
used O
to O
denote O
variants O
of O
their O
framework O
. O

A O
recent O
report O
from O
German O
security O
company O
GData O
described O
a O
sample O
from O
the O
'' O
uroburos O
'' O
variant O
of O
this O
framework O
. O

Their O
report O
revealed O
the O
complex O
nature O
of O
this O
malware O
family O
, O
and O
showed O
that O
the O
operation O
behind O
'' O
Agent.BTZ O
'' O
has O
continued O
. O

As O
a O
result O
of O
this O
disclosure O
, O
we O
are O
also O
releasing O
our O
own O
technical O
analysis O
of O
the O
threat O
, O
including O
a O
timeline O
of O
known O
samples O
, O
known O
Command-and-Control O
( O
C O
& O
C O
) O
servers O
, O
and O
other O
indicators O
to O
aid O
investigators O
in O
discovering O
attacks O
. O

Reverse O
engineering O
of O
recent O
malware O
samples O
shows O
these O
to O
be O
much O
more O
advanced O
variants O
of O
Agent.BTZ O
, O
though O
still O
sharing O
many O
similarities O
and O
encryption O
methods O
with O
the O
original O
. O

Further O
investigation O
allowed O
us O
to O
locate O
related O
samples O
compiled O
between O
2006 O
and O
2014 O
, O
and O
spanning O
across O
several O
distinctive O
generations O
. O

The O
first O
section O
of O
this O
report O
gives O
an O
overview O
of O
the O
samples O
collected O
, O
where O
they O
were O
reported O
and O
the O
timelines O
derived O
from O
their O
analysis O
. O

Snake O
's O
architecture O
turned O
out O
to O
be O
quite O
interesting O
. O

We O
have O
identified O
two B-Entity
distinct I-Entity
variants I-Entity
, O
both O
highly O
flexible O
but O
with O
two O
different O
techniques O
for O
establishing B-Action
and I-Action
maintaining I-Action
a B-Entity
presence I-Entity
on B-Modifier
the B-Entity
target I-Entity
system I-Entity
. O

In O
general O
, O
its O
operation O
relies O
on O
kernel O
mode O
drivers O
, O
making O
it O
a O
rootkit O
. O

It B-Entity
is O
designed O
to O
covertly B-Action
install I-Action
a B-Entity
backdoor I-Entity
on B-Modifier
a B-Entity
compromised I-Entity
system I-Entity
, O
hide B-Action
the B-Entity
presence I-Entity
of I-Entity
its I-Entity
components I-Entity
, O
provide B-Action
a B-Entity
communication I-Entity
mechanism I-Entity
with I-Entity
its I-Entity
C I-Entity
& I-Entity
C I-Entity
servers I-Entity
, O
and O
enable B-Action
an B-Entity
effective I-Entity
data I-Entity
exfiltration I-Entity
mechanism I-Entity
. O

At O
the O
same O
time O
, O
Snake O
exposed O
a O
flexibility O
to O
conduct O
its O
operations O
by O
engaging O
these O
noticeably O
different O
architectures O
. O

In O
the O
first O
model O
, O
the B-Entity
network I-Entity
communications I-Entity
are B-Action
carried I-Action
out I-Action
from B-Modifier
the B-Entity
userland I-Entity
- O
i.e O
. O

the O
area O
of O
the O
computer O
system O
where O
application O
software O
executes O
. O

In O
another O
model O
, O
the B-Entity
network I-Entity
communications I-Entity
are B-Action
handled I-Action
by O
a B-Entity
kernel I-Entity
mode I-Entity
driver I-Entity
- O
i.e O
. O

the O
area O
where O
lower O
level O
system O
code O
such O
as O
device O
drivers O
run O
. O

The B-Entity
choice I-Entity
of I-Entity
what I-Entity
architecture I-Entity
should I-Entity
be I-Entity
used I-Entity
may O
depend B-Action
on I-Action
a B-Entity
specific I-Entity
target I-Entity
's I-Entity
environment I-Entity
, O
allowing O
the O
Snake O
operators O
to O
choose O
the O
most O
suitable O
architecture O
to O
be O
deployed O
. O

In O
both O
architectures O
there O
is O
a B-Entity
kernel I-Entity
mode I-Entity
driver I-Entity
installed B-Action
and O
a B-Entity
usermode I-Entity
DLL I-Entity
injected B-Action
by O
the B-Entity
driver I-Entity
into B-Modifier
the B-Entity
system I-Entity
processes I-Entity
. O

In O
both O
architectures O
, O
there O
is O
both O
32-bit O
and O
64-bit O
code O
involved O
. O

In O
order O
to O
distinguish O
between O
these O
architectures O
, O
we O
will O
call O
them O
the O
usermode-centric O
and O
the O
kernel-centric O
architectures O
respectively O
. O

The O
remainder O
of O
this O
report O
gives O
a O
detailed O
explanation O
of O
how O
the O
two O
Snake O
architectures O
embed O
themselves O
in O
the O
target O
system O
and O
communicate O
with O
the O
outside O
world O
. O

We O
have O
also O
provided O
a O
set O
of O
technical O
indicators O
in O
the O
Appendix O
to O
enable O
organisations O
and O
the O
security O
research O
community O
to O
identify O
compromises O
. O

In O
total O
we O
have O
collected O
over O
100 O
unique O
files O
related O
to O
this O
espionage O
toolkit O
. O

Many O
of O
these O
were O
submitted O
to O
online O
malware O
analysis O
websites O
by O
victims O
and O
investigators O
over O
several O
years O
. O

In O
many O
cases O
the O
source O
country O
information O
of O
the O
submission O
is O
available O
. O

These O
allow O
us O
to O
visualise O
the O
distribution O
of O
countries O
where O
this O
malware O
has O
been O
seen O
: O
Whilst O
this O
view O
is O
likely O
to O
only O
be O
the O
tip O
of O
the O
iceberg O
, O
it O
does O
give O
us O
an O
initial O
insight O
into O
the O
profile O
of O
targets O
for O
the O
Snake O
operations O
. O

Other O
useful O
visualisations O
of O
the O
operations O
come O
from O
the O
compile O
timestamps O
. O

Below O
is O
shown O
a O
table O
with O
a O
count O
of O
the O
number O
of O
files O
in O
our O
sample O
set O
from O
recent O
years O
. O

Two O
samples O
compiled O
in O
late O
January O
2014 O
show O
that O
this O
activity O
is O
ongoing O
. O

Plotting O
the O
day O
of O
the O
week O
in O
which O
the O
samples O
were O
compiled O
shows O
a O
now O
familiar O
pattern O
for O
analysts O
of O
modern O
cyber-attacks O
. O

The O
creators O
of O
the O
malware O
operate O
a O
working O
week O
, O
just O
like O
any O
other O
professional O
. O

The O
single O
sample O
in O
our O
set O
which O
was O
compiled O
on O
a O
Saturday O
is O
an O
outlier O
, O
but O
does O
n't O
alter O
the O
conclusion O
. O

Similarly O
, O
plotting O
the O
hour O
of O
the O
day O
in O
which O
the O
samples O
were O
compiled O
reveals O
another O
human O
pattern O
– O
the O
working O
day O
. O

This O
has O
been O
adjusted O
to O
UTC+4 O
to O
show O
a O
possible O
fit O
to O
the O
operators O
' O
local O
time O
. O

The O
usermode-centric O
architecture O
of O
Snake O
is O
known O
to O
have O
been O
used O
from O
2011 O
till O
2014 O
, O
with O
the O
most O
recent O
sample O
compiled O
on O
January O
28 O
, O
2014 O
. O

With O
this O
architecture O
, O
the B-Entity
Snake I-Entity
driver I-Entity
is O
mainly O
used O
to O
load B-Action
the B-Entity
DLL I-Entity
module I-Entity
into B-Modifier
the B-Entity
usermode I-Entity
processes I-Entity
, O
and O
then O
use B-Action
that B-Entity
module I-Entity
for B-Modifier
the B-Entity
communications I-Entity
. O

One O
of O
the O
analysed O
samples O
exposed O
multiple O
debug O
messages O
and O
source O
control O
check-in O
logs O
. O

It O
is O
not O
clear O
why O
those O
messages O
were O
allowed O
in O
the O
deployed O
driver O
- O
possibly O
an O
operational O
security O
lapse O
. O

However O
, O
they O
give O
some O
insight O
into O
the O
internal O
structure O
of O
the O
source O
code O
. O

For O
example O
, O
the O
analysed O
driver O
gave O
away O
the O
following O
source O
file O
names O
: O
The O
source O
control O
check-in O
log O
examples O
, O
showing O
the O
names O
of O
the O
developers O
to O
be O
'vlad O
' O
and O
'gilg O
' O
: O
It O
also O
exposed O
the O
project O
name O
of O
this O
particular O
variant O
as O
'sengoku O
' O
: O
Now O
it O
's O
time O
to O
execute O
the O
driver O
and O
see O
what O
it O
does O
. O

When O
first O
executed O
, O
the B-Entity
driver I-Entity
creates B-Action
device B-Entity
named I-Entity
\Device\vstor32 I-Entity
with B-Modifier
a B-Entity
symbolic I-Entity
link I-Entity
\DosDevices\vstor32 I-Entity
. O

This B-Entity
device I-Entity
is B-Action
used I-Action
for B-Modifier
userland/kernel B-Entity
communications I-Entity
. O

Next O
, O
it B-Entity
drops B-Action
a B-Entity
DLL I-Entity
into B-Modifier
the B-Entity
% I-Entity
windows I-Entity
% I-Entity
directory I-Entity
- O
the O
DLL O
is O
carried O
in O
the O
body O
of O
the O
driver O
as O
a O
binary O
chunk O
with O
XOR B-Entity
0xAA I-Entity
applied B-Action
on B-Modifier
top I-Modifier
of I-Modifier
it B-Entity
, O
so O
the O
driver O
decrypts O
it O
first O
. O

Depending O
on O
the O
variant O
, O
the B-Entity
DLL I-Entity
is B-Action
dropped I-Action
either O
under B-Modifier
a B-Entity
random I-Entity
name I-Entity
or I-Entity
a I-Entity
hard-coded I-Entity
name I-Entity
, O
such O
as O
mscpx32n.dll O
. O

The O
purpose O
of O
this B-Entity
DLL I-Entity
is O
to O
be B-Action
injected I-Action
into B-Modifier
the B-Entity
user-mode I-Entity
processes I-Entity
. O

Some O
variants O
of O
Snake O
carry O
the O
DLL B-Entity
modules I-Entity
that O
can O
be B-Action
installed I-Action
as B-Modifier
a B-Entity
service I-Entity
, O
to O
be B-Action
run I-Action
within B-Modifier
taskhost.exe B-Entity
or I-Entity
services.exe I-Entity
processes I-Entity
. O

Next O
, O
the B-Entity
driver I-Entity
sets B-Action
up I-Action
the B-Entity
hooks I-Entity
for B-Modifier
the B-Entity
following I-Entity
kernel-mode I-Entity
APIs I-Entity
: O
After O
that O
, O
it B-Entity
calls B-Action
PsSetCreateProcessNotifyRoutine B-Entity
( I-Entity
) I-Entity
in O
order O
to O
be B-Action
notified I-Action
whenever B-Modifier
a B-Entity
new I-Entity
process I-Entity
is I-Entity
started I-Entity
. O

The O
handlers O
of O
the O
hooks O
above O
along O
with O
the O
notification O
callback O
allow O
Snake B-Entity
to O
stay B-Action
persistent B-Entity
on I-Entity
a I-Entity
system I-Entity
, O
being O
able O
to O
infect B-Action
any B-Entity
newly I-Entity
created I-Entity
processes I-Entity
, O
and O
restore B-Action
its B-Entity
driver I-Entity
file I-Entity
in B-Modifier
case I-Modifier
it B-Entity
gets I-Entity
deleted I-Entity
. O

Another B-Entity
set I-Entity
of I-Entity
hooks I-Entity
it B-Entity
sets B-Action
is O
designed O
to O
hide B-Action
the B-Entity
presence I-Entity
of I-Entity
the I-Entity
Snake I-Entity
components I-Entity
on I-Entity
the I-Entity
system I-Entity
: O
The B-Entity
driver I-Entity
then O
watches B-Action
for B-Modifier
all B-Entity
userland I-Entity
processes I-Entity
to B-Modifier
see B-Entity
if I-Entity
they I-Entity
load I-Entity
any I-Entity
web I-Entity
pages I-Entity
. O

As B-Modifier
long I-Modifier
as I-Modifier
the B-Entity
user I-Entity
is I-Entity
not I-Entity
using I-Entity
the I-Entity
Internet I-Entity
, O
Snake B-Entity
stays B-Action
dormant B-Entity
too O
, O
as O
there O
is O
no O
process O
that O
communicates O
with O
the O
web O
servers O
. O

However O
, O
as B-Modifier
soon I-Modifier
as I-Modifier
the B-Entity
user I-Entity
goes I-Entity
online I-Entity
, O
the B-Entity
driver I-Entity
intercepts B-Action
that B-Entity
event I-Entity
and O
then O
immediately O
injects B-Action
the B-Entity
malicious I-Entity
DLL I-Entity
module I-Entity
into B-Modifier
the B-Entity
process I-Entity
that I-Entity
initiated I-Entity
connection I-Entity
( O
the O
browser O
) O
. O

Once O
injected O
, O
the B-Entity
module I-Entity
initiates B-Action
polling B-Entity
from B-Modifier
one B-Entity
of I-Entity
the I-Entity
hard-coded I-Entity
C I-Entity
& I-Entity
C I-Entity
servers I-Entity
. O

The O
purpose O
of O
this B-Entity
behaviour I-Entity
is O
to O
blend B-Action
Snake B-Entity
's I-Entity
traffic I-Entity
with B-Modifier
the B-Entity
browser I-Entity
traffic I-Entity
, O
bypassing B-Action
the B-Entity
firewalls I-Entity
, O
and O
keeping B-Action
a B-Entity
low I-Entity
profile I-Entity
at O
the O
same O
time O
. O

By O
communicating O
from O
within O
a O
process O
that O
also O
communicates O
, O
even O
a O
technically O
savvy O
user O
will O
find O
it O
challenging O
to O
detect O
Snake O
traffic O
among O
legitimate O
traffic O
. O

The O
reason O
behind O
such O
difficulty O
is O
because O
modern O
web O
pages O
often O
fetch O
pages O
from O
the O
different O
web O
servers O
, O
including O
such O
data O
as O
additional O
scripts O
, O
CSS O
templates O
, O
advertising O
contents O
, O
analytics O
data O
, O
blogs O
, O
social O
networking O
data O
, O
etc O
. O

When O
intercepted O
with O
the O
purpose O
of O
analysis O
, O
such O
traffic O
may O
literally O
represent O
itself O
hundreds O
of O
DNS O
and O
HTTP O
requests O
made O
when O
a O
popular O
website O
, O
such O
as O
a O
news O
website O
is O
open O
. O

Hiding B-Action
a B-Entity
few I-Entity
DNS/HTTP I-Entity
requests I-Entity
among B-Modifier
busy B-Entity
network I-Entity
traffic I-Entity
allows O
Snake B-Entity
rootkit I-Entity
to O
stay B-Action
unnoticed B-Entity
. O

In O
order O
to O
test O
Snake O
's O
communications O
with O
the O
C O
& O
C O
servers O
, O
and O
still O
being O
able O
to O
clearly O
distinguish O
its O
traffic O
, O
a O
small O
tool O
was O
built O
to O
generate O
GET O
request O
to O
a O
web O
server O
running O
on O
the O
analysed O
system O
. O

The O
tool O
was O
named O
as O
chrome.exe O
in O
order O
to O
trigger O
the O
malware O
communications O
. O

As O
long O
as O
the O
test O
tool O
named O
chrome.exe O
did O
not O
make O
any O
requests O
, O
its O
memory O
stayed O
pristine O
. O

There O
were O
no O
injections O
made O
by O
the O
driver O
. O

As O
soon O
as O
the O
tool O
made O
its O
first O
GET O
requests O
, O
the B-Entity
driver I-Entity
immediately O
injected B-Action
a B-Entity
malicious I-Entity
DLL I-Entity
module I-Entity
in B-Modifier
it B-Entity
, O
and O
that B-Entity
module I-Entity
started B-Action
producing B-Entity
the I-Entity
following I-Entity
traffic I-Entity
: O
↓ O
The B-Entity
domain I-Entity
names I-Entity
of I-Entity
the I-Entity
C I-Entity
& I-Entity
C I-Entity
servers I-Entity
it B-Entity
relies B-Action
on I-Action
are O
hard-coded O
in O
the O
body O
of O
the O
malware O
. O

Some O
examples O
are O
given O
below O
, O
and O
a O
full O
list O
of O
known O
domains O
is O
given O
in O
the O
Appendix O
D O
: O
As O
seen O
in O
the O
traffic O
dump O
above O
, O
the B-Entity
malware I-Entity
first O
resolves B-Action
the B-Entity
domain I-Entity
name I-Entity
of I-Entity
its I-Entity
C I-Entity
& I-Entity
C I-Entity
. O

Next O
, O
it B-Entity
fetches B-Action
a B-Entity
file I-Entity
/D/pub.txt I-Entity
, O
and O
expects B-Action
the B-Entity
server I-Entity
to I-Entity
respond I-Entity
with I-Entity
a I-Entity
string I-Entity
'' I-Entity
1 I-Entity
'' I-Entity
, I-Entity
acknowledging I-Entity
it I-Entity
's I-Entity
active I-Entity
: O
Once O
acknowledged O
, O
it B-Entity
asks B-Action
the B-Entity
server I-Entity
for B-Modifier
a B-Entity
command I-Entity
, O
and O
the B-Entity
server I-Entity
returns B-Action
a B-Entity
new I-Entity
command I-Entity
to I-Entity
execute I-Entity
: O
The B-Entity
command I-Entity
it B-Entity
receives B-Action
from B-Modifier
C B-Entity
& I-Entity
C I-Entity
above O
( O
swim.onlinewebshop.net O
) O
is B-Action
encrypted I-Action
. O

In O
order O
to O
decrypt B-Action
it B-Entity
, O
the B-Entity
malware I-Entity
first O
applies B-Action
the B-Entity
XOR I-Entity
mask I-Entity
to B-Modifier
the B-Entity
bytes I-Entity
that I-Entity
start I-Entity
from I-Entity
offset I-Entity
0x40 I-Entity
: O
An O
identical O
XOR O
mask O
was O
also O
used O
by O
Agent.BTZ O
. O

Next O
, O
it B-Entity
calculates B-Action
and I-Action
confirms I-Action
a B-Entity
CRC32 I-Entity
checksum I-Entity
within B-Modifier
the B-Entity
command I-Entity
, O
further O
decrypts B-Action
the B-Entity
data I-Entity
by B-Modifier
using B-Entity
the I-Entity
Number I-Entity
Theory I-Entity
Library I-Entity
( I-Entity
NTL I-Entity
) I-Entity
, O
and O
makes B-Action
sure I-Action
the B-Entity
command I-Entity
is I-Entity
destined I-Entity
to I-Entity
the I-Entity
current I-Entity
host I-Entity
by B-Modifier
matching B-Entity
the I-Entity
ID I-Entity
field I-Entity
in I-Entity
it I-Entity
. O

Once O
decrypted O
, O
the B-Entity
malware I-Entity
interprets B-Action
the B-Entity
received I-Entity
command I-Entity
, O
as O
reflected O
in O
the O
malware O
log O
below O
( O
the O
new O
C O
& O
C O
server O
address O
is O
highlighted O
in O
it O
) O
: O
After O
that O
, O
the B-Entity
malware I-Entity
connects B-Action
to B-Modifier
the B-Entity
new I-Entity
C I-Entity
& I-Entity
C I-Entity
, O
asking B-Action
it B-Entity
for B-Modifier
another B-Entity
command I-Entity
: O
The B-Entity
command I-Entity
it B-Entity
receives B-Action
is O
called O
UpLoad O
, O
so O
it B-Entity
uploads B-Action
all B-Entity
the I-Entity
collected I-Entity
logs I-Entity
to B-Modifier
the B-Entity
server I-Entity
, O
and O
then O
cleans B-Action
out I-Action
those B-Entity
logs I-Entity
: O
The B-Entity
files I-Entity
it B-Entity
uploads B-Action
are O
stored O
inside O
its O
home O
directory O
% O
windows O
% O
\ O
$ O
NtUninstallQ O
[ O
random O
] O
$ O
, O
where O
[ O
random O
] O
is O
a O
random O
number O
. O

For O
example O
, O
Snake O
's O
home O
directory O
could O
be O
C O
: O
\WINDOWS\ O
$ O
NtUninstallQ812589 O
$ O
. O

The B-Entity
files I-Entity
within I-Entity
that I-Entity
directory I-Entity
are B-Action
used I-Action
by O
the O
rootkit B-Entity
to O
store B-Action
configuration B-Entity
and I-Entity
log I-Entity
data I-Entity
. O

When O
decrypted O
with O
the O
same O
XOR O
key O
that O
was O
used O
by O
Agent.BTZ O
, O
these O
files O
expose O
the O
following O
contents O
: O
Analysis O
of O
the O
sample O
reveals O
that O
it B-Entity
supports B-Action
3 B-Entity
modes I-Entity
of I-Entity
fetching I-Entity
C I-Entity
& I-Entity
C I-Entity
commands I-Entity
. O

• O
In O
the O
first O
mode O
, O
it B-Entity
relies B-Action
on I-Action
Windows B-Entity
Internet I-Entity
( I-Entity
WinINet I-Entity
) I-Entity
APIs I-Entity
, I-Entity
such I-Entity
as I-Entity
HttpOpenRequest I-Entity
( I-Entity
) I-Entity
, I-Entity
HttpSendRequest I-Entity
( I-Entity
) I-Entity
, I-Entity
InternetReadFile I-Entity
( I-Entity
) I-Entity
, I-Entity
etc I-Entity
. O

• O
In O
the O
second O
mode O
, O
it B-Entity
uses B-Action
Windows B-Entity
Sockets I-Entity
2 I-Entity
( I-Entity
Winsock I-Entity
) I-Entity
APIs I-Entity
, I-Entity
such I-Entity
as I-Entity
WSAStartup I-Entity
( I-Entity
) I-Entity
, I-Entity
socket I-Entity
( I-Entity
) I-Entity
, I-Entity
connect I-Entity
( I-Entity
) I-Entity
, I-Entity
send I-Entity
( I-Entity
) I-Entity
, I-Entity
etc I-Entity
. O

• O
In O
the O
third O
mode O
, O
it B-Entity
works B-Action
in B-Modifier
the B-Entity
'pipe I-Entity
server I-Entity
' I-Entity
mode I-Entity
, O
when O
it B-Entity
passes B-Action
the B-Entity
web I-Entity
requests I-Entity
it I-Entity
is I-Entity
interested I-Entity
in I-Entity
( I-Entity
as I-Entity
a I-Entity
client I-Entity
) I-Entity
to B-Modifier
the B-Entity
pipe I-Entity
server I-Entity
that I-Entity
runs I-Entity
within I-Entity
Windows I-Entity
Explorer I-Entity
( I-Entity
explorer.exe I-Entity
) I-Entity
and/or I-Entity
Internet I-Entity
Explorer I-Entity
( I-Entity
iexplore.exe I-Entity
) I-Entity
processes I-Entity
. O

Memory O
pipes O
is O
a O
common O
mechanism O
for O
Inter-Process O
Communications O
( O
IPC O
) O
. O

When O
the O
pipe O
server O
reads O
such O
requests O
from O
the O
pipes O
, O
it O
performs O
the O
web O
request O
on O
behalf O
of O
a O
client O
by O
using O
WinINet O
APIs O
, O
so O
it O
effectively O
serves O
as O
a O
proxy O
. O

The O
diagram O
below O
demonstrates O
the O
last O
, O
'pipe O
server O
' O
mode O
of O
Snake O
operation O
: O
The O
diagram O
illustrates O
the O
operation O
steps O
1-4 O
: O
1 O
First O
, O
the B-Entity
malicious I-Entity
driver I-Entity
with I-Entity
the I-Entity
embedded I-Entity
DLL I-Entity
module I-Entity
injects B-Action
that B-Entity
DLL I-Entity
into B-Modifier
a B-Entity
system I-Entity
process I-Entity
, I-Entity
such I-Entity
as I-Entity
services.exe I-Entity
; O
once O
loaded O
, O
the B-Entity
DLL I-Entity
will O
function B-Action
in B-Modifier
the B-Entity
'pipe I-Entity
server I-Entity
' I-Entity
mode I-Entity
. O

2 O
As O
soon O
as O
the B-Entity
driver I-Entity
detects B-Action
a B-Entity
usermode I-Entity
process I-Entity
that I-Entity
goes I-Entity
online I-Entity
( I-Entity
e.g I-Entity
. I-Entity
a I-Entity
browser I-Entity
) I-Entity
, O
it B-Entity
will O
inject B-Action
malicious B-Entity
DLL I-Entity
module I-Entity
into B-Modifier
it B-Entity
; O
depending O
on O
the O
operational O
mode O
, O
the B-Entity
DLL I-Entity
may O
start B-Action
communicating B-Entity
with I-Entity
C I-Entity
& I-Entity
C I-Entity
directly I-Entity
. O

3 O
In O
the O
'pipe O
mode O
' O
of O
operation O
, O
the B-Entity
injected I-Entity
DLL I-Entity
will O
start B-Action
communicating B-Entity
with I-Entity
the I-Entity
pipe I-Entity
server I-Entity
by O
sending B-Action
messages B-Entity
into B-Modifier
the B-Entity
established I-Entity
inter-process I-Entity
communication I-Entity
pipes I-Entity
. O

4 O
Once O
the B-Entity
task I-Entity
of I-Entity
communication I-Entity
with I-Entity
C I-Entity
& I-Entity
C I-Entity
is B-Action
delegated I-Action
to B-Modifier
the B-Entity
pipe I-Entity
server I-Entity
, O
it B-Entity
will O
start B-Action
communicating B-Entity
with I-Entity
the I-Entity
C I-Entity
& I-Entity
C I-Entity
, O
bypassing B-Action
the B-Entity
host-based I-Entity
firewalls I-Entity
that I-Entity
keep I-Entity
an I-Entity
infected I-Entity
system I-Entity
process I-Entity
in I-Entity
a I-Entity
white-list I-Entity
. O

The O
reason O
behind O
the B-Entity
pipes I-Entity
usage I-Entity
is O
to O
'legitimise B-Action
' I-Action
the B-Entity
outbound I-Entity
web I-Entity
requests I-Entity
, O
forcing O
them O
to O
originate O
from O
the O
host O
firewall- O
friendly O
system O
services O
. O

Pipe O
server O
is O
a O
special O
mode O
of O
the O
injected O
DLL O
. O

In O
order O
to O
switch O
into O
that O
mode O
, O
a B-Entity
dedicated I-Entity
thread I-Entity
is B-Action
spawned I-Action
to O
listen B-Action
for B-Modifier
IPC B-Entity
messages I-Entity
received I-Entity
through I-Entity
the I-Entity
pipes I-Entity
. O

The O
memory O
pipes O
used O
by O
Snake O
are O
named O
as O
: O
Apart O
from O
GET B-Entity
/ O
POST B-Entity
requests I-Entity
, O
the B-Entity
pipe I-Entity
clients I-Entity
( I-Entity
infected I-Entity
usermode I-Entity
processes I-Entity
) I-Entity
may O
also O
ask B-Action
the B-Entity
pipe I-Entity
server I-Entity
to O
perform B-Action
other O
operations O
on O
their O
behalf O
, O
such O
as O
saving B-Action
data B-Entity
into B-Modifier
a B-Entity
temporary I-Entity
file I-Entity
, O
copy B-Action
/ O
delete B-Action
files B-Entity
, O
save B-Action
configuration B-Entity
data I-Entity
into B-Modifier
the B-Entity
registry I-Entity
under B-Modifier
the B-Entity
aforementioned I-Entity
ShellCore I-Entity
value I-Entity
. O

This B-Entity
delegation I-Entity
of I-Entity
tasks I-Entity
is O
designed O
to O
keep B-Action
infected B-Entity
processes I-Entity
under B-Modifier
the B-Entity
radar I-Entity
of I-Entity
the I-Entity
behavioural I-Entity
analysis I-Entity
tools I-Entity
for B-Modifier
as B-Entity
long I-Entity
as I-Entity
possible I-Entity
. O

Another O
reason O
is O
to O
overcome B-Action
account B-Entity
restrictions I-Entity
imposed I-Entity
on I-Entity
a I-Entity
browser I-Entity
process I-Entity
in O
order O
to O
be O
able O
to O
write B-Action
into B-Modifier
files B-Entity
/ O
registry B-Entity
. O

To O
delegate O
different O
types O
of O
tasks O
, O
the B-Entity
clients I-Entity
send B-Action
messages B-Entity
to B-Modifier
the B-Entity
pipe I-Entity
server I-Entity
using B-Modifier
the B-Entity
following I-Entity
task I-Entity
identification I-Entity
headers I-Entity
: O
The B-Entity
usermode I-Entity
component I-Entity
of I-Entity
Snake I-Entity
communicates B-Action
with B-Modifier
its B-Entity
kernel-mode I-Entity
driver I-Entity
via B-Modifier
a B-Entity
device I-Entity
called I-Entity
\\.\vstor32 I-Entity
( I-Entity
created I-Entity
under I-Entity
kernel I-Entity
as I-Entity
\Device\vstor32 I-Entity
) I-Entity
. O

In O
its O
communication O
protocol O
with O
the O
driver O
it O
uses O
the O
IOCTL O
code O
of O
0x222038 O
. O

To O
write B-Action
data B-Entity
, O
it B-Entity
opens B-Action
the B-Entity
device I-Entity
with B-Modifier
CreateFile B-Entity
( I-Entity
'' I-Entity
\\.\vstor32 I-Entity
'' I-Entity
) I-Entity
, O
then O
calls B-Action
DeviceIoControl B-Entity
( I-Entity
) I-Entity
API I-Entity
on B-Modifier
its B-Entity
handle I-Entity
with B-Modifier
IOCTL B-Entity
code I-Entity
of I-Entity
0x222038 I-Entity
. O

Configuration O
parameters O
along O
with O
the B-Entity
initial I-Entity
set I-Entity
of I-Entity
domain I-Entity
names I-Entity
are B-Action
hard-coded I-Action
within B-Modifier
the B-Entity
body I-Entity
of I-Entity
the I-Entity
DLL I-Entity
. O

However O
, O
the O
data O
appears O
to O
be O
defined O
in O
the O
structures O
, O
so O
it O
is O
very O
likely O
the O
DLL O
could O
be O
generated O
by O
a O
stand-alone O
builder O
that O
'patches O
' O
the O
DLL O
with O
the O
new/updated O
list O
of O
C O
& O
C O
. O

Analysis O
of O
the B-Entity
commands I-Entity
performed B-Action
by O
the B-Entity
malware I-Entity
suggests O
the O
following O
capabilities O
: O
Together O
, O
these B-Entity
commands I-Entity
provide B-Action
complete B-Entity
backdoor I-Entity
functionality I-Entity
, O
allowing B-Action
remote B-Entity
attacker I-Entity
full B-Entity
control I-Entity
over I-Entity
the I-Entity
compromised I-Entity
system I-Entity
. O

The O
ability O
to O
update B-Action
the B-Entity
driver I-Entity
and O
then O
rely B-Action
on I-Action
its B-Entity
communication I-Entity
capabilities I-Entity
means O
that O
the O
components O
of O
Snake O
are O
flexible O
, O
making O
possible O
the O
existence O
of O
the O
hybrid O
( O
kernel-centric O
and O
usermode-centric O
) O
architectures O
. O

For O
example O
, O
the O
virtual O
partitions O
are O
used O
by O
kernel-centric O
Snake O
variants O
, O
where O
the B-Entity
kernel-mode I-Entity
driver I-Entity
is B-Action
responsible B-Entity
for I-Entity
the I-Entity
communications I-Entity
. O

If O
such B-Entity
a I-Entity
driver I-Entity
is B-Action
installed I-Action
via B-Modifier
an B-Entity
update I-Entity
, O
the B-Entity
usermode I-Entity
component I-Entity
can O
be B-Action
instructed I-Action
to O
delegate O
the O
file O
upload O
task O
to O
the O
driver O
by O
copying B-Action
all B-Entity
the I-Entity
necessary I-Entity
logs I-Entity
into B-Modifier
the B-Entity
shared I-Entity
virtual I-Entity
partition I-Entity
, O
physically O
located O
on O
the O
compromised O
host O
and O
thus O
, O
accessible O
from O
kernel O
. O

This O
particular O
architecture O
relies O
on O
a B-Entity
kernel-mode I-Entity
driver I-Entity
to O
carry B-Action
out I-Action
the B-Entity
network I-Entity
communications I-Entity
. O

The B-Entity
usermode I-Entity
DLLs I-Entity
are B-Action
still I-Action
injected I-Action
into B-Modifier
the B-Entity
system I-Entity
processes I-Entity
to B-Modifier
perform B-Entity
high-level I-Entity
tasks I-Entity
. O

The O
delivery O
mechanism O
is O
not O
known O
: O
it B-Entity
may O
be B-Action
distributed I-Action
via B-Modifier
a O
thumb-drive O
, O
a B-Entity
phishing I-Entity
email I-Entity
attachment I-Entity
, O
or O
be B-Action
delivered I-Action
via B-Modifier
an B-Entity
exploit I-Entity
across I-Entity
the I-Entity
network I-Entity
( O
e.g O
. O

by O
using O
the O
reconnaissance O
tool O
that O
is O
explained O
later O
) O
. O

Infection B-Entity
starts B-Action
from B-Modifier
a B-Entity
dropper I-Entity
penetrating I-Entity
into I-Entity
the I-Entity
compromised I-Entity
system I-Entity
where I-Entity
it I-Entity
is I-Entity
allowed I-Entity
to I-Entity
run I-Entity
. O

Once O
executed B-Action
, O
the B-Entity
dropper I-Entity
installs B-Action
the B-Entity
kernel I-Entity
mode I-Entity
driver I-Entity
in B-Modifier
a B-Entity
pre-defined I-Entity
location I-Entity
. O

The O
dropper O
itself O
is O
32-bit O
, O
so O
it O
will O
run O
both O
on O
32-bit O
and O
64-bit O
Windows O
OS O
( O
in O
WoW64 O
mode O
) O
. O

On B-Modifier
a B-Entity
32-bit I-Entity
OS I-Entity
, O
it B-Entity
will O
install B-Action
a B-Entity
32-bit I-Entity
driver I-Entity
. O

On B-Modifier
a B-Entity
64-bit I-Entity
OS I-Entity
, O
it B-Entity
will O
install B-Action
a B-Entity
64-bit I-Entity
driver I-Entity
. O

The B-Entity
analysed I-Entity
32-bit I-Entity
dropper I-Entity
creates B-Action
a B-Entity
driver I-Entity
in B-Modifier
the B-Entity
following I-Entity
location I-Entity
: O
However O
, O
different O
samples O
may O
use O
a O
different O
path O
and O
driver O
file O
name O
. O

For O
example O
, O
some O
samples O
exposed O
these O
filenames O
: O
fdisk32.sys O
, O
A0009547.sys O
, O
or O
Ultra3.sys O
. O

The O
filename O
of O
the O
dropper O
could O
be O
rknginst.exe O
or O
fdiskmon.exe O
. O

Once O
executed O
, O
the O
driver O
first O
makes O
sure O
it O
is O
registered O
under O
a O
pre-defined O
name O
, O
such O
as O
Ultra3 O
. O

Other O
samples O
may O
have O
a O
different O
registration O
name O
, O
such O
as O
~ROOT O
. O

The B-Entity
registration I-Entity
is B-Action
ensured I-Action
with B-Modifier
creation B-Entity
of I-Entity
the I-Entity
following I-Entity
registry I-Entity
entries I-Entity
: O
The B-Entity
driver I-Entity
then O
flags B-Action
the B-Entity
following I-Entity
events I-Entity
with B-Modifier
the B-Entity
notification I-Entity
purposes I-Entity
: O
The B-Entity
rootkit I-Entity
then O
places B-Action
a B-Entity
number I-Entity
of I-Entity
the I-Entity
hooks I-Entity
. O

The O
first O
API O
it B-Entity
hooks B-Action
is O
IoCreateDevice B-Entity
( I-Entity
) I-Entity
. O

The B-Entity
installed I-Entity
hook I-Entity
handler I-Entity
calls B-Action
the B-Entity
original I-Entity
API I-Entity
and O
then O
checks B-Action
if B-Entity
the I-Entity
name I-Entity
of I-Entity
the I-Entity
device I-Entity
is I-Entity
netbt I-Entity
or I-Entity
afd I-Entity
. O

If O
so O
, O
it B-Entity
will O
install B-Action
a B-Entity
TDI I-Entity
filter I-Entity
driver I-Entity
. O

If O
the O
device O
name O
is O
Null O
, O
Beep O
, O
tcpip O
or O
Nsiproxy O
, O
it O
will O
activate O
itself O
by O
enabling O
its B-Entity
hooks I-Entity
designed O
to O
hide B-Action
the B-Entity
presence I-Entity
of I-Entity
Snake I-Entity
on I-Entity
a I-Entity
system I-Entity
, O
set O
up O
its O
access O
control O
lists O
and O
the O
messaging O
system O
. O

In O
order O
to O
hide B-Action
its B-Entity
components I-Entity
, O
the B-Entity
driver I-Entity
hooks B-Action
the B-Entity
following I-Entity
APIs I-Entity
: O
For O
example O
, O
the B-Entity
hook I-Entity
handlers I-Entity
of I-Entity
the I-Entity
registry-related I-Entity
APIs I-Entity
will O
block B-Action
access B-Entity
to I-Entity
the I-Entity
registry I-Entity
entries I-Entity
that I-Entity
contain I-Entity
the I-Entity
name I-Entity
of I-Entity
the I-Entity
driver I-Entity
. O

In O
one O
example O
, O
the B-Entity
rootkit I-Entity
blocks B-Action
access B-Entity
to I-Entity
registry I-Entity
entries I-Entity
that I-Entity
contain I-Entity
the I-Entity
strings I-Entity
'' I-Entity
Ultra3 I-Entity
'' I-Entity
and I-Entity
'' I-Entity
~ROOT I-Entity
'' I-Entity
. O

The B-Entity
ZwReadFile I-Entity
( I-Entity
) I-Entity
hook I-Entity
handler I-Entity
will O
block B-Action
access B-Entity
to I-Entity
the I-Entity
home I-Entity
directory I-Entity
where I-Entity
the I-Entity
rootkit I-Entity
keeps I-Entity
its I-Entity
file I-Entity
. O

In O
one O
of O
the O
analysed O
kernel-centric O
Snake O
samples O
the O
home O
directory O
was O
hard-coded O
as O
% O
windows O
% O
\ O
$ O
NtUninstallQ817473 O
$ O
, O
so O
it B-Entity
blocked B-Action
file B-Entity
read I-Entity
access I-Entity
from I-Entity
that I-Entity
directory I-Entity
. O

The B-Entity
ZwClose I-Entity
( I-Entity
) I-Entity
hook I-Entity
handler I-Entity
is O
used O
to O
inject B-Action
the B-Entity
DLL I-Entity
module I-Entity
into B-Modifier
the B-Entity
userland I-Entity
processes I-Entity
. O

The B-Entity
hook I-Entity
handler I-Entity
for I-Entity
ZwTerminateProcess I-Entity
( I-Entity
) I-Entity
checks B-Action
if B-Entity
the I-Entity
process I-Entity
being I-Entity
shut I-Entity
down I-Entity
is I-Entity
svchost.exe I-Entity
. O

If O
so O
, O
it O
considers O
it O
to O
be O
a O
system O
shutdown O
, O
so O
it B-Entity
unloads B-Action
its B-Entity
usermode I-Entity
DLL I-Entity
and O
deactivates B-Action
its B-Entity
own I-Entity
network I-Entity
drivers I-Entity
, O
just O
like O
it O
does O
when O
its O
ZwShutdownSystem O
( O
) O
hook O
handler O
gets O
invoked O
. O

The B-Entity
ObOpenObjectByName I-Entity
( I-Entity
) I-Entity
hook I-Entity
is O
designed O
to O
hide B-Action
the B-Entity
presence I-Entity
of I-Entity
its I-Entity
virtual I-Entity
partitions I-Entity
( O
described O
later O
) O
. O

To O
encrypt B-Action
data B-Entity
stored I-Entity
on I-Entity
its I-Entity
virtual I-Entity
partitions I-Entity
, O
the B-Entity
driver I-Entity
sets B-Action
a B-Entity
hook I-Entity
for I-Entity
another I-Entity
API I-Entity
: O
To O
re-infect B-Action
the B-Entity
usermode I-Entity
process I-Entity
svchost.exe I-Entity
and O
to O
re-enable B-Action
its B-Entity
network I-Entity
drivers I-Entity
, O
the B-Entity
rootkit I-Entity
hooks B-Action
these B-Entity
APIs I-Entity
: O
Snake O
then O
proceeds O
to O
the O
task O
of O
deep O
packet O
inspection O
and O
modification O
. O

In O
order O
to O
accomplish O
it O
, O
it B-Entity
registers B-Action
a B-Entity
callout I-Entity
driver I-Entity
for I-Entity
Windows I-Entity
Filtering I-Entity
Platform I-Entity
( I-Entity
WFP I-Entity
) I-Entity
, O
an O
architecture O
first O
introduced O
with O
Windows O
Vista O
and O
nowadays O
normally O
used O
by O
antivirus O
and/or O
intrusion O
detection O
systems O
to O
inspect/block O
malicious O
traffic O
. O

Snake O
sets O
filters O
at O
the O
layers O
FWPMLAYERSTREAMV4 O
and O
FWPMLAYERALEFLOWESTABLISHEDV4 O
in O
the O
TCP/ O
IP O
stack O
, O
so O
that O
its B-Entity
callout I-Entity
driver I-Entity
is B-Action
notified I-Action
whenever B-Modifier
a B-Entity
TCP I-Entity
connection I-Entity
is I-Entity
established I-Entity
by I-Entity
a I-Entity
browser I-Entity
. O

When O
that O
happens O
, O
the B-Entity
rootkit I-Entity
triggers B-Action
an B-Entity
event I-Entity
named I-Entity
\BaseNamedObjects\wininetactivate I-Entity
. O

When B-Modifier
the B-Entity
data I-Entity
arrives I-Entity
, O
it B-Entity
is B-Action
intercepted I-Action
with B-Modifier
the B-Entity
FwpsCopyStreamDataToBuffer0 I-Entity
( I-Entity
) I-Entity
API I-Entity
, O
and O
then O
scanned B-Action
for B-Modifier
the B-Entity
presence I-Entity
of I-Entity
the I-Entity
hidden I-Entity
commands I-Entity
from I-Entity
C I-Entity
& I-Entity
C I-Entity
. O

The B-Entity
driver I-Entity
inspects B-Action
bidirectional B-Entity
network I-Entity
data I-Entity
on B-Modifier
a B-Entity
per I-Entity
stream I-Entity
basis I-Entity
, O
as O
it O
's O
located O
right O
on O
the O
stream O
data O
path O
. O

An O
ability O
to O
manipulate B-Action
data B-Entity
streams I-Entity
is O
provided O
with O
the O
packet O
injection O
logic O
below O
, O
allowing O
Snake B-Entity
to O
covertly O
insert B-Action
traffic B-Entity
destined I-Entity
to I-Entity
its I-Entity
C I-Entity
& I-Entity
C I-Entity
servers I-Entity
: O
In O
order O
to O
qualify O
as O
a O
browser O
, O
the O
usermode O
process O
must O
have O
any O
of O
the O
following O
names O
: O
In O
addition O
to O
WFP O
, O
Snake B-Entity
also O
hooks B-Action
the B-Entity
Transport I-Entity
Driver I-Entity
Interface I-Entity
( I-Entity
TDI I-Entity
) I-Entity
network I-Entity
routines I-Entity
by B-Modifier
setting B-Entity
itself I-Entity
up I-Entity
as I-Entity
a I-Entity
TDI I-Entity
filter I-Entity
driver I-Entity
. O

TDI O
is O
considered O
deprecated O
and O
will O
be O
removed O
in O
future O
versions O
of O
Microsoft O
Windows O
, O
but O
it O
's O
still O
supported O
on O
Windows O
7 O
. O

Being O
registered B-Action
as B-Modifier
a B-Entity
TDI I-Entity
driver I-Entity
on B-Modifier
the B-Entity
device I-Entity
stack I-Entity
, O
Snake B-Entity
hooks B-Action
TCP B-Entity
calls I-Entity
. O

This O
way O
it B-Entity
intercepts B-Action
all B-Entity
requests I-Entity
along I-Entity
with I-Entity
their I-Entity
parameters I-Entity
via B-Modifier
IRP B-Entity
( I-Entity
IO I-Entity
request I-Entity
package I-Entity
) I-Entity
hooks I-Entity
. O

By O
'sniffing O
' O
all O
the O
requests O
, O
it B-Entity
can O
now O
inspect B-Action
the B-Entity
traffic I-Entity
, O
looking B-Action
for I-Action
and I-Action
then I-Action
parsing I-Action
GET B-Entity
/ I-Entity
POST I-Entity
HTTP I-Entity
requests I-Entity
and I-Entity
also I-Entity
SMTP I-Entity
communications I-Entity
, O
in O
order O
to O
distinguish B-Action
commands B-Entity
addressed I-Entity
to I-Entity
itself I-Entity
. O

If O
the B-Entity
rootkit I-Entity
detects B-Action
that B-Modifier
the B-Entity
OS I-Entity
version I-Entity
is I-Entity
pre-Vista I-Entity
( I-Entity
e.g I-Entity
. I-Entity
Windows I-Entity
XP I-Entity
) I-Entity
or I-Entity
Windows I-Entity
Server I-Entity
2008 I-Entity
( I-Entity
e.g I-Entity
. I-Entity
Windows I-Entity
Server I-Entity
2003 I-Entity
) I-Entity
, O
it B-Entity
will O
invoke B-Action
FwpsStreamInjectAsync0 B-Entity
( I-Entity
) I-Entity
API I-Entity
in O
order O
to O
generate B-Action
outbound B-Entity
requests I-Entity
. O

Whenever B-Modifier
the B-Entity
client I-Entity
establishes I-Entity
connections I-Entity
, O
the B-Entity
TDI I-Entity
driver I-Entity
will O
also O
'pulse B-Action
' I-Action
the B-Entity
\BaseNamedObjects\wininetactivate I-Entity
event I-Entity
, O
just O
like O
the O
WPF O
driver O
's O
component O
of O
it O
, O
in O
order O
to O
notify O
the O
userland O
service O
about O
the O
event O
. O

The B-Entity
data I-Entity
that O
the B-Entity
driver I-Entity
intercepts B-Action
, O
along O
with O
the O
important O
notifications O
, O
is O
passed O
to O
the O
userland O
DLL O
to O
be O
processed O
. O

If B-Modifier
the B-Entity
data I-Entity
contains I-Entity
commands I-Entity
from I-Entity
C I-Entity
& I-Entity
C I-Entity
, O
the B-Entity
DLL I-Entity
module I-Entity
is O
expected O
to O
execute B-Action
them B-Entity
and O
report O
results O
back O
to O
the B-Entity
driver I-Entity
to O
be B-Action
delivered I-Action
back B-Modifier
to I-Modifier
C B-Entity
& I-Entity
C I-Entity
. O

For O
NDIS O
versions O
5.X O
, O
Snake O
rootkit O
contains O
code B-Entity
that O
installs B-Action
NDIS B-Entity
filter I-Entity
intermediate I-Entity
driver I-Entity
. O

This B-Entity
driver I-Entity
is B-Action
set I-Action
up I-Action
above B-Modifier
a B-Entity
miniport I-Entity
driver I-Entity
( O
a O
driver O
that O
communicates O
with O
the O
physical O
device O
) O
and O
below B-Modifier
a B-Entity
protocol I-Entity
driver I-Entity
( O
a O
driver O
that O
implements O
a O
protocol O
, O
e.g O
. O

TCP/IP O
) O
. O

The B-Entity
driver I-Entity
is B-Action
registered I-Action
with B-Modifier
NdisIMRegisterLayeredMiniport B-Entity
( I-Entity
) I-Entity
API I-Entity
. O

After O
that O
, O
the B-Entity
drivers I-Entity
hooks B-Action
the B-Entity
following I-Entity
exports I-Entity
within B-Modifier
ndis.sys B-Entity
: O
The O
rootkit O
contains O
code B-Entity
that O
installs B-Action
NDIS B-Entity
filter I-Entity
driver I-Entity
for I-Entity
NDIS I-Entity
6.0 I-Entity
and I-Entity
above I-Entity
: O
NDIS B-Entity
filter I-Entity
driver I-Entity
configuration I-Entity
is B-Action
stored I-Action
in B-Modifier
the B-Entity
registry I-Entity
entry I-Entity
: O
The B-Entity
driver I-Entity
is B-Action
registered I-Action
with B-Modifier
NdisFRegisterFilterDriver B-Entity
( I-Entity
) I-Entity
API I-Entity
. O

After O
that O
, O
the B-Entity
drivers I-Entity
hooks B-Action
the B-Entity
following I-Entity
exports I-Entity
within B-Modifier
ndis.sys B-Entity
( I-Entity
for I-Entity
NDIS I-Entity
6.0 I-Entity
) I-Entity
: O
Another B-Entity
set I-Entity
of I-Entity
exports I-Entity
it B-Entity
attempts O
to O
hook B-Action
in B-Modifier
ndis.sys B-Entity
( I-Entity
for I-Entity
NDIS I-Entity
6.0 I-Entity
) I-Entity
is O
: O
With O
the B-Entity
hooks I-Entity
installed B-Action
, O
whenever O
the O
network O
adapter O
driver O
attempts O
to O
register O
to O
NDIS O
, O
or O
whenever O
there O
is O
an O
attempt O
to O
install O
NDIS O
intermediate O
driver O
or O
NDIS O
filter O
driver O
, O
the B-Entity
hook I-Entity
handlers I-Entity
will O
register B-Action
Snake B-Entity
's I-Entity
own I-Entity
MiniportXxx I-Entity
functions I-Entity
with B-Modifier
the B-Entity
NDIS I-Entity
library I-Entity
. O

With O
its O
own O
miniport O
handler O
functions O
, O
it B-Entity
can O
send B-Action
/ O
receive B-Action
data B-Entity
by B-Modifier
using B-Entity
a I-Entity
private I-Entity
TCP/IP I-Entity
stack I-Entity
, O
bypassing B-Action
all B-Entity
firewall I-Entity
hooks I-Entity
, O
and O
making B-Action
its B-Entity
open I-Entity
ports I-Entity
invisible B-Entity
to I-Entity
scanners I-Entity
. O

The B-Entity
Snake I-Entity
rootkit I-Entity
registers B-Action
itself B-Entity
as B-Modifier
Network B-Entity
Driver I-Entity
Interface I-Entity
Specification I-Entity
( I-Entity
NDIS I-Entity
) I-Entity
protocol I-Entity
driver I-Entity
. O

Whenever O
the B-Entity
underlying I-Entity
miniport I-Entity
driver I-Entity
receives B-Action
data B-Entity
from B-Modifier
the B-Entity
network I-Entity
, O
it B-Entity
calls O
NDIS O
by O
invoking B-Action
a B-Entity
data I-Entity
receive I-Entity
indication I-Entity
function I-Entity
NdisMIndicateReceiveNetBufferLists I-Entity
( I-Entity
) I-Entity
. O

When O
that O
happens O
, O
NDIS B-Entity
invokes B-Action
Snake B-Entity
's I-Entity
hook I-Entity
function I-Entity
( O
ProtocolReceiveNetBufferLists O
) O
to O
process O
the O
received O
data O
. O

To O
send B-Action
the B-Entity
data I-Entity
back O
, O
the B-Entity
protocol I-Entity
driver I-Entity
defines B-Action
the B-Entity
data I-Entity
in B-Modifier
a B-Entity
list I-Entity
of I-Entity
NETBUFFERLIST I-Entity
structures I-Entity
, O
and O
then O
passes O
them O
to O
NDIS O
by O
calling B-Action
NdisSendNetBufferLists B-Entity
( I-Entity
) I-Entity
. O

NDIS B-Entity
, O
in O
turn O
, O
calls B-Action
the B-Entity
miniport I-Entity
driver's I-Entity
MiniportSendNetBufferLists I-Entity
( I-Entity
) I-Entity
function I-Entity
to O
forward O
the O
data O
to O
an O
underlying O
miniport O
driver O
. O

Being O
able O
to O
fully O
manipulate B-Action
traffic B-Entity
at B-Modifier
3 B-Entity
different I-Entity
levels I-Entity
( I-Entity
NDIS I-Entity
protocol I-Entity
driver I-Entity
, I-Entity
TDI I-Entity
Driver I-Entity
, I-Entity
and I-Entity
WPF I-Entity
callout I-Entity
driver I-Entity
) I-Entity
, O
Snake B-Entity
is O
able O
to O
'inject B-Action
' I-Action
the B-Entity
traffic I-Entity
into B-Modifier
existing B-Entity
communications I-Entity
to O
reach B-Action
out I-Action
to B-Modifier
external B-Entity
components I-Entity
, O
and O
at O
the O
same O
time O
parse B-Action
all B-Entity
incoming I-Entity
traffic I-Entity
to O
detect B-Action
traffic B-Entity
addressed I-Entity
to I-Entity
itself I-Entity
: O
As O
the B-Entity
driver I-Entity
intercepts B-Action
all B-Entity
connections I-Entity
( O
e.g O
. O

on O
TDIRECEIVE O
TDI O
event O
or O
ClientEventReceive O
( O
) O
event O
notification O
triggered O
through O
its O
TDI O
Filter O
Driver O
) O
, O
it B-Entity
parses B-Action
all B-Entity
incoming I-Entity
HTTP I-Entity
and I-Entity
SMTP I-Entity
traffic I-Entity
to O
see O
if O
it B-Entity
can O
be B-Action
authenticated I-Action
as B-Modifier
Snake B-Entity
traffic I-Entity
. O

The B-Entity
authentication I-Entity
is B-Action
implemented I-Action
by O
decrypting B-Action
the B-Entity
data I-Entity
and O
making B-Action
sure I-Action
it B-Entity
starts I-Entity
with I-Entity
the I-Entity
markers I-Entity
0xDEADBEAF I-Entity
and I-Entity
0xC001BA5E I-Entity
( I-Entity
which I-Entity
appear I-Entity
to I-Entity
derive I-Entity
from I-Entity
'DEAD I-Entity
BEEF I-Entity
' I-Entity
and I-Entity
'COOL I-Entity
BASE I-Entity
' I-Entity
) I-Entity
. O

Here O
are O
specific O
steps O
: O
By O
observing O
such O
behaviour O
, O
one O
might O
wonder O
why O
the O
driver O
is O
expecting O
HTTP O
or O
SMTP O
clients O
? O
Why O
does O
it O
act O
like O
HTTP/SMTP O
server O
processing O
client O
traffic O
, O
and O
serving O
back O
normal O
responses O
as O
per O
the O
protocol O
? O
For O
example O
, O
in O
HTTP O
the B-Entity
driver I-Entity
will O
respond B-Action
with B-Modifier
messages B-Entity
like I-Entity
'' I-Entity
HTTP/1.1 I-Entity
200 I-Entity
OK I-Entity
'' I-Entity
or I-Entity
'' I-Entity
HTTP/1.1 I-Entity
500 I-Entity
Server I-Entity
Error I-Entity
'' I-Entity
. O

For O
SMTP O
traffic O
, O
it O
communicates O
back O
normal O
SMTP O
server O
responses O
, O
such O
as O
'' O
250 O
Sender O
OK O
'' O
, O
'' O
503 O
Bad O
sequence O
of O
commands O
'' O
, O
etc O
. O

The O
reason O
behind O
such O
behaviour O
is O
that O
the B-Entity
driver I-Entity
is B-Action
acting I-Action
in B-Modifier
this B-Entity
mode I-Entity
like B-Modifier
a B-Entity
proxy I-Entity
, O
routing B-Action
requests B-Entity
from I-Entity
other I-Entity
infected I-Entity
hosts I-Entity
to B-Modifier
a B-Entity
remote I-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
. O

Another O
opportunity O
this O
mode O
unlocks O
is O
a O
peer-to-peer O
network O
mode O
with O
no O
centralised O
C O
& O
C O
. O

The O
infected O
hosts O
are O
capable O
of O
transferring O
the O
following O
peer-2-peer O
commands O
defining O
fragment O
size O
, O
reliability O
parameters O
, O
new O
peer O
information O
, O
peer O
impersonation O
flags O
, O
etc O
. O

: O
Once O
the B-Entity
incoming I-Entity
data I-Entity
is B-Action
authenticated I-Action
and I-Action
decrypted I-Action
, O
the O
driver O
passes O
it O
to O
the O
DLL O
by O
using O
memory O
pipes O
. O

For O
example O
, O
on O
HTTP O
traffic O
arrival O
it B-Entity
may O
send B-Action
traffic B-Entity
data I-Entity
into B-Modifier
a B-Entity
memory I-Entity
pipe I-Entity
\Device\NamedPipe\isapihttp I-Entity
, O
and O
then O
, O
send B-Action
a B-Entity
received I-Entity
peer-2-peer I-Entity
command I-Entity
message I-Entity
writepeernfo= I-Entity
[ I-Entity
IPADDRESS I-Entity
: I-Entity
PORT I-Entity
] I-Entity
0fragnoscrambling=Y0 I-Entity
into B-Modifier
another B-Entity
memory I-Entity
pipe I-Entity
called I-Entity
\Device\NamedPipe\isapidg I-Entity
. O

In O
order O
to O
log B-Action
its B-Entity
activity I-Entity
, O
the B-Entity
driver I-Entity
writes B-Action
log B-Entity
data I-Entity
into B-Modifier
the B-Entity
pipe I-Entity
\Device\NamedPipe\isapilog I-Entity
, O
so O
that O
the B-Entity
DLL I-Entity
could O
log B-Action
the B-Entity
data I-Entity
into B-Modifier
the B-Entity
log I-Entity
files I-Entity
. O

Full O
list O
of O
the B-Entity
named I-Entity
pipes I-Entity
used B-Action
for B-Modifier
communications B-Entity
is O
provided O
below O
: O
Messages B-Entity
submitted B-Action
into B-Modifier
the B-Entity
pipes I-Entity
are O
wrapped O
into O
the O
structures O
. O

The O
structures O
appear O
to O
contain O
headers O
to O
allow O
the B-Entity
pipe I-Entity
server I-Entity
, O
that O
runs O
within O
an O
infected O
userland O
module O
, O
to O
identify B-Action
the B-Entity
messages I-Entity
first O
and O
then O
unwrap O
the O
structures O
accordingly O
. O

For O
example O
, O
the O
message O
headers O
could O
be O
: O
Once O
received B-Action
from B-Modifier
the B-Entity
pipes I-Entity
and O
unwrapped/decoded O
, O
the B-Entity
data I-Entity
is O
then O
handled O
by O
the O
usermode O
DLL O
as O
per O
the O
data O
intention O
- O
whether O
it O
's O
a O
traffic O
sniffing O
task O
, O
a O
peer-2-peer O
client O
logic O
, O
a O
logging O
task O
, O
or O
a O
task O
of O
saving O
received O
files O
into O
the O
virtual O
volumes O
. O

The B-Entity
driver I-Entity
creates B-Action
virtual B-Entity
file I-Entity
volumes I-Entity
for B-Modifier
encrypted B-Entity
storage I-Entity
of I-Entity
its I-Entity
files I-Entity
and I-Entity
configuration I-Entity
data I-Entity
: O
The B-Entity
volumes I-Entity
are B-Action
mounted I-Action
from B-Modifier
the B-Entity
virtual I-Entity
file I-Entity
systems I-Entity
RawDisk1 I-Entity
and I-Entity
RawDisk2 I-Entity
. O

The B-Entity
first I-Entity
partition I-Entity
is B-Action
created I-Action
with B-Modifier
the B-Entity
following I-Entity
steps I-Entity
: O
The B-Entity
hook I-Entity
installed B-Action
by O
the B-Entity
rootkit I-Entity
on B-Modifier
IofCallDriver B-Entity
( I-Entity
) I-Entity
API I-Entity
provides B-Action
on-the-fly B-Entity
data I-Entity
encryption/decryption I-Entity
whenever O
that B-Entity
data I-Entity
is B-Action
written I-Action
to B-Modifier
or O
read B-Action
from B-Modifier
the B-Entity
volume I-Entity
. O

The B-Entity
encryption I-Entity
algorithm I-Entity
is B-Action
based I-Action
on B-Modifier
CAST-128 B-Entity
, O
with B-Modifier
the B-Entity
hard-coded I-Entity
key I-Entity
stored I-Entity
in I-Entity
the I-Entity
rootkit I-Entity
body I-Entity
. O

As O
a O
result O
, O
whenever O
the B-Entity
data I-Entity
is B-Action
saved I-Action
into B-Modifier
the B-Entity
volume I-Entity
Hd1 I-Entity
, O
it B-Entity
will O
be B-Action
scrambled I-Action
on-the-fly B-Entity
, O
and O
reflected B-Action
in B-Entity
the I-Entity
persistent I-Entity
storage I-Entity
file I-Entity
hotfix.dat I-Entity
, O
which O
is O
physically O
located O
within O
the O
rootkit O
's O
'home O
' O
directory O
: O
Analysis O
of O
the O
hotfix.dat O
file O
contents O
reveals O
it B-Entity
's B-Action
a B-Entity
fully I-Entity
encrypted I-Entity
file I-Entity
with I-Entity
flat I-Entity
entropy I-Entity
. O

Thus O
, O
it O
is O
not O
possible O
to O
reveal O
the O
contents O
of O
the O
Snake O
's O
volume O
by O
accessing O
the O
contents O
of O
this O
file O
( O
unless O
the O
encryption O
is O
broken O
, O
that O
is O
) O
. O

Enlisting O
the O
contents O
of O
the O
created O
volume O
is O
possible O
, O
along O
with O
creating O
files O
on O
it O
: O
However O
, O
as O
soon O
as O
IofCallDriver O
( O
) O
hook O
is O
removed O
, O
the O
same O
'dir O
' O
command O
will O
fail O
, O
as O
with O
no O
hook O
the O
rootkit O
can O
not O
decrypt O
the O
scrambled O
volume O
: O
The O
second O
volume O
\\.\Hd2 O
is O
not O
mapped O
to O
a O
file O
, O
so O
when O
a O
computer O
is O
switched O
off O
, O
its O
contents O
is O
lost O
. O

Thus O
, O
it O
could O
be O
used O
as O
a O
temporary O
or O
a O
cache O
storage O
. O

The B-Entity
data I-Entity
stored I-Entity
in I-Entity
\\.\Hd2 I-Entity
is B-Action
encrypted I-Action
the B-Entity
same I-Entity
way I-Entity
the I-Entity
first I-Entity
volume I-Entity
's I-Entity
data I-Entity
. O

Both B-Entity
volumes I-Entity
appear O
to O
be B-Action
set I-Action
up I-Action
as B-Modifier
FAT B-Entity
volumes I-Entity
. O

An O
attempt O
to O
read O
the O
data O
from O
these O
volumes O
with O
the O
code O
below O
: O
This O
will O
produce O
the O
following O
results O
: O
For O
\\.\Hd1 O
: O
For O
\\.\Hd2 O
: O
The O
ability O
to O
keep B-Action
its B-Entity
data I-Entity
on B-Modifier
TrueCrypt-like B-Entity
volumes I-Entity
provides O
Snake B-Entity
with O
a O
powerful O
ability O
to O
exchange O
data O
with O
the O
usermode O
DLL O
, O
as O
these O
volumes O
are O
accessible O
both O
from O
usermode O
and O
kernel O
mode O
. O

Static O
analysis O
of O
the O
code O
reveals O
that O
the B-Entity
Snake I-Entity
driver I-Entity
uses B-Action
virtual B-Entity
volumes I-Entity
to O
store B-Action
its B-Entity
data I-Entity
and I-Entity
additional I-Entity
files I-Entity
on B-Modifier
it B-Entity
. O

For O
example O
, O
it B-Entity
stores B-Action
its B-Entity
message I-Entity
queue I-Entity
in B-Modifier
a B-Entity
file I-Entity
called I-Entity
: O
The O
message O
queue O
indicates O
an O
asynchronous O
communication O
model O
between O
kernel O
mode O
driver O
and O
a O
usermode O
DLL O
, O
e.g O
. O

to O
pass O
commands O
, O
configuration O
parameters O
, O
binary O
images O
of O
additional O
Snake O
components O
. O

Other O
files O
that O
may O
also O
be O
found O
on O
the O
virtual O
volume O
are O
: O
klog O
, O
conlog O
, O
dump O
, O
rknginst.exe O
, O
where O
rknginst.exe O
could O
be O
the O
name O
of O
the O
original O
dropper O
, O
and O
other B-Entity
log I-Entity
files I-Entity
could O
potentially O
contain B-Action
executed B-Entity
command I-Entity
outputs I-Entity
, O
intercepted B-Action
keystrokes B-Entity
, O
and O
other O
output O
logs O
. O

The O
64-bit O
version O
of O
Snake O
must O
deal O
with O
a O
number O
of O
additional O
security O
protections O
implemented O
in O
64-bit O
editions O
of O
Microsoft O
Windows O
, O
the O
most O
significant O
of O
which O
are O
kernel O
driver O
signature O
validation O
and O
Kernel O
Patch O
Protection O
( O
more O
commonly O
known O
as O
PatchGuard O
) O
. O

PatchGuard O
is O
a O
feature O
of O
64-bit O
Windows O
which O
aims O
to O
prevent O
modification O
of O
the O
Windows O
kernel O
, O
something O
that O
is O
often O
performed O
by O
malware O
attempting O
to O
hide O
itself O
on O
an O
infected O
system O
. O

Although O
PatchGuard O
is O
successful O
at O
preventing O
kernel O
patching O
once O
initialised O
, O
several O
published O
bypass O
approaches O
exist O
, O
. O

The O
technique O
used O
by O
Snake O
appears O
to O
be O
similar O
to O
these O
approaches O
. O

The O
driver O
signing O
policy O
enforced O
by O
all O
64-bit O
versions O
of O
Windows O
from O
Vista O
onwards O
requires O
all O
kernel-mode O
drivers O
to O
be O
signed O
with O
a O
valid O
digital O
signature O
. O

The O
Snake O
dropper O
contains O
both O
32-bit O
and O
64-bit O
unsigned O
drivers O
, O
and O
it B-Entity
can O
successfully O
load B-Action
its B-Entity
unsigned I-Entity
64-bit I-Entity
driver I-Entity
on B-Modifier
a B-Entity
64-bit I-Entity
version I-Entity
of I-Entity
Windows I-Entity
XP I-Entity
– O
as O
driver O
signing O
is O
not O
enforced O
it O
does O
not O
have O
to O
resort O
to O
any O
tricks O
under O
this O
OS O
version O
. O

In O
this O
case O
, O
in O
order O
to O
ensure B-Action
the B-Entity
driver I-Entity
is I-Entity
loaded I-Entity
automatically I-Entity
at I-Entity
startup I-Entity
, O
the B-Entity
dropper I-Entity
can O
install B-Action
the B-Entity
64-bit I-Entity
driver I-Entity
on B-Modifier
64-bit B-Entity
Windows I-Entity
XP I-Entity
in O
the O
same O
way O
it B-Entity
installs B-Action
a B-Entity
32-bit I-Entity
driver I-Entity
on B-Modifier
a B-Entity
32-bit I-Entity
version I-Entity
of I-Entity
Windows I-Entity
XP I-Entity
. O

On B-Modifier
64-bit B-Entity
versions I-Entity
of I-Entity
Windows I-Entity
Vista I-Entity
and I-Entity
above I-Entity
it B-Entity
behaves B-Action
differently B-Entity
. O

Firstly O
, O
the B-Entity
64-bit I-Entity
unsigned I-Entity
driver I-Entity
file I-Entity
is B-Action
created I-Action
as O
usual O
: O
However O
, O
the O
driver O
is O
not O
registered O
; O
what O
is B-Action
registered I-Action
instead O
is O
the B-Entity
dropper I-Entity
itself I-Entity
. O

To O
do O
that O
, O
the B-Entity
dropper I-Entity
first O
copies B-Action
itself B-Entity
as O
: O
The B-Entity
dropper I-Entity
then O
registers B-Action
itself B-Entity
as B-Modifier
a B-Entity
service I-Entity
to O
ensure B-Action
it B-Entity
starts I-Entity
every I-Entity
time I-Entity
Windows I-Entity
is I-Entity
booted I-Entity
, O
by O
creating O
the O
values O
: O
Now O
comes O
the O
most O
interesting O
part O
: O
does O
the O
dropper O
manage O
to O
load O
its O
64-bit O
unsigned O
driver O
under O
64-bit O
versions O
of O
Windows O
Vista O
and O
later O
versions O
, O
such O
as O
64-bit O
Windows O
7/8 O
? O
The O
answer O
: O
Yes O
, O
it O
does O
. O

Does O
it O
resort O
to O
using O
bootkit O
technology O
, O
which O
has O
been O
used O
in O
the O
past O
to O
bypass O
protections O
to O
load O
unsigned O
64-bit O
drivers O
? O
The O
answer O
: O
No O
. O

Bootkits O
must O
overwrite O
the O
Master O
Boot O
Record O
( O
MBR O
) O
and O
antivirus O
products O
are O
well O
trained O
to O
catch O
that O
kind O
of O
bad O
behavior O
. O

The O
masterminds O
behind O
Snake O
rootkit O
seem O
to O
be O
well O
aware O
of O
this O
so O
what O
they O
resorted O
to O
instead O
is O
leveraging O
a O
vulnerability O
in O
a O
well-known O
virtualization O
product O
called O
VirtualBox O
, O
a O
product O
made O
by O
Oracle O
which O
is O
widely O
used O
by O
researchers O
to O
analyse O
malware O
. O

VirtualBox O
driver O
version O
1.6.2 O
was O
released O
in O
June O
2 O
, O
2008 O
. O

Two O
months O
later O
, O
in O
August O
2008 O
, O
security O
researchers O
reported O
that O
its O
main O
driver O
component O
, O
which O
is O
signed O
under O
the O
entity O
'' O
innotek O
Gmbh O
'' O
, O
contained O
a O
privilege O
escalation O
vulnerability O
. O

In O
a O
nutshell O
, O
the O
VirtualBox O
software O
installs O
a O
driver O
called O
VBoxDrv O
. O

The O
driver O
is O
controlled O
with O
the O
Input/Ouput O
Control O
Codes O
( O
32-bit O
values O
called O
IOCTL O
) O
passed O
along O
DeviceIoControl O
( O
) O
API O
. O

One O
of O
the O
documented O
transfer O
methods O
that O
the O
system O
uses O
to O
pass O
data O
between O
the O
caller O
of O
DeviceIoControl O
( O
) O
API O
and O
the O
driver O
itself O
is O
called O
METHODNEITHER O
. O

As O
per O
MSDN O
documentation O
, O
METHODNEITHER O
is O
a O
special O
transfer O
type O
when O
Input/Output O
Request O
Packet O
( O
IRP O
) O
supplies O
the O
user-mode O
virtual O
addresses O
of O
the O
input O
and O
output O
buffers O
, O
without O
validating O
or O
mapping O
them O
. O

It O
is O
the O
responsibility O
of O
the O
driver O
to O
validate O
the O
addresses O
sent O
from O
user O
mode O
in O
order O
to O
make O
sure O
those O
addresses O
are O
valid O
usermode O
addresses O
. O

The O
source O
code O
of O
the O
vulnerable O
driver O
( O
shown O
below O
) O
demonstrates O
how O
the O
integer O
value O
of O
the O
rc O
variable O
is O
first O
derived O
from O
the O
input O
parameters O
pDevObj O
( O
device O
object O
) O
and O
pIrp O
( O
request O
packet O
) O
. O

Next O
, O
that O
integer O
value O
is O
written O
into O
the O
UserBuffer O
- O
an O
arbitrary O
address O
, O
pointed O
by O
the O
input O
parameter O
pIrp O
( O
request O
packet O
) O
. O

As O
there O
are O
no O
validations O
made O
for O
the O
UserBuffer O
an B-Entity
attacker I-Entity
can O
craft B-Action
such B-Entity
input I-Entity
parameters I-Entity
that I-Entity
will I-Entity
define I-Entity
address I-Entity
within I-Entity
kernel I-Entity
memory I-Entity
to I-Entity
patch I-Entity
and I-Entity
the I-Entity
data I-Entity
to I-Entity
patch I-Entity
it I-Entity
with O
: O
Now O
that O
the B-Entity
vulnerable I-Entity
driver I-Entity
can O
be B-Action
used I-Action
as B-Modifier
a B-Entity
weapon I-Entity
to I-Entity
patch I-Entity
kernel I-Entity
memory I-Entity
, O
all O
the O
malware O
needs O
to O
do O
is O
to O
patch O
the O
content O
of O
the O
variable O
nt O
! O
gCiEnabled O
, O
a O
boolean O
variable O
'' O
Code O
Integrity O
Enabled O
'' O
that O
marks O
whether O
the O
system O
was O
booted O
in O
WinPE O
mode O
. O

When O
running O
in O
WinPE O
mode O
there O
is O
no O
Code O
Integrity O
control O
, O
therefore O
by O
enabling O
this O
mode O
by O
patching O
only O
one O
bit O
, O
Code B-Entity
Integrity I-Entity
verification I-Entity
is B-Action
disabled I-Action
so O
that O
the B-Entity
unsigned I-Entity
64-bit I-Entity
driver I-Entity
can O
be B-Action
loaded I-Action
. O

This O
variable O
is O
used O
within O
the O
function O
SepInitializeCodeIntegrity O
( O
) O
, O
implemented O
within O
CI.dll O
's O
function O
CiInitialize O
( O
) O
and O
imported O
by O
the O
NT O
core O
( O
ntoskrnl.exe O
) O
. O

In O
order O
to O
find O
the O
variable O
in O
kernel O
memory O
, O
the B-Entity
Snake I-Entity
dropper I-Entity
loads B-Action
a B-Entity
copy I-Entity
of I-Entity
the I-Entity
NT I-Entity
core I-Entity
image I-Entity
( I-Entity
ntoskrnl.exe I-Entity
) I-Entity
, O
locates B-Action
the B-Entity
import I-Entity
of I-Entity
CI.dll I-Entity
's I-Entity
function I-Entity
CiInitialize I-Entity
( I-Entity
) I-Entity
, O
and O
then O
SepInitializeCodeIntegrity B-Entity
( I-Entity
) I-Entity
within I-Entity
it I-Entity
. O

Then O
it B-Entity
parses B-Action
the B-Entity
function I-Entity
's I-Entity
code I-Entity
to B-Modifier
locate B-Entity
the I-Entity
offset I-Entity
of I-Entity
the I-Entity
variable I-Entity
. O

Once O
located O
, O
the O
content O
of O
the O
variable O
nt O
! O
gCiEnabled O
is O
patched O
in O
kernel O
memory O
and O
the B-Entity
64-bit I-Entity
unsigned I-Entity
driver I-Entity
is B-Action
loaded I-Action
. O

This O
explains O
why O
Snake B-Entity
dropper I-Entity
registers B-Action
itself B-Entity
as B-Modifier
a B-Entity
service I-Entity
to O
start B-Action
each B-Entity
time I-Entity
Windows I-Entity
starts I-Entity
: O
in O
order O
to O
install B-Action
the B-Entity
vulnerable I-Entity
VBox I-Entity
driver I-Entity
first O
, O
then O
pass O
it O
a O
malformed O
structure O
to O
disable B-Action
Code B-Entity
Integrity I-Entity
control I-Entity
with B-Modifier
a B-Entity
DeviceIoControl I-Entity
( I-Entity
) I-Entity
API I-Entity
call I-Entity
, O
and O
finally O
, O
load B-Action
the B-Entity
driver I-Entity
. O

In O
order O
to O
be O
able O
to O
perform O
the O
steps O
above O
, O
the B-Entity
dropper I-Entity
must O
first O
obtain B-Action
Administrator B-Entity
privileges I-Entity
. O

It B-Entity
attempts O
to O
do O
this O
by O
running B-Action
MS09-025 B-Entity
and I-Entity
MS10-015 I-Entity
exploits I-Entity
on B-Modifier
the B-Entity
target I-Entity
system I-Entity
. O

These O
exploits O
are O
bundled O
within O
the O
dropper O
in O
its O
resource O
section O
as O
executable O
files O
. O

Other O
resources O
embedded O
within O
the O
dropper O
are O
the O
32-bit O
and O
64-bit O
builds O
of O
its O
driver O
, O
a B-Entity
tool I-Entity
for O
creating B-Action
NTFS B-Entity
file I-Entity
systems I-Entity
, O
and O
the B-Entity
initial I-Entity
message I-Entity
queue I-Entity
file I-Entity
which O
is B-Action
written I-Action
into B-Modifier
the B-Entity
virtual I-Entity
volume I-Entity
. O

The O
message O
queue O
file O
contains O
configuration O
data O
and O
the O
libraries B-Entity
that O
will O
be B-Action
injected I-Action
into B-Modifier
usermode B-Entity
processes I-Entity
. O

The B-Entity
usermode I-Entity
DLLs I-Entity
injected B-Action
by O
the B-Entity
kernel-mode I-Entity
driver I-Entity
into B-Modifier
the B-Entity
userland I-Entity
system I-Entity
process I-Entity
( O
e.g O
. O

explorer.exe O
) O
are O
: O
The B-Entity
rkctlWin32.dll/rkctlx64.dll I-Entity
module I-Entity
uses B-Action
the B-Entity
following I-Entity
hard-coded I-Entity
named I-Entity
pipe I-Entity
for B-Modifier
communications B-Entity
: O
The B-Entity
remote I-Entity
commands I-Entity
it B-Entity
receives B-Action
appear O
to O
be O
designed O
to O
control B-Action
other B-Entity
components I-Entity
of I-Entity
Snake I-Entity
: O
The O
injsnakeWin32.dll/injsnakex64.dll O
module O
exports O
61 O
functions O
. O

It O
is O
designed O
to O
perform O
the O
high-level O
tasks O
such O
as O
: O
When O
the B-Entity
DLL I-Entity
activates B-Action
, O
it B-Entity
reads B-Action
configuration B-Entity
parameters I-Entity
from B-Modifier
the B-Entity
configuration I-Entity
queue I-Entity
, O
that O
the B-Entity
driver I-Entity
creates B-Action
on B-Modifier
a B-Entity
virtual I-Entity
volume I-Entity
. O

One O
of O
the O
parameters O
defines O
the B-Entity
pipe I-Entity
name I-Entity
( I-Entity
s I-Entity
) I-Entity
that O
the B-Entity
DLL I-Entity
should O
use B-Action
for B-Modifier
its B-Entity
communications I-Entity
. O

The B-Entity
remote I-Entity
commands I-Entity
received B-Action
by O
this B-Entity
Snake I-Entity
DLL I-Entity
module I-Entity
are O
designed O
to O
set O
up O
various O
communication O
parameters O
: O
To O
post B-Action
the B-Entity
data I-Entity
, O
the B-Entity
DLL I-Entity
can O
use O
the O
following O
User-Agent O
string O
'' O
Mozilla/4.0 O
( O
compatible O
; O
MSIE O
6.0 O
) O
'' O
. O

It B-Entity
may O
rely B-Action
on I-Action
the B-Entity
following I-Entity
Internet I-Entity
Media I-Entity
types I-Entity
( I-Entity
MIME I-Entity
types I-Entity
) I-Entity
for B-Modifier
data B-Entity
exfiltration I-Entity
: O
Request B-Entity
type I-Entity
it B-Entity
uses B-Action
can O
either O
be B-Action
POST B-Entity
of O
GET B-Entity
, O
and O
C B-Entity
& I-Entity
C I-Entity
server I-Entity
resource I-Entity
name I-Entity
is B-Action
/default.asp B-Entity
. O

One B-Entity
of I-Entity
the I-Entity
Snake I-Entity
components I-Entity
that O
could O
have O
been B-Action
downloaded I-Action
from B-Modifier
a B-Entity
remote I-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
, O
was B-Action
identified I-Action
as B-Modifier
a B-Entity
network I-Entity
reconnaissance I-Entity
tool I-Entity
. O

When B-Modifier
run B-Entity
as I-Entity
a I-Entity
command I-Entity
line I-Entity
tool I-Entity
, O
with O
its O
logic O
defined O
with O
the O
command O
line O
switches O
, O
this B-Entity
tool I-Entity
enumerates B-Action
other B-Entity
network I-Entity
hosts I-Entity
and O
detects B-Action
what B-Entity
Windows I-Entity
RPC I-Entity
services I-Entity
are I-Entity
enabled I-Entity
at I-Entity
the I-Entity
endpoints I-Entity
. O

It O
carries O
a B-Entity
list I-Entity
of I-Entity
interface I-Entity
identifiers I-Entity
associated B-Action
with B-Modifier
the B-Entity
named I-Entity
pipes I-Entity
. O

It B-Entity
then O
uses O
these O
identifiers O
to O
write B-Action
a B-Entity
message I-Entity
to B-Modifier
and O
read B-Action
a B-Entity
message I-Entity
from B-Modifier
the B-Entity
associated I-Entity
named I-Entity
pipes I-Entity
. O

By O
knowing O
what O
RPC O
services O
are O
running O
, O
it B-Entity
can O
successfully O
fingerprint B-Action
all B-Entity
network I-Entity
hosts I-Entity
by B-Modifier
mimicking B-Entity
the I-Entity
Metasploit I-Entity
's I-Entity
logic I-Entity
of I-Entity
OS I-Entity
fingerprinting I-Entity
via I-Entity
SMB I-Entity
. O

The O
fingerprinting O
allows O
it B-Entity
to O
reveal B-Action
the B-Entity
following I-Entity
characteristics I-Entity
for B-Modifier
each B-Entity
host I-Entity
found I-Entity
in I-Entity
the I-Entity
network I-Entity
: O
The B-Entity
data I-Entity
it O
retrieves O
is B-Action
encrypted I-Action
and O
saved B-Action
into B-Modifier
a B-Entity
configuration I-Entity
file I-Entity
% I-Entity
system I-Entity
% I-Entity
\vtmon.bin I-Entity
. O

This B-Entity
file I-Entity
is B-Action
then I-Action
further I-Action
encrypted I-Action
with B-Modifier
an B-Entity
NTL-based I-Entity
( I-Entity
Number I-Entity
Theory I-Entity
Library I-Entity
) I-Entity
algorithm I-Entity
and O
is B-Action
uploaded I-Action
by B-Modifier
the B-Entity
usermode-centric I-Entity
Snake I-Entity
rootkit I-Entity
to B-Modifier
the B-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
, O
along B-Modifier
with I-Modifier
other B-Entity
configuration I-Entity
files I-Entity
, I-Entity
such I-Entity
as I-Entity
mtmon.sdb I-Entity
, I-Entity
mtmon32.sdb I-Entity
, I-Entity
gstatsnd.bin I-Entity
, I-Entity
gstat.bin I-Entity
, I-Entity
gstat32.bin I-Entity
, I-Entity
and I-Entity
other I-Entity
log I-Entity
files I-Entity
found I-Entity
in I-Entity
the I-Entity
% I-Entity
windows I-Entity
% I-Entity
\ I-Entity
$ I-Entity
NtUninstallQ I-Entity
[ I-Entity
random I-Entity
] I-Entity
$ I-Entity
directory I-Entity
. O

By O
using O
this O
function O
the B-Entity
remote I-Entity
attacker I-Entity
can O
identify B-Action
any B-Entity
potentially I-Entity
exploitable I-Entity
hosts I-Entity
located I-Entity
in I-Entity
the I-Entity
same I-Entity
network I-Entity
as I-Entity
the I-Entity
victim I-Entity
. O

The B-Entity
attacker I-Entity
may O
then O
craft O
an O
exploit O
against O
those O
hosts O
, O
possibly O
by O
using O
the O
Metasploit O
framework O
, O
and O
then O
deliver B-Action
the B-Entity
generated I-Entity
shellcode I-Entity
back B-Modifier
to I-Modifier
the B-Entity
reconnaissance I-Entity
tool I-Entity
to B-Modifier
be B-Entity
applied I-Entity
against I-Entity
the I-Entity
identified I-Entity
hosts I-Entity
by I-Entity
running I-Entity
the I-Entity
tool I-Entity
with I-Entity
the I-Entity
'expos I-Entity
' I-Entity
switch I-Entity
. O

If O
the B-Entity
tool I-Entity
successfully O
delivers B-Action
the B-Entity
payload I-Entity
and O
exploits B-Action
the B-Entity
remote I-Entity
host I-Entity
( I-Entity
s I-Entity
) I-Entity
, O
it B-Entity
will O
replicate B-Action
the B-Entity
infection I-Entity
across B-Modifier
the B-Entity
network I-Entity
, O
taking B-Action
control I-Action
over B-Modifier
new B-Entity
hosts I-Entity
, O
thus O
repeating B-Action
the B-Entity
infection I-Entity
cycle I-Entity
all B-Entity
over I-Entity
again I-Entity
and O
spreading B-Action
the B-Entity
infection I-Entity
further B-Entity
. O

Unlike O
traditional O
worm O
techniques O
, O
this O
process O
is O
rather O
manual O
, O
but O
its O
danger O
is O
in O
the O
fact O
that O
the B-Entity
attacker I-Entity
can O
flexibly O
craft O
new O
attack O
methods O
, O
adjusting B-Action
them B-Entity
to B-Modifier
the B-Entity
hosts I-Entity
present I-Entity
within I-Entity
the I-Entity
network I-Entity
, O
thus O
preying O
on O
the O
weakest O
( O
least O
updated O
, O
most O
vulnerable O
) O
victims O
along O
its O
path O
. O

As O
seen O
from O
the O
check-in O
logs O
found O
within O
one O
of O
the O
recent O
samples O
, O
the O
time O
span O
covers O
almost O
6 O
years O
from O
January O
2007 O
till O
December O
2012 O
, O
which O
is O
aligned O
with O
the O
first O
reports O
of O
Agent.BTZ O
. O

It O
's O
worth O
noting O
that O
Agent.BTZ B-Entity
used B-Action
the B-Entity
same I-Entity
XOR I-Entity
key I-Entity
for B-Modifier
its B-Entity
logs I-Entity
as O
the O
most O
recent O
variants O
: O
Log B-Entity
files I-Entity
created B-Action
by O
the B-Entity
latest I-Entity
samples I-Entity
of I-Entity
Snake I-Entity
, O
compiled O
in O
2013 O
and O
2014 O
, O
were O
successfully O
decrypted O
with O
the O
same O
XOR O
key O
. O

Other O
similarities O
include O
the O
usage O
of O
the O
virtual O
partition O
\\.\Vd1 O
, O
the O
temporary O
file O
named O
FA.tmp O
, O
usage O
of O
files O
named O
mswmpdat.tlb O
, O
wmcache.nld O
, O
winview.ocx O
. O

The O
cyber-espionage O
operation O
behind O
the O
Snake O
rootkit O
is O
well O
established O
, O
a O
sample O
comiled O
in O
January O
2006 O
indicates O
that O
the O
activity O
would O
have O
begun O
in O
at O
least O
2005 O
. O

It B-Entity
is O
also O
sophisticated O
, O
using B-Action
complex B-Entity
techniques I-Entity
for B-Modifier
evading B-Entity
host I-Entity
defences I-Entity
and O
providing B-Action
the B-Entity
attackers I-Entity
covert B-Entity
communication I-Entity
channels I-Entity
. O

Toolmarks O
left O
behind O
by O
the O
authors O
'vlad O
' O
& O
'gilg O
' O
, O
leave O
tantalizing O
clues O
as O
to O
the O
personas O
behind O
this O
. O

From O
a O
technical O
perspective O
, O
Snake O
demonstrates O
two O
very O
different O
approaches O
to O
the O
task O
of O
building O
a O
cyber-espionage O
toolkit O
. O

One O
approach O
is O
to O
delegate B-Action
the B-Entity
network I-Entity
communication I-Entity
engine I-Entity
to B-Modifier
usermode B-Entity
code I-Entity
, O
backed O
up O
by O
a O
usermode O
rootkit O
. O

Another O
approach O
is O
to O
carry B-Action
out I-Action
all B-Entity
of I-Entity
the I-Entity
communications I-Entity
from B-Modifier
the B-Entity
kernel-mode I-Entity
driver I-Entity
, O
which O
is O
a O
very O
challenging O
task O
by O
itself O
. O

The O
complexity O
of O
the O
usermode-centric O
approach O
is O
on O
par O
with O
Rustock O
rootkit O
- O
it O
uses O
similar O
techniques O
. O

It O
's O
an O
old O
well-polished O
technology O
that O
evolved O
over O
the O
years O
and O
demonstrated O
its O
resilience O
and O
survivability O
under O
the O
stress O
of O
security O
counter- O
measures O
. O

The O
complexity O
of O
the O
kernel-centric O
architecture O
of O
Snake O
is O
quite O
unique O
. O

This O
architecture O
is O
designed O
to O
grant O
Snake O
as O
much O
flexibility O
as O
possible O
. O

When B-Modifier
most B-Entity
of I-Entity
the I-Entity
infected I-Entity
hosts I-Entity
are I-Entity
cut I-Entity
off I-Entity
from I-Entity
the I-Entity
outside I-Entity
world I-Entity
, O
it B-Entity
only B-Action
needs I-Action
one B-Entity
host I-Entity
to I-Entity
be I-Entity
connected I-Entity
online I-Entity
. O

The B-Entity
traffic I-Entity
is B-Action
then I-Action
routed I-Action
through B-Modifier
that B-Entity
host I-Entity
to O
make B-Action
external B-Entity
control I-Entity
and O
data B-Entity
exfiltration I-Entity
still B-Entity
possible I-Entity
. O

The B-Entity
presence I-Entity
of I-Entity
the I-Entity
reconnaissance I-Entity
tool I-Entity
in I-Entity
the I-Entity
Snake I-Entity
operators I-Entity
' I-Entity
framework I-Entity
suggests B-Action
the B-Entity
existence I-Entity
of I-Entity
an I-Entity
arsenal I-Entity
of I-Entity
infiltration I-Entity
tools I-Entity
, O
designed O
to O
compromise B-Action
a B-Entity
system I-Entity
, O
then O
find O
a O
way O
to O
replicate B-Action
into B-Modifier
other B-Entity
hosts I-Entity
, O
infect B-Action
them B-Entity
, O
and O
spread B-Action
the B-Entity
infection I-Entity
even B-Entity
further I-Entity
. O

As O
demonstrated O
, O
the B-Entity
backdoor I-Entity
commands I-Entity
allow B-Action
Snake B-Entity
to O
provide B-Action
remote B-Entity
attackers I-Entity
with B-Modifier
full B-Entity
remote I-Entity
access I-Entity
to I-Entity
the I-Entity
compromised I-Entity
system I-Entity
. O

Its O
ability O
to O
hibernate B-Action
, O
staying B-Action
fully B-Entity
inactive I-Entity
for B-Modifier
a B-Entity
number I-Entity
of I-Entity
days I-Entity
, O
makes B-Action
its B-Entity
detection I-Entity
during I-Entity
that I-Entity
time I-Entity
very B-Entity
difficult I-Entity
. O

The O
analysed O
code O
suggests O
that O
even O
file O
system O
and O
registry O
operations O
can O
be O
delegated O
by O
an O
infected O
module O
to O
another O
module O
in O
order O
to O
stay B-Action
unnoticed B-Entity
by B-Modifier
behaviour B-Entity
analysis I-Entity
engines I-Entity
of I-Entity
the I-Entity
antivirus I-Entity
products I-Entity
, O
and O
to O
overcome B-Action
account B-Entity
restrictions I-Entity
of I-Entity
the I-Entity
browser I-Entity
processes I-Entity
so O
that O
the B-Entity
injected I-Entity
module I-Entity
could O
still O
write B-Action
into B-Modifier
files B-Entity
and O
into B-Modifier
the B-Entity
sensitive I-Entity
registry I-Entity
hives I-Entity
. O

The B-Entity
logs I-Entity
and I-Entity
dumps I-Entity
it B-Entity
creates B-Action
on B-Modifier
the B-Entity
hidden I-Entity
virtual I-Entity
volumes I-Entity
contributes O
to O
its O
stealthiness O
too O
. O

A O
great O
deal O
of O
attention O
has O
also O
been O
given O
to O
keep B-Action
its B-Entity
network I-Entity
communications I-Entity
as B-Entity
quiet I-Entity
as I-Entity
possible I-Entity
. O

Its O
ability O
to O
generate B-Action
malicious B-Entity
traffic I-Entity
whenever B-Modifier
the B-Entity
user I-Entity
goes I-Entity
online I-Entity
and I-Entity
start I-Entity
loading I-Entity
the I-Entity
web I-Entity
pages I-Entity
allows O
it B-Entity
to O
'blend B-Action
in I-Action
' I-Action
with B-Modifier
the B-Entity
legitimate I-Entity
communications I-Entity
. O

We O
expect O
much O
more O
will O
be O
uncovered O
by O
researchers O
in O
the O
coming O
weeks O
as O
the O
capabilities O
of O
this O
operation O
are O
further O
fleshed O
out O
. O

However O
, O
as O
we O
implied O
in O
the O
opening O
section O
, O
we O
view O
this O
threat O
to O
be O
a O
permanent O
feature O
of O
the O
landscape O
. O

Whether O
they O
dismantle O
this O
toolset O
and O
start O
from O
scratch O
, O
or O
continue O
using O
tools O
which O
have O
been O
exposed O
, O
remains O
to O
be O
seen O
. O

For O
their O
targets O
though O
the O
considerable O
challenge O
of O
keeping O
secrets O
safe O
on O
sensitive O
networks O
will O
certainly O
continue O
for O
years O
to O
come O
. O

Recently O
, O
research O
was O
published O
identifying O
a B-Entity
Tor I-Entity
exit I-Entity
node I-Entity
, O
located O
in O
Russia O
, O
that O
was B-Action
consistently I-Action
and I-Action
maliciously I-Action
modifying I-Action
any B-Entity
uncompressed I-Entity
Windows I-Entity
executables I-Entity
downloaded I-Entity
through I-Entity
it I-Entity
. O

Naturally O
this O
piqued O
our O
interest O
, O
so O
we O
decided O
to O
peer O
down O
the O
rabbit O
hole O
. O

Suffice O
to O
say O
, O
the O
hole O
was O
a O
lot O
deeper O
than O
we O
expected O
! O
In O
fact O
, O
it O
went O
all O
the O
way O
back O
to O
the O
notorious O
Russian O
APT O
family O
MiniDuke O
, O
known O
to O
have O
been O
used O
in O
targeted O
attacks O
against O
NATO O
and O
European O
government O
agencies O
. O

The O
malware O
used O
in O
this O
case O
is O
, O
however O
, O
not O
a O
version O
of O
MiniDuke O
. O

It O
is O
instead O
a O
separate O
, O
distinct O
family O
of O
malware O
that O
we O
have O
since O
taken O
to O
calling O
OnionDuke O
. O

But O
lets O
start O
from O
the O
beginning O
. O

When O
a O
user O
attempts O
to O
download O
an O
executable O
via O
the O
malicious O
Tor O
exit O
node O
, O
what O
they O
actually O
receive O
is O
an O
executable O
'' O
wrapper O
'' O
that O
embeds O
both O
the O
original O
executable O
and O
a O
second O
, O
malicious O
executable O
. O

By B-Modifier
using B-Entity
a I-Entity
separate I-Entity
wrapper I-Entity
, O
the B-Entity
malicious I-Entity
actors I-Entity
are O
able O
to O
bypass B-Action
any B-Entity
integrity I-Entity
checks I-Entity
the I-Entity
original I-Entity
binary I-Entity
might I-Entity
contain I-Entity
. O

Upon O
execution O
, O
the O
wrapper O
will O
proceed O
to O
write O
to O
disk O
and O
execute O
the O
original O
executable O
, O
thereby O
tricking O
the O
user O
into O
believing O
that O
everything O
went O
fine O
. O

However O
, O
the O
wrapper O
will O
also O
write O
to O
disk O
and O
execute O
the O
second O
executable O
. O

In O
all O
the O
cases O
we O
have O
observed O
, O
this O
malicious O
executable O
has O
been O
the O
same O
binary O
( O
SHA1 O
: O
a75995f94854dea8799650a2f4a97980b71199d2 O
, O
detected O
as O
Trojan-Dropper O
: O
W32/OnionDuke.A O
) O
. O

This B-Entity
executable I-Entity
is B-Action
a B-Entity
dropper I-Entity
containing O
a B-Entity
PE I-Entity
resource I-Entity
that O
pretends B-Action
to B-Modifier
be B-Entity
an I-Entity
embedded I-Entity
GIF I-Entity
image I-Entity
file I-Entity
. O

In O
reality O
, O
the O
resource O
is O
actually O
an O
encrypted O
dynamically O
linked O
library O
( O
DLL O
) O
file O
. O

The B-Entity
dropper I-Entity
will O
proceed B-Action
to B-Modifier
decrypt B-Entity
this I-Entity
DLL I-Entity
, I-Entity
write I-Entity
it I-Entity
to I-Entity
disk I-Entity
and I-Entity
execute I-Entity
it I-Entity
. O

Once O
executed O
, O
the B-Entity
DLL I-Entity
file I-Entity
( O
SHA1 O
: O
b491c14d8cfb48636f6095b7b16555e9a575d57f O
, O
detected O
as O
Backdoor O
: O
W32/OnionDuke.B O
) O
will O
decrypt O
an O
embedded O
configuration O
( O
shown O
below O
) O
and O
attempt O
to O
connect B-Action
to B-Modifier
hardcoded B-Entity
C I-Entity
& I-Entity
C I-Entity
URLs I-Entity
specified I-Entity
in I-Entity
the I-Entity
configuration I-Entity
data I-Entity
. O

From O
these O
C O
& O
Cs O
the B-Entity
malware I-Entity
may O
receive B-Action
instructions B-Entity
to O
download B-Action
and I-Action
execute I-Action
additional B-Entity
malicious I-Entity
components I-Entity
. O

It O
should O
be O
noted O
, O
that O
we O
believe O
all O
five O
domains O
contacted O
by O
the O
malware O
are O
innocent O
websites O
compromised O
by O
the O
malware O
operators O
, O
not O
dedicated O
malicious O
servers O
. O

Through O
our O
research O
, O
we O
have O
also O
been O
able O
to O
identify O
multiple O
other O
components O
of O
the O
OnionDuke O
malware O
family O
. O

We O
have O
, O
for O
instance O
, O
observed O
components B-Entity
dedicated O
to O
stealing B-Action
login B-Entity
credentials I-Entity
from B-Modifier
the B-Entity
victim I-Entity
machine I-Entity
and O
components B-Entity
dedicated O
to O
gathering B-Action
further B-Entity
information I-Entity
on I-Entity
the I-Entity
compromised I-Entity
system I-Entity
like I-Entity
the I-Entity
presence I-Entity
of I-Entity
antivirus I-Entity
software I-Entity
or I-Entity
a I-Entity
firewall I-Entity
. O

Some B-Entity
of I-Entity
these I-Entity
components I-Entity
have O
been O
observed O
being B-Action
downloaded I-Action
and I-Action
executed I-Action
by O
the B-Entity
original I-Entity
backdoor I-Entity
process I-Entity
but O
for O
other O
components O
, O
we O
have O
yet O
to O
identify O
the O
infection O
vector O
. O

Most B-Entity
of I-Entity
these I-Entity
components I-Entity
do O
n't O
embed O
their O
own O
C O
& O
C O
information O
but O
rather O
communicate B-Action
with B-Modifier
their B-Entity
controllers I-Entity
through B-Modifier
the B-Entity
original I-Entity
backdoor I-Entity
process I-Entity
. O

One O
component O
, O
however O
, O
is O
an O
interesting O
exception O
. O

This B-Entity
DLL I-Entity
file I-Entity
( O
SHA1 O
d433f281cf56015941a1c2cb87066ca62ea1db37 O
, O
detected O
as O
Backdoor O
: O
W32/OnionDuke.A O
) O
contains B-Action
among B-Modifier
its B-Entity
configuration I-Entity
data I-Entity
a B-Entity
different I-Entity
hardcoded I-Entity
C I-Entity
& I-Entity
C I-Entity
domain I-Entity
, I-Entity
overpict.com I-Entity
and O
also O
evidence O
suggesting O
that O
this B-Entity
component I-Entity
may O
abuse B-Action
Twitter B-Entity
as B-Modifier
an B-Entity
additional I-Entity
C I-Entity
& I-Entity
C I-Entity
channel I-Entity
. O

What O
makes O
the O
overpict.com O
domain O
interesting O
, O
is O
it O
was O
originally O
registered O
in O
2011 O
with O
the O
alias O
of O
'' O
John O
Kasai O
'' O
. O

Within O
a O
two-week O
window O
, O
'' O
John O
Kasai O
'' O
also O
registered O
the O
following O
domains O
: O
airtravelabroad.com O
, O
beijingnewsblog.net O
, O
grouptumbler.com O
, O
leveldelta.com O
, O
nasdaqblog.net O
, O
natureinhome.com O
, O
nestedmail.com O
, O
nostressjob.com O
, O
nytunion.com O
, O
oilnewsblog.com O
, O
sixsquare.net O
and O
ustradecomp.com O
. O

This O
is O
significant O
because O
the B-Entity
domains I-Entity
leveldelta.com I-Entity
and I-Entity
grouptumbler.com I-Entity
have O
previously O
been B-Action
identified I-Action
as B-Modifier
C B-Entity
& I-Entity
C I-Entity
domains I-Entity
used I-Entity
by I-Entity
MiniDuke I-Entity
. O

This O
strongly O
suggests O
that O
although O
OnionDuke O
and O
MiniDuke O
are O
two O
separate O
families O
of O
malware O
, O
the O
actors O
behind O
them O
are O
connected O
through O
the O
use O
of O
shared O
infrastructure O
. O

Based O
on O
compilation O
timestamps O
and O
discovery O
dates O
of O
samples O
we O
have O
observed O
, O
we O
believe O
the B-Entity
OnionDuke I-Entity
operators I-Entity
have O
been B-Action
infecting I-Action
downloaded B-Entity
executables I-Entity
at O
least O
since B-Modifier
the B-Entity
end I-Entity
of I-Entity
October I-Entity
2013 I-Entity
. O

We O
also O
have O
evidence O
suggesting O
that O
, O
at O
least O
since O
February O
of O
2014 O
, O
OnionDuke B-Entity
has O
not O
only O
been B-Action
spread I-Action
by B-Modifier
modifying B-Entity
downloaded I-Entity
executables I-Entity
but O
also O
by B-Modifier
infecting B-Entity
executables I-Entity
in I-Entity
.torrent I-Entity
files I-Entity
containing I-Entity
pirated I-Entity
software I-Entity
. O

However O
, O
it O
would O
seem O
that O
the O
OnionDuke O
family O
is O
much O
older O
, O
both O
based O
on O
older O
compilation O
timestamps O
and O
also O
on O
the O
fact O
that O
some O
of O
the O
embedded O
configuration O
data O
make O
reference O
to O
an O
apparent O
version O
number O
of O
4 O
suggesting O
that O
at O
least O
three O
earlier O
versions O
of O
the O
family O
exist O
. O

During O
our O
research O
, O
we O
have O
also O
uncovered O
strong O
evidence O
suggesting O
that O
OnionDuke O
has O
been O
used O
in O
targeted O
attacks O
against O
European O
government O
agencies O
, O
although O
we O
have O
so O
far O
been O
unable O
to O
identify O
the O
infection O
vector O
( O
s O
) O
. O

Interestingly O
, O
this O
would O
suggest O
two O
very O
different O
targeting O
strategies O
. O

On O
one O
hand O
is O
the O
'' O
shooting O
a O
fly O
with O
a O
cannon O
'' O
mass-infection O
strategy O
through O
modified O
binaries O
and O
, O
on O
the O
other O
, O
the O
more O
surgical O
targeting O
traditionally O
associated O
with O
APT O
operations O
. O

In O
any O
case O
, O
although O
much O
is O
still O
shrouded O
in O
mystery O
and O
speculation O
, O
one O
thing O
is O
certain O
. O

While O
using O
Tor O
may O
help O
you O
stay O
anonymous O
, O
it O
does O
at O
the O
same O
time O
paint O
a O
huge O
target O
on O
your O
back O
. O

It O
's O
never O
a O
good O
idea O
to O
download O
binaries O
via O
Tor O
( O
or O
anything O
else O
) O
without O
encryption O
. O

The O
problem O
with O
Tor O
is O
that O
you O
have O
no O
idea O
who O
is O
maintaining O
the O
exit O
node O
you O
are O
using O
and O
what O
their O
motives O
are O
. O

VPNs O
( O
such O
as O
our O
Freedome O
VPN O
) O
will O
encrypt O
your O
connection O
all O
the O
way O
through O
the O
Tor O
network O
, O
so O
the O
maintainers O
of O
Tor O
exit O
nodes O
will O
not O
see O
your O
traffic O
and O
ca O
n't O
tamper O
with O
it O
. O

Samples O
: O
In O
late O
December O
2011 O
, O
CrowdStrike O
, O
Inc. O
received O
three O
binary O
executable O
files O
that O
were O
suspected O
of O
having O
been O
involved O
in O
a O
sophisticted O
attack O
against O
a O
large O
Fortune O
500 O
company O
. O

The O
files O
were O
analyzed O
to O
understand O
first O
if O
they O
were O
in O
fact O
malicious O
, O
and O
the O
level O
of O
sophistication O
of O
the O
samples O
. O

The O
samples O
were O
clearly O
malicious O
and O
varied O
in O
sophistication O
. O

All B-Entity
three I-Entity
samples I-Entity
provided B-Action
remote B-Entity
access I-Entity
to B-Modifier
the B-Entity
attacker I-Entity
, O
via B-Modifier
two B-Entity
Command I-Entity
and I-Entity
Control I-Entity
( I-Entity
C2 I-Entity
) I-Entity
servers I-Entity
. O

One B-Entity
sample I-Entity
is O
typical O
of O
what O
is O
commonly O
referred O
to O
as O
a O
'dropper O
' O
because O
its O
primary O
purpose O
is O
to O
write B-Action
a B-Entity
malicious I-Entity
component I-Entity
to B-Modifier
disk B-Entity
and O
connect O
it O
to O
the O
targeted O
hosts O
operating O
system O
. O

The O
malicious O
component O
in O
this O
case O
is O
what O
is O
commonly O
referred O
to O
as O
a O
Remote O
Access O
Tool O
( O
RAT O
) O
, O
this O
RAT O
is O
manifested O
as O
a B-Entity
Dynamic I-Entity
Link I-Entity
Library I-Entity
( I-Entity
DLL I-Entity
) I-Entity
installed B-Action
as B-Modifier
a B-Entity
service I-Entity
. O

The O
second O
sample O
analyzed O
is O
a O
dual O
use O
tool O
that O
can O
function O
both O
as O
a B-Entity
post I-Entity
exploitation I-Entity
tool I-Entity
used O
to O
infect B-Action
other B-Entity
systems I-Entity
, O
download B-Action
additional B-Entity
tools I-Entity
, O
remove B-Action
log B-Entity
data I-Entity
, O
and O
itself B-Entity
be B-Action
used I-Action
as B-Modifier
a B-Entity
backdoor I-Entity
. O

The B-Entity
third I-Entity
sample I-Entity
was O
a O
sophisticated O
implant O
that O
in O
addition O
to O
having B-Action
multiple B-Entity
communication I-Entity
capabilities I-Entity
, O
and O
the O
ability O
to O
act B-Action
as B-Modifier
a B-Entity
relay I-Entity
for I-Entity
other I-Entity
infected I-Entity
hosts I-Entity
, O
utilized B-Action
a B-Entity
kernel I-Entity
mode I-Entity
driver I-Entity
that O
can O
hide B-Action
aspects B-Entity
of I-Entity
the I-Entity
tool I-Entity
from B-Modifier
user-mode B-Entity
tools I-Entity
. O

This B-Entity
third I-Entity
component I-Entity
is B-Action
likely I-Action
used I-Action
for B-Modifier
long-term O
implantation O
and O
intelligence B-Entity
gathering I-Entity
. O

Some O
AV O
engines O
occasionally O
identify O
this O
sample O
as O
Derusbi O
Trojan O
. O

CrowdStrike O
Intelligence O
Team O
has O
seen O
Trojans O
from O
8 O
different O
builder O
variants O
of O
this O
RAT O
, O
including O
64-bit O
versions O
, O
used O
in O
targeted O
attacks O
in O
2011 O
against O
Defense O
, O
Energy/Power O
, O
and O
Chemical O
Industries O
in O
US O
and O
Japan O
. O

All O
of O
these O
samples O
reflect O
common O
toolmarks O
and O
tradecraft O
consistent O
with O
Chinese O
based O
actors O
who O
target O
various O
strategic O
interests O
of O
the O
United O
States O
including O
High O
Tech/Heavy O
Industry O
, O
Non-Governmental O
Organizations O
( O
NGOs O
) O
, O
State/Federal O
Government O
, O
Defense O
Industrial O
Base O
( O
DIB O
) O
, O
and O
organizations O
with O
vast O
economic O
interests O
. O

This O
report O
contains O
an O
in-depth O
technical O
analysis O
of O
the O
samples O
, O
detection/remediation/mitigation O
information O
, O
attribution O
intelligence O
, O
and O
a O
conclusion O
aimed O
at O
providing O
the O
reader O
with O
a O
synopsis O
of O
the O
report O
. O

The B-Entity
executable I-Entity
14c04f88dc97aef3e9b516ef208a2bf5 I-Entity
is O
commonly O
referred O
to O
as O
a O
'dropper O
' O
, O
which O
is O
designed O
with O
the O
purpose O
of O
extracting B-Action
from B-Modifier
itself B-Entity
a B-Entity
malicious I-Entity
payload I-Entity
and O
to O
initialize B-Action
and I-Action
install I-Action
it B-Entity
into B-Modifier
a B-Entity
targeted I-Entity
system I-Entity
. O

In O
this O
case O
, O
the B-Entity
malicious I-Entity
payload I-Entity
is O
a O
Dynamic-Link O
Library O
( O
DLL O
) O
, O
which O
enables B-Action
an B-Entity
attacker I-Entity
to B-Modifier
have B-Entity
full I-Entity
control I-Entity
of I-Entity
the I-Entity
system I-Entity
. O

This O
code O
appears O
to O
have O
been O
compiled O
on O
Wednesday O
May O
4th O
, O
2011 O
at O
11:04:24 O
A.M. O
UTC O
( O
equivalent O
to O
early O
evening O
time O
in O
China O
) O
. O

Note O
that O
the O
timestamp O
is O
in O
UTC O
, O
however O
the O
relative O
time O
of O
day O
in O
China O
is O
provided O
for O
the O
benefit O
of O
the O
reader O
. O

The B-Entity
sample I-Entity
first O
resolves B-Action
several B-Entity
library I-Entity
functions I-Entity
provided I-Entity
by I-Entity
Microsoft I-Entity
using B-Modifier
the B-Entity
LoadLibrary I-Entity
( I-Entity
) I-Entity
and I-Entity
GetProcAddress I-Entity
( I-Entity
) I-Entity
Application I-Entity
Programming I-Entity
Interfaces I-Entity
( I-Entity
APIs I-Entity
) I-Entity
. O

The O
imported O
function O
names O
are O
not O
encrypted O
; O
however O
, O
the O
function O
name O
is O
minutely O
obfuscated O
by O
a O
simple O
single O
character O
substitution O
: O
The B-Entity
dropper I-Entity
invokes B-Action
the B-Entity
SHGetSpecialFolderPath I-Entity
( I-Entity
) I-Entity
API I-Entity
supplying O
a O
Constant O
Special O
Item O
ID O
List O
( O
CSIDL O
) O
of O
'CSIDLCOMMONDOCUMENTS O
' O
to O
identify O
the O
destination O
folder O
for O
the O
malicious O
DLL O
payload O
. O

The O
CSIDL O
in O
this O
case O
pints O
to O
: O
'' O
The O
file O
system O
directory O
that O
contains O
documents O
that O
are O
common O
to O
all O
users O
. O

A O
typical O
path O
is O
C O
: O
\Documents O
and O
Settings\All O
Users\Documents O
. O

'' O
The B-Entity
dropper I-Entity
attempts O
to O
write B-Action
the B-Entity
malicious I-Entity
payload I-Entity
to B-Modifier
one B-Entity
of I-Entity
the I-Entity
following I-Entity
names I-Entity
, O
using B-Modifier
the B-Entity
first I-Entity
available I-Entity
name I-Entity
in I-Entity
this I-Entity
set I-Entity
: O
The B-Entity
dropper I-Entity
sets B-Action
the B-Entity
creation I-Entity
and I-Entity
last I-Entity
written I-Entity
timestamp I-Entity
of I-Entity
the I-Entity
newly I-Entity
created I-Entity
file I-Entity
to B-Modifier
the B-Entity
date I-Entity
2007-03-07 I-Entity
00:00:00 I-Entity
; O
this O
allows O
the B-Entity
newly I-Entity
created I-Entity
malicious I-Entity
DLL I-Entity
to O
blend B-Action
in I-Action
with B-Modifier
other B-Entity
system I-Entity
files I-Entity
. O

This B-Entity
is O
meant O
to O
prevent B-Action
identification B-Entity
during B-Modifier
disk B-Entity
forensics I-Entity
using O
a O
common O
investigative O
technique O
called O
a O
forensic O
analysis O
timeline O
. O

This O
date O
is O
specified O
in O
the O
dropper O
code O
and O
does O
not O
change O
across O
multiple O
infections O
. O

The B-Entity
malicious I-Entity
DLL I-Entity
file I-Entity
that I-Entity
is I-Entity
dropped I-Entity
is B-Action
hidden I-Action
in B-Modifier
a B-Entity
resource I-Entity
of I-Entity
the I-Entity
dropper I-Entity
binary I-Entity
. O

This O
is O
a O
relatively O
common O
technique O
used O
by O
malware O
dropper O
files O
to O
optimize O
the O
number O
of O
files O
required O
to O
infect O
a O
machine O
. O

The O
resource O
language O
of O
the O
malicious O
DLL O
is O
set O
to O
'' O
Chinese O
( O
Simplified O
) O
'' O
, O
this O
is O
a O
compiler O
artifact O
which O
indicates O
the O
language O
setting O
on O
the O
compiler O
used O
by O
the O
person O
who O
built O
the O
binary O
was O
set O
to O
'' O
Chinese O
( O
Simplified O
) O
'' O
at O
the O
time O
the O
dropper O
was O
compiled O
. O

The O
'MZ O
' O
header O
which O
denotes O
a O
binary O
executable O
file O
of O
the O
dropped O
DLL O
is O
initially O
obfuscated O
. O

When O
the B-Entity
dropper I-Entity
writes B-Action
the B-Entity
file I-Entity
to B-Modifier
disk B-Entity
, O
the B-Entity
first I-Entity
byte I-Entity
of I-Entity
the I-Entity
file I-Entity
is I-Entity
'Z I-Entity
' I-Entity
which O
prevents B-Action
the B-Entity
file I-Entity
from B-Modifier
executing O
or O
being B-Entity
detected I-Entity
as I-Entity
an I-Entity
executable I-Entity
by I-Entity
many I-Entity
defensive I-Entity
tools I-Entity
. O

The B-Entity
dropper I-Entity
subsequently O
opens B-Action
the B-Entity
dropped I-Entity
file I-Entity
and O
corrects B-Action
the B-Entity
header I-Entity
by B-Modifier
writing B-Entity
the I-Entity
'M I-Entity
' I-Entity
over I-Entity
the I-Entity
first I-Entity
byte I-Entity
, O
allowing O
the O
file O
to O
be O
executed O
. O

A O
subroutine O
to O
decompress O
the O
dropped O
file O
is O
present O
as O
'dead O
code O
' O
( O
code O
that O
is O
not O
used O
) O
in O
the O
binary O
. O

This O
subroutine O
will O
be O
invoked O
on O
the O
already O
closed O
file O
handle O
of O
the O
dropped O
file O
in O
the O
present O
code O
version O
. O

Since O
the O
dropped O
resource O
is O
not O
compressed O
, O
the O
routine O
fails O
. O

This O
indicates O
a O
low O
sophistication O
modification O
to O
the O
original O
dropper O
code O
to O
make O
it O
work O
with O
an O
uncompressed O
source O
. O

The O
final O
step O
the B-Entity
dropper I-Entity
performs O
is O
to O
load B-Action
the B-Entity
dropped I-Entity
DLL I-Entity
into B-Modifier
its B-Entity
own I-Entity
process I-Entity
space I-Entity
; O
it O
then O
resolves O
the O
export O
'OpenINFOPerformanceData O
' O
from O
the O
DLL O
and O
invokes O
it O
with O
the O
dropped O
DLL O
's O
filename O
as O
parameter O
. O

This B-Entity
export I-Entity
then O
implements B-Action
the B-Entity
actual I-Entity
install I-Entity
logic I-Entity
to B-Modifier
maintain B-Entity
persistence I-Entity
and O
invoke O
the O
main O
routine O
. O

The O
dropper O
binary O
contains O
an O
icon O
resource O
that O
resembles O
the O
'Google O
Chrome O
' O
browser O
icon O
, O
the O
re- O
source O
language O
is O
set O
to O
'' O
Chinese O
( O
Simplified O
) O
'' O
, O
which O
is O
consistent O
with O
the O
builder O
of O
the O
tool O
systems O
language O
set O
to O
Chinese O
. O

The B-Entity
use I-Entity
of I-Entity
the I-Entity
Chrome I-Entity
icon I-Entity
may O
indicate O
a O
possible O
attempt O
to O
socially B-Action
engineer I-Action
the B-Entity
intended I-Entity
victim I-Entity
into B-Modifier
thinking B-Entity
the I-Entity
dropper I-Entity
was I-Entity
a I-Entity
legitimate I-Entity
file I-Entity
associated I-Entity
with I-Entity
Google I-Entity
. O

This B-Entity
sample I-Entity
is B-Action
a B-Entity
'backdoor I-Entity
' I-Entity
which O
is O
the B-Entity
DLL I-Entity
dropped B-Action
by O
the B-Entity
dropper I-Entity
sample I-Entity
file I-Entity
with O
an O
MD5 O
of O
14c04f88dc97aef3e9b516ef208a2bf5 O
. O

This O
code O
appears O
to O
have O
been O
compiled O
on O
Wednesday O
May O
4th O
, O
2011 O
at O
10:48:19 O
A.M. O
UTC O
( O
equivalent O
to O
early O
evening O
time O
in O
China O
) O
. O

It O
is O
instantiated O
when O
it B-Entity
is B-Action
mapped I-Action
into B-Modifier
the B-Entity
process I-Entity
space I-Entity
of I-Entity
its I-Entity
dropped I-Entity
file I-Entity
, O
and O
its O
' O
export O
named O
'OpenINFOPerformanceData O
' O
is O
called O
. O

This O
export O
first O
attempts O
to O
stop O
a O
service O
called O
'' O
msupdate O
'' O
, O
which O
is O
not O
a O
known O
Microsoft O
Windows O
service O
despite O
the O
appearance O
. O

If O
the O
service O
is O
present O
, O
the B-Entity
malware I-Entity
replaces B-Action
its B-Entity
previous I-Entity
instances I-Entity
or I-Entity
versions I-Entity
of I-Entity
this I-Entity
backdoor I-Entity
. O

After O
attempting O
to O
disable O
the O
existing O
service O
, O
the B-Entity
malware I-Entity
tries O
to O
install B-Action
itself B-Entity
as B-Modifier
a B-Entity
service I-Entity
with I-Entity
that I-Entity
same I-Entity
name I-Entity
. O

During O
installation O
, O
the B-Entity
sample I-Entity
attempts O
to O
use B-Action
documented B-Entity
APIs I-Entity
such I-Entity
as I-Entity
OpenSCManager I-Entity
( I-Entity
) I-Entity
and I-Entity
CreateService I-Entity
( I-Entity
) I-Entity
to B-Modifier
initialize B-Entity
itself I-Entity
as I-Entity
a I-Entity
persistent I-Entity
Windows I-Entity
service I-Entity
. O

As O
a O
precaution O
, O
the B-Entity
sample I-Entity
writes B-Action
settings B-Entity
directly B-Modifier
to I-Modifier
the B-Entity
Windows I-Entity
Registry I-Entity
to O
accomplish O
the O
same O
goal O
if O
installing O
the O
service O
with O
the O
documented O
APIs O
fails O
. O

The B-Entity
registry I-Entity
change I-Entity
creates B-Action
the B-Entity
following I-Entity
key I-Entity
: O
Following O
this O
, O
the B-Entity
subroutine I-Entity
will O
set B-Action
the B-Entity
value I-Entity
of I-Entity
the I-Entity
'ServiceDLL I-Entity
' I-Entity
to B-Modifier
the B-Entity
module I-Entity
handle I-Entity
of I-Entity
the I-Entity
DLL I-Entity
. O

The B-Entity
next I-Entity
key I-Entity
to O
be B-Action
changed I-Action
is O
: O
HKEYLOCALMACHINE\\SOFTWARE\\Microsoft\\Windows O
NT\\CurrentVersion\\Svchost O
, O
which O
will O
have O
the B-Entity
'msupdate I-Entity
' I-Entity
key I-Entity
set B-Action
to B-Modifier
'msupdate B-Entity
' I-Entity
. O

The B-Entity
export I-Entity
'CollectW3PerfData I-Entity
' I-Entity
is B-Action
registered I-Action
as B-Modifier
the B-Entity
main I-Entity
function I-Entity
of I-Entity
the I-Entity
DLL I-Entity
. O

If O
the O
installation O
of O
the O
new O
service O
is O
successful O
, O
the B-Entity
sample I-Entity
then O
starts B-Action
the B-Entity
new I-Entity
service I-Entity
and O
exits O
. O

If O
the O
installation O
fails O
, O
the B-Entity
sample I-Entity
spawns B-Action
a B-Entity
new I-Entity
process I-Entity
using B-Modifier
rundll32.exe B-Entity
, O
this O
executable O
will O
instantiate O
the O
DLL O
and O
can O
call O
a O
specific O
exported O
function O
. O

In O
the O
case O
of O
installation O
failure O
, O
rundll32.exe O
calls O
the O
main O
functions O
export O
'CollectW3PerfData O
' O
. O

The O
rundll32.exe O
is O
instantiated O
with O
a O
new O
NULL O
Security O
Identifier O
( O
SID O
) O
( O
S-1-0-0 O
) O
with O
permissions B-Entity
set B-Action
to B-Modifier
grant B-Entity
all I-Entity
access I-Entity
to I-Entity
the I-Entity
file I-Entity
. O

This B-Entity
allows B-Action
any B-Entity
user I-Entity
to B-Modifier
have B-Entity
complete I-Entity
control I-Entity
over I-Entity
the I-Entity
machine I-Entity
, O
as O
rundll32.exe O
is O
frequently O
launched O
by O
tasks O
such O
as O
changing O
the O
time O
, O
wallpaper O
, O
or O
other O
system O
settings O
. O

This O
means O
that O
after O
cleaning B-Action
up I-Action
the B-Entity
components I-Entity
dropped I-Entity
by I-Entity
the I-Entity
malware I-Entity
, O
the B-Entity
system I-Entity
remains B-Action
vulnerable B-Entity
to I-Entity
local I-Entity
attacks I-Entity
by O
simply O
overwriting O
the O
legitimate O
rundll32.exe O
executable O
with O
a O
malicious O
version O
and O
await O
it O
's O
automatic O
execution O
by O
the O
Operating O
System O
. O

The O
main O
entry O
point O
to O
the O
DLL O
is O
named O
'CollectW3PerfData O
' O
, O
as O
it O
first O
creates O
and O
displays O
a O
fake O
Window O
with O
class O
'' O
NOD32 O
% O
d O
'' O
where O
% O
d O
is O
replaced O
with O
a O
pseudo-random O
number O
. O

This O
may O
be O
an O
attempt O
to O
fool B-Action
some B-Entity
automated I-Entity
dynamic I-Entity
analysis I-Entity
or I-Entity
anti-malware I-Entity
software I-Entity
into B-Modifier
believing B-Entity
this I-Entity
is I-Entity
the I-Entity
legitimate I-Entity
ESET I-Entity
AV I-Entity
software I-Entity
. O

The O
window O
is O
however O
not O
visible O
and O
implements O
no O
specific O
functionality O
. O

After O
creating O
this O
window O
, O
the B-Entity
routine I-Entity
starts O
the O
main O
thread O
that O
eventually O
initiates B-Action
calling B-Entity
out I-Entity
to I-Entity
the I-Entity
Command I-Entity
and I-Entity
Control I-Entity
( I-Entity
C2 I-Entity
) I-Entity
. O

In O
order O
to O
accomplish O
this O
task O
, O
the O
newly O
created O
thread O
initializes O
networking O
APIs O
using O
WSAStartup O
( O
) O
and O
resolves O
some O
other O
APIs O
dynamically O
using O
LoadLibrary O
( O
) O
and O
GetProcAddress O
( O
) O
. O

Once O
the O
proper O
API O
's O
have O
been O
resolved O
, O
the O
sample O
then O
assigns O
a O
NULL O
SID O
to O
the O
rundll32.exe O
executable O
and O
sets O
the O
current O
process O
' O
Window O
Station O
to O
'' O
winsta0 O
'' O
, O
which O
enables O
the B-Entity
sample I-Entity
to O
access B-Action
the B-Entity
real I-Entity
user I-Entity
's I-Entity
desktop I-Entity
if B-Modifier
started B-Entity
as I-Entity
service I-Entity
. O

The B-Entity
communication I-Entity
to I-Entity
the I-Entity
C2 I-Entity
is B-Action
handled I-Action
by B-Modifier
a B-Entity
while I-Entity
( I-Entity
) I-Entity
loop I-Entity
, O
with O
each O
successive O
connection O
attempt O
causing O
the O
loop O
to O
invoke O
the O
Windows O
Sleep O
( O
) O
API O
for O
a O
time O
interval O
of O
2 O
seconds O
, O
exponentially O
increasing O
in O
length O
up O
to O
1024 O
seconds O
( O
17 O
minutes O
) O
and O
then O
restarting O
back O
to O
2 O
seconds O
. O

The O
C2 O
location O
in O
this O
sample O
is O
statically O
defined O
as O
1.9.5.38:443 O
( O
Malaysia O
: O
Tmnet O
, O
Telekom O
Malaysia O
Bhd O
) O
. O

While O
ther O
is O
'dead O
code O
' O
that O
will O
download O
the O
C2 O
location O
from O
an O
HTTP O
URL O
that O
could O
be O
defined O
in O
the O
binary O
, O
using O
the O
User-Agent O
string O
'' O
Google O
'' O
, O
this O
code O
is O
not O
activated O
due O
to O
the O
format O
of O
the O
stat- O
ically O
defined O
C2 O
location O
using O
an O
IP O
address O
. O

Thus O
the B-Entity
sample I-Entity
will O
only O
attempt O
to O
connect B-Action
directly O
using B-Modifier
a B-Entity
raw I-Entity
socket I-Entity
to B-Modifier
the B-Entity
C2 I-Entity
located I-Entity
at I-Entity
1.9.5.38:443 I-Entity
. O

This O
indicates O
the O
use O
of O
a O
'boiler O
plate O
code O
' O
or O
a O
builder O
software O
package O
that O
automates O
the O
creation O
of O
the O
malicious O
sample O
. O

The B-Entity
malicious I-Entity
sample I-Entity
sends B-Action
an B-Entity
initial I-Entity
beacon I-Entity
to B-Modifier
the B-Entity
C2 I-Entity
that O
includes O
the O
following O
information O
: O
The B-Entity
beacon I-Entity
is B-Action
encrypted I-Action
using B-Modifier
an B-Entity
XOR/ADD I-Entity
loop I-Entity
using I-Entity
the I-Entity
statically I-Entity
defined I-Entity
key I-Entity
0x1C I-Entity
and O
sent B-Action
to B-Modifier
the B-Entity
C2 I-Entity
. O

The O
following O
python O
function O
can O
be O
used O
to O
decode O
the O
beacon O
stings O
: O
After O
sending B-Action
the B-Entity
initial I-Entity
beacon I-Entity
, O
the B-Entity
routine I-Entity
loops O
receiving B-Action
incoming B-Entity
commands I-Entity
and O
executes B-Action
them B-Entity
in O
sequence O
. O

When O
a O
connection O
can O
successfully O
be O
established O
to O
the O
C2 O
server O
, O
the O
sleep O
timer O
is O
reset O
to O
two O
seconds O
for O
the O
next O
attempt O
. O

The O
network O
protocol O
used O
by O
this O
sample O
resembles O
a O
'Type-Length-Value O
' O
layout O
in O
both O
directions O
. O

Each O
16 O
byte O
request O
header O
consists O
of O
: O
Zero O
or O
more O
of O
specified O
bytes O
of O
additional O
payload O
then O
follows O
the O
header O
. O

This B-Entity
inbound I-Entity
payload I-Entity
is B-Action
received I-Action
unconditionally O
and O
regardless O
of O
command O
type O
into O
a O
fixed-size O
stack O
buffer O
of O
408 O
bytes O
size O
. O

Providing O
additional O
payload O
of O
any O
larger O
size O
will O
result O
in O
a O
trivial O
exploitable O
stack O
buffer O
overflow O
that O
allows O
arbitrary O
code O
execution O
due O
to O
the O
absence O
of O
any O
security O
features O
. O

However O
, O
exploitation O
of O
this O
vulnerability O
is O
unnecessary O
due O
to O
the O
already O
available O
unauthenticated O
command O
execution O
capabilities O
of O
this O
backdoor O
. O

Certain O
commands O
initiate O
a O
second O
connection O
to O
the O
C2 O
in O
a O
separate O
thread O
using O
the O
same O
network O
protocol O
but O
providing O
a O
different O
request O
command O
identifier O
than O
for O
the O
initial O
beacon O
. O

The B-Entity
primary I-Entity
aim I-Entity
of I-Entity
this I-Entity
backdoor I-Entity
is B-Action
remote B-Entity
desktop I-Entity
control I-Entity
functionality I-Entity
comparable I-Entity
to I-Entity
VNC I-Entity
or I-Entity
Remote I-Entity
Desktop I-Entity
over I-Entity
a I-Entity
custom I-Entity
protocol I-Entity
. O

It O
allows O
the B-Entity
adversary I-Entity
to O
view B-Action
the B-Entity
main I-Entity
desktop I-Entity
graphically B-Entity
and O
control B-Action
the B-Entity
keyboard I-Entity
and O
mouse B-Entity
. O

This B-Entity
remote I-Entity
control I-Entity
functionality I-Entity
is B-Action
implemented I-Action
as B-Modifier
separate B-Entity
messages I-Entity
for I-Entity
mouse I-Entity
clicks I-Entity
, I-Entity
pressed I-Entity
keys I-Entity
, I-Entity
etc I-Entity
. I-Entity

using B-Modifier
command B-Entity
identifiers I-Entity
0x20000002 I-Entity
to I-Entity
0x20000019 I-Entity
. O

The B-Entity
command I-Entity
0x22000001 I-Entity
initiates B-Action
continuous B-Entity
transmission I-Entity
of I-Entity
screen I-Entity
captures I-Entity
to I-Entity
the I-Entity
C2 I-Entity
. O

The B-Entity
screen I-Entity
captures I-Entity
are B-Action
created I-Action
using B-Modifier
a B-Entity
series I-Entity
of I-Entity
Microsoft I-Entity
Windows I-Entity
Graphic I-Entity
Device I-Entity
Interface I-Entity
( I-Entity
GDI I-Entity
) I-Entity
API I-Entity
calls I-Entity
culminating I-Entity
in I-Entity
a I-Entity
call I-Entity
to I-Entity
GetDIBits I-Entity
( I-Entity
) I-Entity
. O

Command O
0x20000001 O
exits O
the O
backdoor O
and O
0x20000000 B-Entity
is O
issued O
to O
completely O
remove B-Action
the B-Entity
backdoor I-Entity
from B-Modifier
the B-Entity
system I-Entity
. O

When O
command O
0x23000004 O
is O
received O
, O
a B-Entity
temporary I-Entity
new I-Entity
user I-Entity
'' I-Entity
DomainUser I-Entity
'' I-Entity
with I-Entity
password I-Entity
'' I-Entity
Dom4 I-Entity
! I-Entity
nU- I-Entity
serP4ss I-Entity
'' I-Entity
is B-Action
created I-Action
and O
added B-Action
to B-Modifier
the B-Entity
local I-Entity
Administrators I-Entity
group I-Entity
. O

The B-Entity
backdoor I-Entity
is B-Action
then I-Action
started I-Action
under B-Modifier
that B-Entity
account I-Entity
and O
the B-Entity
user I-Entity
is B-Action
deleted I-Action
. O

It O
would O
appear O
this B-Entity
technique I-Entity
is O
meant O
to O
obfuscate B-Action
the B-Entity
activities I-Entity
of I-Entity
the I-Entity
malicious I-Entity
sample I-Entity
by B-Modifier
masking B-Entity
the I-Entity
process I-Entity
creator I-Entity
's I-Entity
user I-Entity
name I-Entity
to I-Entity
appear I-Entity
to I-Entity
be I-Entity
a I-Entity
generic I-Entity
domain I-Entity
user I-Entity
. O

Note O
that O
such O
an O
account O
does O
not O
normally O
exist O
in O
an O
Active O
Directory O
environment O
. O

Additionally O
, O
the O
primary O
C2 O
connection O
allows O
for O
requests O
to O
start O
additional O
connections O
to O
the O
C2 O
imple- O
menting O
the O
following O
functionality O
: O
This O
sample O
is O
typical O
of O
a O
post O
exploitation O
tool O
; O
it O
is O
written O
in O
.NET O

2.0 O
. O

This O
code O
appears O
to O
have O
been O
compiled O
on O
Thursday O
May O
26th O
, O
2011 O
at O
10:21:44 O
A.M. O
UTC O
( O
early O
evening O
time O
in O
China O
) O
. O

The O
backdoor O
functionality O
can O
be O
instantiated O
either O
directly O
from O
the O
command O
line O
or O
through O
commands B-Entity
issued B-Action
over B-Modifier
a B-Entity
network I-Entity
based I-Entity
protocol I-Entity
via B-Modifier
the B-Entity
C2 I-Entity
. O

If O
no O
arguments O
are O
given O
, O
a B-Entity
connection I-Entity
to I-Entity
the I-Entity
C2 I-Entity
is B-Action
initiated I-Action
to B-Modifier
the B-Entity
stati- I-Entity
cally I-Entity
defined I-Entity
IP I-Entity
address I-Entity
. O

The B-Entity
command I-Entity
line I-Entity
options I-Entity
support B-Action
post O
exploitation O
capabilities O
such O
as O
changing B-Entity
file I-Entity
timestamps I-Entity
, O
forensic B-Entity
mitigation I-Entity
, O
privilege B-Entity
escalation I-Entity
, O
launching B-Entity
the I-Entity
executable I-Entity
, O
and O
specifying B-Entity
a I-Entity
specific I-Entity
C2 I-Entity
. O

One O
interesting O
command O
line O
option O
allows O
the B-Entity
backdoor I-Entity
to O
filter B-Action
the B-Entity
contents I-Entity
of I-Entity
specified I-Entity
files I-Entity
to O
remove B-Action
content B-Entity
using B-Modifier
a B-Entity
regular I-Entity
expression I-Entity
( I-Entity
regex I-Entity
) I-Entity
. O

This B-Entity
command I-Entity
then O
modifies B-Action
the B-Entity
creation I-Entity
, I-Entity
modification I-Entity
, I-Entity
and I-Entity
last I-Entity
access I-Entity
timestamps I-Entity
of I-Entity
the I-Entity
modified I-Entity
file I-Entity
to B-Modifier
conceal B-Entity
the I-Entity
content I-Entity
modifications I-Entity
. O

A O
detailed O
listing O
of O
command O
line O
arguments O
can O
be O
viewed O
in O
Appendix O
A O
. O

This B-Entity
activity I-Entity
is B-Action
generally I-Action
associated I-Action
with B-Modifier
log B-Entity
cleaning I-Entity
to I-Entity
com- I-Entity
plicate I-Entity
a I-Entity
forensic I-Entity
investigation I-Entity
. O

The O
sample O
contains O
an O
embedded O
IP O
address O
for O
C2 O
that O
is O
stored O
in O
an O
encrypted O
format O
as O
a O
string O
re- O
source O
: O
The O
first O
two O
bytes O
of O
this O
string O
represent O
the O
base O
16 O
length O
of O
the O
encrypted O
string O
, O
in O
this O
case O
, O
'' O
0x14 O
'' O
. O

Following O
this O
is O
a O
base64 O
encoded O
string O
of O
the O
specified O
length O
. O

Once O
this O
string O
has O
been O
decoded O
using O
base64 O
, O
the O
result O
is O
then O
XOR O
'd O
with O
the O
fixed O
value O
of O
0xAA O
yielding O
the O
decoded O
IP O
address O
202.86.190.3:80 O
( O
Hong O
Kong O
: O
TeleOne O
( O
HK O
) O
Limited O
) O
. O

There O
are O
three O
components O
to O
the O
protocol O
: O
Authentication B-Entity
is B-Action
accomplished I-Action
using B-Modifier
a B-Entity
32 I-Entity
byte I-Entity
packet I-Entity
, O
this O
packet O
consists O
of O
: O
An B-Entity
example I-Entity
authentication I-Entity
packet I-Entity
sent B-Action
to B-Modifier
the B-Entity
C2 I-Entity
is O
located O
in O
Appendix O
E. O
After O
sending B-Action
the B-Entity
initial I-Entity
authentication I-Entity
packet I-Entity
, O
the B-Entity
sample I-Entity
verifies B-Action
that B-Modifier
the B-Entity
first I-Entity
four I-Entity
bytes I-Entity
of I-Entity
the I-Entity
response I-Entity
is I-Entity
equal I-Entity
to I-Entity
a I-Entity
statically I-Entity
defined I-Entity
value I-Entity
, O
in O
this O
sample O
the O
value O
is O
: O
0x16030100 O
. O

In O
addition O
, O
an B-Entity
8 I-Entity
byte I-Entity
key I-Entity
is B-Action
sent I-Action
to B-Modifier
the B-Entity
client I-Entity
which O
is O
then O
RC4 O
encrypted O
using O
the O
random O
number O
generated O
in O
step O
2 O
from O
above O
as O
the O
password O
. O

This O
value O
is O
then O
transformed O
using O
a O
simple O
algorithm O
in O
Appendix O
F O
into O
a O
32 O
byte O
array O
. O

The O
first O
16 O
bytes O
of O
this O
array O
are O
then O
used O
as O
the O
KEY O
and O
the O
second O
16 O
bytes O
are O
used O
as O
the O
IV O
for O
setting O
up O
AES B-Entity
encryption I-Entity
which O
is O
then O
used O
to O
encrypt B-Action
and I-Action
decrypt I-Action
any B-Entity
further I-Entity
communications I-Entity
. O

Beacon O
, O
this O
is O
typical O
of O
this O
type O
of O
malicious O
sample O
, O
it O
allows O
the O
operator O
to O
separate O
various O
infected O
hosts O
in O
a O
targeted O
campaign O
. O

The O
beacon O
for O
this O
sample O
is O
formatted O
as O
XML O
and O
consists O
of O
: O
An O
example O
of O
an O
unencrypted O
beacon O
: O
Command B-Entity
handling I-Entity
loop I-Entity
, O
this O
is O
a O
loop O
structure O
that O
will O
process B-Action
and I-Action
execute I-Action
commands B-Entity
sent I-Entity
by I-Entity
the I-Entity
C2 I-Entity
. O

The B-Entity
malware I-Entity
sends B-Action
and O
receives B-Action
a B-Entity
heartbeat/keepalive I-Entity
packet I-Entity
every B-Modifier
2 B-Entity
minutes I-Entity
. O

The O
command O
format O
is O
derived O
from O
a O
structure O
consisting O
of O
: O
These O
fields O
are O
received O
as O
a O
sequence O
of O
serialized O
.NET O

objects O
in O
the O
order O
specified O
. O

A O
detailed O
description O
of O
the O
possible O
values O
for O
commands O
is O
in O
Appendix O
D. O
It O
is O
important O
to O
note O
that O
the O
order O
in O
which O
the O
application O
defines O
them O
is O
not O
the O
same O
order O
as O
they O
appear O
to O
be O
coming O
over O
the O
network O
. O

Examples O
of O
implemented O
commands O
include O
download B-Action
and O
upload B-Action
files B-Entity
, O
installing B-Action
new B-Entity
.NET I-Entity
assemblies I-Entity
, O
calling B-Action
methods B-Entity
on B-Modifier
those B-Entity
assemblies I-Entity
, O
connecting B-Action
to B-Modifier
new B-Entity
C2 I-Entity
servers I-Entity
and O
executing B-Action
processes B-Entity
. O

This B-Entity
sample I-Entity
is B-Action
a B-Entity
sophisticated I-Entity
backdoor I-Entity
which O
implements B-Action
several B-Entity
communications I-Entity
protocols I-Entity
and O
was O
developed O
in O
C++ O
. O

This O
binary O
is O
compiled O
with O
the O
/GS O
flag O
using O
Visual O
Studio O
2010 O
, O
enabling O
stack O
buffer O
overflow O
detection O
. O

This O
code O
appears O
to O
have O
been O
compiled O
on O
Sunday O
October O
30 O
, O
2011 O
at O
12:43:33 O
P.M. O
UTC O
( O
late O
evening O
time O
in O
China O
) O
. O

The O
code O
contains O
several O
Run O
Time O
Type O
Information O
( O
RTTI O
) O
artifacts O
that O
indicate O
most O
of O
the O
C++ O
class O
names O
were O
prefixed O
with O
the O
string O
'' O
PCC O
'' O
in O
the O
original O
source O
code O
. O

Variants O
of O
this O
Trojan O
are O
sometimes O
detected O
under O
the O
name O
'Derusbi O
' O
by O
Microsoft O
, O
Trend O
, O
Sophos O
and O
Symantec O
AV O
engines O
. O

This B-Entity
sample I-Entity
is O
a B-Entity
DLL I-Entity
which O
can O
be B-Action
registered I-Action
as B-Modifier
a B-Entity
service I-Entity
and O
is O
used O
to O
drop B-Action
a B-Entity
kernel I-Entity
driver I-Entity
and O
provide B-Action
an B-Entity
interactive I-Entity
command I-Entity
line I-Entity
shell I-Entity
to B-Modifier
the B-Entity
C2 I-Entity
. O

It B-Entity
also O
is O
able O
to O
bypass B-Action
User B-Entity
Account I-Entity
Control I-Entity
( I-Entity
UAC I-Entity
) I-Entity
to B-Modifier
install B-Entity
itself I-Entity
by I-Entity
using I-Entity
the I-Entity
'sysprep.exe I-Entity
' I-Entity
Microsoft I-Entity
Windows I-Entity
executable I-Entity
provided I-Entity
by I-Entity
the I-Entity
targeted I-Entity
system I-Entity
. O

The O
steps O
it O
takes O
to O
install O
itself O
onto O
a O
system O
are O
as O
follows O
: O
2 O
. O

After O
it B-Entity
copies B-Action
itself B-Entity
, O
it B-Entity
will O
modify B-Action
the B-Entity
creation I-Entity
time I-Entity
, I-Entity
last I-Entity
access I-Entity
time I-Entity
and I-Entity
last I-Entity
modification I-Entity
time I-Entity
to B-Modifier
the B-Entity
current I-Entity
system I-Entity
time I-Entity
when I-Entity
the I-Entity
copy I-Entity
was I-Entity
made I-Entity
but I-Entity
with I-Entity
the I-Entity
year I-Entity
changed I-Entity
to I-Entity
2005 I-Entity
. O

3 O
. O

Adds B-Action
itself B-Entity
as B-Modifier
a B-Entity
service I-Entity
name I-Entity
from B-Modifier
the B-Entity
backdoor I-Entity
's I-Entity
configuration I-Entity
under B-Modifier
HKEYLOCAL B-Entity
MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ I-Entity
< I-Entity
service I-Entity
> I-Entity
'' I-Entity
This O
defaults O
to O
'' O
wuauserv O
'' O
, O
the O
legitimate O
Windows O
Update O
service O
, O
in O
the O
given O
binary O
's O
default O
configuration O
. O

4 O
. O

Adds B-Action
itself B-Entity
to B-Modifier
list B-Entity
of I-Entity
services I-Entity
started I-Entity
by I-Entity
'netsvc I-Entity
' I-Entity
using B-Modifier
the B-Entity
service I-Entity
name I-Entity
'helpsvc I-Entity
' I-Entity
. O

5 O
. O

If O
McAfee O
AV O
is O
installed O
, O
creates B-Action
a B-Entity
copy I-Entity
of I-Entity
regsvr32.exe I-Entity
named I-Entity
Update.exe I-Entity
and O
then O
schedules B-Action
the B-Entity
copy I-Entity
to B-Modifier
be B-Entity
deleted I-Entity
on I-Entity
reboot I-Entity
using B-Modifier
the B-Entity
well I-Entity
documented I-Entity
MoveFileExA I-Entity
API I-Entity
. O

6 O
. O

It O
then O
calls O
either O
the O
original O
or O
copy O
of O
regsvr32.exe O
with O
the O
parameters O
/s O
/u O
and O
the O
path O
to O
the O
copy O
of O
itself O
it O
made O
in O
Step O
1 O
. O

The O
/u O
parameter O
means O
'' O
uninstall O
'' O
, O
which O
calls O
DllUnregisterServer O
, O
this O
is O
an O
unsophisticated O
method O
of O
DLL O
entry O
point O
obfuscation O
. O

7 O
. O

DllUnregisterServer O
installs O
the O
driver O
and O
initiates O
the O
backdoor O
component O
. O

The B-Entity
sample I-Entity
is O
capable O
of O
'dropping B-Action
' I-Action
an B-Entity
embedded/encrypted I-Entity
kernel I-Entity
driver I-Entity
. O

If O
the O
process O
'' O
ZhuDongFangYu O
. O

exe O
'' O
is O
running O
( O
AntiVirus360 O
program O
from O
the O
Chinese O
'Quihoo O
360 O
Technology O
Co. O
, O
LTD O
' O
360 O
) O
, O
or O
the O
username O
of O
the O
DLL O
's O
host O
process O
context O
is O
not O
'SYSTEM O
' O
, O
the O
driver O
is O
not O
written O
to O
disk O
. O

Barring O
the O
two O
aforementioned O
conditions O
, O
the O
sample O
decrypts O
the O
kernel O
driver O
to O
: O
Following O
the O
decryption O
and O
writing B-Action
of O
the B-Entity
driver I-Entity
to B-Modifier
disk B-Entity
, O
it B-Entity
is B-Action
loaded I-Action
using B-Modifier
the B-Entity
ZwLoadDriver I-Entity
( I-Entity
) I-Entity
API I-Entity
. O

The B-Entity
driv- I-Entity
er I-Entity
is B-Action
encrypted I-Action
with B-Modifier
a B-Entity
simple I-Entity
four I-Entity
byte I-Entity
XOR I-Entity
key I-Entity
value I-Entity
of I-Entity
0x2E885Df3 I-Entity
; O
after O
decryption O
the O
file O
has O
the O
MD5 O
hash O
of O
dae6b9b3b8e39b08b10a51a6457444d8 O
. O

The O
malware O
contains O
a O
dynamic O
configuration O
stored O
in O
the O
Registry O
under O
and O
loads O
a O
default O
configuration O
embedded O
into O
the O
binary O
if O
such O
a O
configuration O
is O
not O
found O
. O

The O
way O
this O
default O
configuration O
is O
loaded O
and O
parsed O
indicates O
that O
this O
malware O
has O
been O
built O
with O
a O
'builder O
' O
that O
takes O
a O
template O
sample O
and O
lets O
an O
unsophisticated O
user O
specify O
a O
configuration O
without O
recompiling O
any O
code O
. O

If O
the O
current O
service O
name O
matches O
a O
set O
of O
pre-defined O
service O
names O
that O
legitimately O
exist O
in O
Windows O
, O
the B-Entity
backdoor I-Entity
then O
loads B-Action
the B-Entity
original I-Entity
service I-Entity
's I-Entity
DLL I-Entity
into B-Modifier
the B-Entity
address I-Entity
space I-Entity
with B-Modifier
LoadLibrary B-Entity
and O
invokes O
the O
ServiceMain O
export O
. O

This O
effectively O
hijacks O
the O
original O
service O
's O
entry O
while O
retaining O
its O
functionality O
. O

While O
there O
is O
code O
in O
the O
binary O
that O
allows O
downloading B-Action
a B-Entity
list I-Entity
of I-Entity
C2 I-Entity
servers I-Entity
from B-Modifier
an B-Entity
HTTP I-Entity
URL I-Entity
, O
the B-Entity
default I-Entity
configuration I-Entity
present I-Entity
specifies B-Action
202.86.190.3:80 B-Entity
as B-Modifier
a B-Entity
C2 I-Entity
to B-Modifier
use B-Entity
, O
this O
is O
the O
same O
Hong O
Kong O
C2 O
server O
as O
the O
one O
used O
by O
the O
post O
exploitation O
.NET O

tool O
. O

The B-Entity
malware I-Entity
has B-Action
three B-Entity
distinct I-Entity
C2 I-Entity
protocols I-Entity
two O
of O
which O
can O
be O
transmitted O
over O
HTTP O
proxies O
and O
one O
can O
be O
bundled O
in O
two O
different O
'dual O
' O
modes O
( O
see O
3 O
. O

) O
, O
totaling O
7 O
distinct O
supported O
C2 O
mechanisms O
. O

The B-Entity
con- I-Entity
figuration I-Entity
contains B-Action
the B-Entity
C2 I-Entity
protocol I-Entity
to I-Entity
be I-Entity
used I-Entity
or O
optionally O
a O
self-configuration O
mode O
in O
which O
the B-Entity
malware I-Entity
attempts B-Action
the B-Entity
different I-Entity
C2 I-Entity
protocols I-Entity
in B-Modifier
a B-Entity
pre-defined I-Entity
order I-Entity
. O

In O
self-configuration O
, O
a O
connection O
via O
a O
proxy O
is O
attempted O
if O
the O
system O
wide O
Internet O
Explorer O
settings O
specify O
such O
a O
proxy O
. O

The O
configuration O
found O
in O
this O
sample O
is O
set O
to O
automatic O
self-configuration O
, O
resulting O
in O
the O
following O
mechanisms O
being O
tried O
in O
this O
order O
: O
1 O
. O

Proprietary O
binary O
header O
( O
optionally O
over O
an O
HTTP O
Proxy O
using O
CONNECT O
mechanism O
) O
; O
this O
protocol O
consists O
of O
64 B-Entity
random I-Entity
bytes I-Entity
being B-Action
sent I-Action
to B-Modifier
the B-Entity
C2 I-Entity
. O

The O
C2 O
then O
responds O
with O
64 O
bytes O
where O
the O
first O
four O
bytes O
must O
match O
the O
first O
four O
sent O
bytes O
to O
establish O
a O
connection O
successfully O
. O

The O
remaining O
bytes O
are O
discarded O
. O

Interestingly O
, O
the O
malware O
stores O
the O
first O
four O
bytes O
rotated O
right O
by O
seven O
bits O
and O
compares O
that O
value O
to O
the O
seven O
bits O
rotated O
right O
version O
of O
the O
server O
's O
response O
, O
effectively O
neutralizing O
the O
rotation O
's O
effect O
; O
the O
purpose O
of O
this O
is O
unclear O
. O

2 O
. O

A O
long-running O
HTTP O
POST O
request O
to O
the O
path O
'' O
/forum/login.cgi O
'' O
with O
a O
statically O
defined O
HTTP O
request O
string O
including O
HTTP O
headers O
( O
optionally O
over O
a O
HTTP O
Proxy O
using O
CONNECT O
) O
. O

The O
malware O
requires O
the O
response O
to O
start O
with O
'' O
HTTP/1.0 O
200 O
'' O
or O
'' O
HTTP/1.1 O
200 O
'' O
and O
an O
absence O
of O
a O
'' O
Connection O
: O
close O
'' O
header O
. O

This O
one O
HTTP O
connection O
will O
be O
used O
for O
bi-directional O
communications O
, O
sending B-Action
chunks B-Entity
of I-Entity
POST I-Entity
payload I-Entity
and O
receiving B-Action
chunks B-Entity
of I-Entity
the I-Entity
response I-Entity
, O
interleaved O
. O

3 O
. O

Two O
long-running O
HTTP O
requests O
to O
the O
same O
C2 O
( O
optionally O
over O
an O
HTTP O
Proxy O
with O
original O
request O
verb O
) O
, O
one O
GET O
request O
to O
'' O
/Photos/Query.cgi O
? O
loginid= O
'' O
followed O
by O
a O
random O
number O
and O
one O
POST O
request O
to O
'' O
/Catelog/login1.cgi O
'' O
. O

The B-Entity
GET I-Entity
request I-Entity
serves B-Action
as B-Modifier
a B-Entity
down-stream I-Entity
channel I-Entity
while O
the B-Entity
POST I-Entity
request I-Entity
serves B-Action
as B-Modifier
a B-Entity
upstream I-Entity
channel I-Entity
. O

This O
demonstrates O
an O
attempt O
to O
use O
the O
most O
efficient O
communication O
channel O
first O
, O
falling O
back O
to O
more O
legitimate O
appearing O
channels O
as O
required O
in O
order O
to O
appear O
Request O
For O
Comment O
( O
RFC O
) O
compliant O
with O
the O
HTTP O
protocol O
. O

Additionally O
, O
the B-Entity
malware I-Entity
contains B-Action
a B-Entity
custom I-Entity
DNS I-Entity
client I-Entity
implementation I-Entity
that O
will O
use B-Action
the B-Entity
system I-Entity
's I-Entity
configured I-Entity
DNS I-Entity
server I-Entity
to O
tunnel B-Action
C2 B-Entity
traffic I-Entity
over B-Modifier
legitimate B-Entity
DNS I-Entity
. O

Since O
this O
C2 O
mechanism O
is O
not O
attempted O
in O
self-configuration O
and O
was O
not O
configured O
for O
this O
binary O
, O
analysis O
was O
left O
out O
due O
to O
time O
constraints O
. O

After O
establishing O
any O
of O
the O
aforementioned O
channels O
for O
arbitrary O
binary O
data O
exchange O
, O
the B-Entity
malware I-Entity
will O
start O
sending B-Action
and O
receiving B-Action
compressed B-Entity
binary I-Entity
blobs I-Entity
via B-Modifier
the B-Entity
channel I-Entity
of I-Entity
choice I-Entity
. O

The O
C2 O
's O
binary O
data O
blobs O
are O
compressed O
. O

No O
further O
encryption O
of O
the O
data O
takes O
place O
. O

All O
C2 O
transport O
implementations O
contain O
code O
for O
accepting O
and O
handling O
server-side O
connections O
of O
the O
respective O
protocols O
. O

However O
, O
this O
code O
does O
not O
appear O
to O
be O
invoked O
. O

It O
appears O
that O
the O
author O
of O
this O
code O
shares O
the O
library O
that O
implements O
these O
transports O
for O
the O
client O
with O
the O
C2 O
server O
. O

The B-Entity
main I-Entity
backdoor I-Entity
thread I-Entity
then O
reads B-Action
commands B-Entity
from B-Modifier
the B-Entity
chosen I-Entity
C2 I-Entity
protocol I-Entity
and O
passes O
them O
on O
to O
any O
of O
the O
following O
registered O
handler O
classes O
based O
upon O
a O
command O
ID O
. O

The O
handler O
class O
is O
responsible O
for O
parsing O
the O
remainder O
of O
the O
command O
. O

This B-Entity
handler I-Entity
class I-Entity
for I-Entity
command I-Entity
ID I-Entity
8 I-Entity
implements B-Action
generic B-Entity
directory I-Entity
and I-Entity
file I-Entity
browsing I-Entity
using B-Modifier
FindFirstFileW B-Entity
( I-Entity
) I-Entity
and I-Entity
FindNextFileW I-Entity
( I-Entity
) I-Entity
APIs I-Entity
, O
as O
well O
as O
reading B-Action
and O
writing B-Action
arbitrary B-Entity
files I-Entity
via B-Modifier
C2 B-Entity
commands I-Entity
, O
thus O
enabling O
upload B-Action
and O
download B-Action
of O
arbitrary B-Entity
files I-Entity
. O

This O
is O
typically O
seen O
in O
RATs B-Entity
for O
searching B-Action
specific B-Entity
files I-Entity
to O
exfiltrate B-Action
. O

Additionally O
, O
this B-Entity
class I-Entity
implements O
launching B-Action
of O
specified B-Entity
executable I-Entity
files I-Entity
via B-Modifier
the B-Entity
CreateProcess I-Entity
( I-Entity
) I-Entity
API I-Entity
. O

This B-Entity
handler I-Entity
class I-Entity
implements B-Action
a B-Entity
generic I-Entity
TCP I-Entity
proxy I-Entity
. O

It B-Entity
supports O
establishing B-Action
TCP B-Entity
connections I-Entity
to B-Modifier
other B-Entity
hosts I-Entity
and O
also O
listening B-Action
for B-Modifier
incoming B-Entity
connections I-Entity
. O

The B-Entity
incoming I-Entity
connection I-Entity
contents I-Entity
are B-Action
forwarded I-Action
to B-Modifier
the B-Entity
C2 I-Entity
and O
data B-Entity
from I-Entity
the I-Entity
C2 I-Entity
is B-Action
passed I-Action
on B-Modifier
to I-Modifier
connections B-Entity
. O

It O
supports O
up O
to O
1024 O
parallel O
connections O
. O

The B-Entity
malware I-Entity
is O
capable O
of O
gathering B-Action
various B-Entity
pieces I-Entity
of I-Entity
information I-Entity
from B-Modifier
the B-Entity
system I-Entity
, O
triggered O
by O
a O
command O
ID O
10 O
. O

The O
capabilities O
include O
recovering B-Action
authentication B-Entity
credentials I-Entity
from B-Modifier
various B-Entity
system I-Entity
and I-Entity
client I-Entity
storage I-Entity
such I-Entity
as I-Entity
Mozilla I-Entity
Firefox I-Entity
, I-Entity
Internet I-Entity
Explorer I-Entity
, I-Entity
and I-Entity
Remote I-Entity
Access I-Entity
Service I-Entity
( I-Entity
RAS I-Entity
) I-Entity
. O

This B-Entity
class I-Entity
also O
supports O
gathering B-Action
intelligence B-Entity
on I-Entity
the I-Entity
infected I-Entity
system I-Entity
including O
identifying B-Action
security B-Entity
tools I-Entity
by B-Modifier
their B-Entity
process I-Entity
name I-Entity
, O
proxy B-Entity
accounts I-Entity
, O
and O
version B-Entity
numbers I-Entity
for I-Entity
the I-Entity
Operating I-Entity
System I-Entity
( I-Entity
OS I-Entity
) I-Entity
and O
Internet B-Entity
Explorer I-Entity
. O

This B-Entity
handler I-Entity
class I-Entity
provides O
the O
attacker O
with O
the O
ability O
to O
manage B-Action
system B-Entity
components I-Entity
including O
start B-Action
/ O
stop B-Action
/ O
delete B-Action
system B-Entity
services I-Entity
, O
enumerate B-Action
/ O
alter B-Action
registry B-Entity
keys I-Entity
, O
and O
manage B-Action
running B-Entity
processes I-Entity
. O

This B-Entity
class I-Entity
also O
provides O
the O
ability O
for O
the O
attacker O
to O
take B-Action
a B-Entity
screen I-Entity
shot I-Entity
of I-Entity
the I-Entity
users I-Entity
desktop I-Entity
. O

This B-Entity
handler I-Entity
class I-Entity
uses O
the O
command O
ID O
5 O
and O
implements B-Action
an B-Entity
interactive I-Entity
command I-Entity
line I-Entity
shell I-Entity
accessible I-Entity
from I-Entity
the I-Entity
C2 I-Entity
server I-Entity
, O
containing O
a O
series O
of O
built-in O
commands O
. O

If O
the O
input O
is O
not O
in O
this O
list O
of O
built-in O
commands O
, O
the B-Entity
malware I-Entity
attempts O
to O
invoke B-Action
cmd.exe B-Entity
in B-Modifier
the B-Entity
background I-Entity
, O
launching B-Action
a B-Entity
command I-Entity
or I-Entity
command I-Entity
line I-Entity
utility I-Entity
already I-Entity
present I-Entity
on I-Entity
the I-Entity
system I-Entity
. O

The B-Entity
standard I-Entity
output I-Entity
channel I-Entity
of I-Entity
that I-Entity
command I-Entity
is B-Action
provided I-Action
back B-Modifier
to I-Modifier
the B-Entity
C2 I-Entity
. O

The O
supported O
built-in O
commands O
are O
: O
The O
only O
command O
that O
is O
implemented O
directly O
in O
the O
main O
backdoor O
thread O
as O
a O
subprocedure O
call O
and O
not O
via O
a O
generic O
command O
handler O
class O
is O
command O
ID O
256 O
. O

This O
command O
results O
in O
the B-Entity
DLL I-Entity
deleting B-Action
itself B-Entity
and O
terminating B-Action
the B-Entity
backdoor I-Entity
process I-Entity
. O

This O
sample O
is O
a O
packed O
32-bit O
kernel O
driver O
extracted O
by O
the O
aforementioned O
DLL O
with O
an O
MD5 O
hash O
of O
: O
de7500fc1065a081180841f32f06a537 O
, O
this O
sample O
will O
only O
function O
on O
a O
Windows O
32-bit O
kernel O
. O

This O
code O
appears O
to O
have O
been O
compiled O
on O
Sunday O
October O
9 O
, O
2011 O
at O
4:50:31 O
P.M. O
UTC O
( O
very O
early O
morning O
time O
of O
Monday O
, O
October O
10 O
in O
China O
) O
. O

This O
section O
describes O
how O
the O
driver O
performs O
its O
initialization O
routine O
. O

The B-Entity
driver I-Entity
begins O
by O
opening B-Action
a B-Entity
named I-Entity
event I-Entity
in B-Modifier
the B-Entity
BaseNamedObjects I-Entity
object I-Entity
directory I-Entity
with B-Modifier
the B-Entity
name I-Entity
{ I-Entity
8CB2ff21-0166-4cf1-BD8F-E190BC7902DC I-Entity
} I-Entity
using B-Modifier
the B-Entity
Windows I-Entity
API I-Entity
ZwOpenEvent I-Entity
( I-Entity
) I-Entity
. O

If O
the O
event O
already O
exists O
, O
the B-Entity
driver I-Entity
fails O
to O
load O
, O
presumably O
to O
avoid B-Action
a O
multiple B-Entity
instances I-Entity
of I-Entity
itself I-Entity
. O

If O
the O
event O
does O
not O
exist O
, O
the B-Entity
driver I-Entity
then O
creates B-Action
it B-Entity
using B-Modifier
the B-Entity
Windows I-Entity
API I-Entity
ZwCreateEvent I-Entity
( I-Entity
) I-Entity
. O

The O
Windows O
API O
for O
creating O
events O
( O
ZwCreateEvent O
( O
) O
, O
or O
CreateEvent O
( O
) O
in O
user O
mode O
) O
already O
provides O
the O
ability O
to O
'' O
create-or-open O
'' O
an O
event O
, O
so O
the O
use O
of O
an O
initial O
ZwOpenEvent O
is O
superfluous O
and O
indicative O
of O
relatively O
limited O
Windows O
API O
knowledge O
of O
the O
author O
of O
that O
part O
of O
the O
code O
. O

It O
is O
interesting O
to O
note O
that O
some O
of O
the O
hex O
digits O
in O
the O
object O
name O
are O
mixed O
case O
which O
is O
potentially O
indicative O
of O
the O
code O
being O
re-appropriated O
from O
another O
source O
. O

The B-Entity
second I-Entity
component I-Entity
of I-Entity
the I-Entity
entry I-Entity
point I-Entity
performs B-Action
an B-Entity
anti-debugging I-Entity
technique I-Entity
, O
calling B-Action
the B-Entity
function I-Entity
KdDisableDebugger I-Entity
( I-Entity
) I-Entity
, O
which O
allows O
the B-Entity
driver I-Entity
to O
disable B-Action
usage B-Entity
of I-Entity
the I-Entity
built-in I-Entity
Windows I-Entity
kernel I-Entity
debugging I-Entity
facility I-Entity
that I-Entity
is I-Entity
used I-Entity
by I-Entity
popular I-Entity
kernel I-Entity
debuggers I-Entity
KD I-Entity
and I-Entity
WinDbg I-Entity
. O

Tools O
such O
as O
Syser O
Debugger O
, O
or O
debugging O
through O
a O
virtual O
machine O
are O
unaffected O
by O
this O
technique O
. O

The O
sample O
, O
rather O
than O
importing O
the O
KdDisableDebugger O
( O
) O
API O
using O
conventional O
methods O
, O
looks O
up O
the O
API O
through O
MmGetSystemRoutineAddress O
( O
) O
instead O
. O

All O
of O
the O
other O
APIs O
used O
by O
the O
driver O
are O
imported O
normally O
, O
so O
this O
is O
not O
a O
technique O
to O
hide O
import O
APIs O
used O
throughout O
the O
driver O
. O

Searching O
Google O
for O
'' O
MmGetSystemRoutineAddress O
'' O
and O
'' O
KdDisableDebugger O
'' O
results O
in O
dozens O
of O
Chinese O
language O
blogs O
which O
explain O
how O
to O
use O
this O
technique O
to O
'' O
Disable O
WinDbg O
'' O
. O

The B-Entity
final I-Entity
step I-Entity
of I-Entity
the I-Entity
entry I-Entity
point I-Entity
is O
to O
begin O
hooking B-Action
the B-Entity
system I-Entity
, O
which O
is O
done O
by O
two O
helper O
functions O
- O
one B-Entity
is O
designed O
to O
hook B-Action
the B-Entity
system I-Entity
call I-Entity
table I-Entity
, O
while O
the B-Entity
other I-Entity
hooks B-Action
the B-Entity
network I-Entity
stack I-Entity
. O

The B-Entity
network I-Entity
stack I-Entity
hooking I-Entity
first O
queries B-Action
the B-Entity
OS I-Entity
version I-Entity
using B-Modifier
RtlGetVersion B-Entity
( I-Entity
) I-Entity
or I-Entity
PsGetVersion I-Entity
( I-Entity
) I-Entity
. O

Checking O
the O
version O
is O
necessary O
because O
Windows O
versions O
beginning O
with O
Vista O
utilize O
a O
redesigned O
TCP/IP O
net- O
work O
stack O
, O
most O
hooking O
operations O
will O
require O
a O
different O
implementation O
for O
these O
versions O
. O

On O
versions O
prior O
to O
Windows O
Vista O
, O
the O
TCP/IP O
driver O
creates O
a O
\Device\Tcp O
device O
object O
through O
which O
most O
network O
requests O
are O
piped O
through O
. O

On O
Vista O
and O
later O
, O
TCP/IP O
has O
been O
split O
up O
into O
multiple O
components O
, O
and O
IP O
connection O
enumeration O
, O
which O
this O
driver O
is O
targeting O
, O
is O
managed O
by O
\Device\nsiproxy O
instead O
. O

In O
either O
case O
, O
the B-Entity
driver I-Entity
obtains O
the O
device O
object O
by O
using O
IoGetDeviceObjectPointer O
( O
) O
and O
hooks B-Action
Major B-Entity
Function I-Entity
14 I-Entity
the I-Entity
IRPMJDEVICECONTROL I-Entity
, O
as O
this O
is O
the O
function O
through O
which O
all O
Input O
Output O
ConTroLls O
( O
IOCTLs O
) O
are O
sent O
, O
such O
as O
the O
IOCTL O
for O
querying O
active O
IP O
connections O
. O

The O
NSI O
hook O
, O
targets O
IOCTL O
0x12001B O
, O
which O
is O
used O
by O
NsiGetObjectAllParameters O
( O
) O
in O
nsi.dll O
when O
users O
typically O
run O
commands O
such O
as O
netstat.exe O
or O
use O
any O
of O
the O
IP O
Helper O
APIs O
in O
iphlpapi.dll O
. O

The O
purpose O
of O
the B-Entity
hook I-Entity
is O
to O
scan B-Action
the B-Entity
list I-Entity
of I-Entity
active I-Entity
connections I-Entity
returned I-Entity
to I-Entity
the I-Entity
user I-Entity
, O
and O
hide B-Action
any B-Entity
such I-Entity
connection I-Entity
currently I-Entity
bound I-Entity
to I-Entity
a I-Entity
local I-Entity
TCP I-Entity
port I-Entity
in I-Entity
the I-Entity
range I-Entity
between I-Entity
40000 I-Entity
and I-Entity
45000 I-Entity
. O

The B-Entity
hooking I-Entity
is B-Action
performed I-Action
by B-Modifier
creating B-Entity
a I-Entity
new I-Entity
completion I-Entity
routine I-Entity
associated I-Entity
with I-Entity
any I-Entity
IRPMJDEVICECONTROL I-Entity
IRP I-Entity
that I-Entity
matches I-Entity
the I-Entity
IOCTL I-Entity
, I-Entity
attaching I-Entity
to I-Entity
the I-Entity
target I-Entity
process I-Entity
, I-Entity
performing I-Entity
several I-Entity
memory I-Entity
copies I-Entity
to I-Entity
hide I-Entity
the I-Entity
entry I-Entity
, I-Entity
and I-Entity
detaching I-Entity
. O

This O
functionality O
is O
nearly O
identical O
to O
the O
code O
posted O
by O
Edward O
Sun O
( O
aka O
cardmagic O
, O
sunmy1 O
@ O
sina.com O
, O
onlyonejazz O
@ O
hotmail.com O
, O
cardcian O
@ O
mail.ustc.edu.cn O
, O
QQ O
# O
28025945 O
) O
from O
Hefei O
, O
Anhui O
province O
( O
Nanjing O
Military O
District O
) O
on O
July O
8 O
, O
2007 O
, O
then O
a O
China-based O
researcher O
at O
Trend O
Micro O
( O
now O
working O
at O
Kingsoft O
Chinese O
AV O
Company O
; O
LinkedIn O
profile O
page O
: O
http O
: O
//www.linkedin.com/profile/view O
? O
id=84082731 O
) O
at O
http O
: O
//forum.eviloctal.com/viewthread.php O
? O
action=printable O
& O
tid=29604 O
( O
See O
Appendix O
G O
) O
. O

CrowdStrike O
has O
no O
information O
connecting O
Mr. O
Sun O
to O
this O
intrusion O
activity O
, O
his O
code O
appears O
to O
have O
been O
appropriated O
by O
the O
actor O
to O
add O
similar O
functionality O
to O
their O
code O
. O

The B-Entity
TCP I-Entity
hook I-Entity
works O
almost O
identically O
to O
the O
NSI O
hook O
, O
though O
instead O
hooking B-Action
IOCTL B-Entity
0x120003 I-Entity
( I-Entity
IOCTL I-Entity
TCPQUERYINFORMATIONEX I-Entity
) I-Entity
. O

This O
IOCTL O
has O
the O
exact O
same O
functionality O
as O
the O
NSI O
specific O
IOCTL O
. O

This O
IOCTL O
was O
the O
mechanism O
used O
on O
Windows O
versions O
prior O
to O
Windows O
Vista O
. O

This B-Entity
hook I-Entity
also O
filters B-Action
any B-Entity
connections I-Entity
listening I-Entity
on I-Entity
TCP I-Entity
ports I-Entity
in I-Entity
the I-Entity
range I-Entity
between I-Entity
40000 I-Entity
and I-Entity
45000 I-Entity
. O

The O
system O
call O
hooking O
targets O
three O
functions O
: O
ZwSaveKey O
( O
) O
, O
ZwQueryValueKey O
( O
) O
, O
and O
ZwEnumerateValueKey O
( O
) O
. O

The B-Entity
unpacked I-Entity
kernel I-Entity
driver I-Entity
sample I-Entity
hooks B-Action
these B-Entity
functions I-Entity
by B-Modifier
reading B-Entity
the I-Entity
second I-Entity
DWORD I-Entity
at I-Entity
each I-Entity
of I-Entity
these I-Entity
exported I-Entity
functions I-Entity
. O

Because O
the O
system O
call O
stub O
uses O
the O
EAX O
register O
as O
an O
index O
for O
the O
system O
call O
ID O
, O
and O
a O
'' O
mov O
eax O
, O
imm32 O
'' O
instruction O
'' O
instruction O
is O
used O
, O
this O
second O
DWORD O
will O
match O
the O
system O
call O
ID O
. O

It O
then O
adds O
this O
index O
to O
the O
value O
of O
KeServiceDescriptorTable.Base O
, O
which O
is O
the O
exported O
kernel O
variable O
( O
on O
32-bit O
Windows O
only O
) O
which O
directly O
points O
to O
the O
system O
call O
table O
. O

This O
is O
one O
of O
the O
simplest O
ways O
to O
do O
a O
system O
call O
hook O
, O
but O
will O
not O
work O
on O
64-bit O
Windows O
as O
this O
variable O
is O
not O
exported O
in O
addition O
to O
the O
protection O
provided O
by O
Microsoft O
PatchGuard O
. O

The B-Entity
system I-Entity
call I-Entity
hook I-Entity
is B-Action
then I-Action
performed I-Action
by B-Modifier
first B-Entity
allocating I-Entity
a I-Entity
Memory I-Entity
Descriptor I-Entity
List I-Entity
( I-Entity
MDL I-Entity
) I-Entity
using I-Entity
the I-Entity
Windows I-Entity
API I-Entity
IoAllocateMdl I-Entity
( I-Entity
) I-Entity
, I-Entity
and I-Entity
associating I-Entity
the I-Entity
MDL I-Entity
to I-Entity
a I-Entity
non-paged I-Entity
buffer I-Entity
using I-Entity
MmBuildMdlForNonPagedPool I-Entity
( I-Entity
) I-Entity
. O

Once O
the O
MDL O
is O
associated O
to O
the O
non-paged O
buffer O
, O
the O
sample O
locks O
the O
underlying O
pages O
using O
the O
Windows O
API O
MmProbeAndLockPages O
( O
) O
. O

Instead O
of O
hooking O
the O
entry O
in O
the O
table O
directly O
, O
which O
is O
easily O
detectable O
, O
the B-Entity
driver I-Entity
uses O
the O
LDASM O
open-source O
disassembly O
engine O
to O
analyze O
the O
function O
that O
is O
being O
pointed O
to O
by O
the O
table O
, O
and O
applying B-Action
a B-Entity
Detours-style I-Entity
hook I-Entity
directly B-Modifier
in I-Modifier
the B-Entity
code I-Entity
. O

It O
uses O
the O
standard O
'' O
mov O
cr0 O
, O
eax O
'' O
technique O
, O
turning O
off O
the O
Write O
Protect O
( O
WP O
) O
bit O
as O
it O
does O
this O
. O

When O
the O
hook O
is O
installed O
, O
it O
writes O
a O
special O
DWORD O
value O
, O
'KDTR O
' O
, O
which O
allows O
it O
to O
prevent O
double-hooking O
or O
badly-hooking O
the O
system O
call O
, O
during O
unhooking O
, O
this O
value O
is O
also O
checked O
. O

In O
the O
ZwSaveKey O
( O
) O
hook O
, O
access O
to O
\\REGISTRY\\MACHINE\\SYSTEM O
is O
blocked O
. O

RegSaveKey O
( O
) O
which O
is O
the O
user-mode O
implementation O
of O
the O
kernel O
ZwSaveKey O
( O
) O
API O
, O
is O
typically O
used O
when O
performing O
an O
offline O
backup O
of O
a O
particular O
registry O
key O
. O

hook O
is O
the O
ZwQueryValueValue O
( O
) O
hook O
, O
which O
looks O
for O
'' O
Parameters O
'' O
key O
of O
a O
service O
within O
the O
registry O
at O
\\REGISTRY\\MACHINE\\SYSTEM\\ControlSet001\\Services\\ O
. O

It B-Entity
then O
checks B-Action
for B-Modifier
the B-Entity
values I-Entity
of I-Entity
the I-Entity
'' I-Entity
ServiceDll I-Entity
'' I-Entity
and I-Entity
'' I-Entity
Security I-Entity
'' I-Entity
keys I-Entity
, O
in O
the O
latter O
case O
it B-Entity
applies B-Action
an B-Entity
XOR I-Entity
on B-Modifier
the B-Entity
data I-Entity
with B-Modifier
the B-Entity
value I-Entity
127 I-Entity
. O

The O
user-mode O
component O
of O
this O
malware O
is O
a O
service O
called O
'' O
msupdate O
'' O
, O
this B-Entity
driver I-Entity
is O
attempting O
to O
hide B-Action
the B-Entity
service I-Entity
. O

The O
user-mode O
service O
stores O
configuration O
data O
in O
the O
'' O
Security O
'' O
subkey O
of O
the O
RPC O
registry O
key O
, O
this O
component O
will O
obfuscate O
the O
user-mode O
configuration O
data O
. O

The O
driver O
does O
not O
make O
any O
efforts O
to O
hide O
its O
own O
key O
, O
nor O
does O
it O
specifically O
check O
for O
'' O
RPC O
'' O
before O
'' O
Security O
'' O
, O
which O
can O
lead O
to O
random O
data O
being O
obfuscated O
. O

The O
final O
hook O
, O
ZwEnumerateValueKey O
( O
) O
, O
is O
similar O
in O
structure O
to O
the O
ZwQueryValueHook O
key O
, O
due O
to O
the O
fact O
that O
these O
APIs O
provide O
almost O
identical O
functionality O
when O
it O
comes O
to O
reading O
registry O
values O
. O

In B-Modifier
the B-Entity
registry I-Entity
hooking I-Entity
code I-Entity
of I-Entity
the I-Entity
driver I-Entity
, O
a B-Entity
call I-Entity
is B-Action
made I-Action
to B-Modifier
ObReferenceObjectByHandle B-Entity
( I-Entity
) I-Entity
. O

This O
allows O
the O
driver O
to O
receive O
the O
'CMKEYOBJECT O
' O
which O
is O
then O
used O
with O
ObQueryNameString O
( O
) O
to O
get O
the O
key/value O
path O
. O

However O
, O
no O
call O
to O
ObDereferenceObject O
( O
) O
is O
ever O
made O
, O
which O
means O
that O
all O
registry O
objects O
being O
sent O
to O
these O
APIs O
are O
eventually O
leaked O
. O

In O
the O
registry O
hook O
, O
it O
was O
noticed O
that O
'' O
CurrentControlSet001 O
'' O
was O
used O
as O
the O
target O
, O
if O
the O
target O
machine O
was O
using O
a O
'' O
last O
known O
good O
'' O
configuration O
, O
or O
a O
roaming O
hardware O
profile O
, O
the O
registry O
hook O
would O
not O
function O
as O
intended O
. O

This O
is O
the O
reason O
the O
Microsoft O
implemented O
a O
symbolic O
link O
to O
\\CurrentControlSet O
which O
ensures O
that O
regardless O
of O
the O
machines O
configuration O
any O
request O
will O
access O
the O
correct O
registry O
key O
. O

This O
threat O
actor O
leaves O
several O
key O
fingerprints O
which O
can O
be O
used O
to O
identify O
compromised O
systems O
. O

These O
digital O
fingerprints O
are O
unique O
to O
this O
adversary O
for O
this O
campaign O
. O

The O
following O
network O
signatures O
are O
designed O
for O
the O
popular O
Open O
Source O
IDS O
called O
Snort O
. O

These O
signature O
can O
be O
ported O
to O
other O
formats O
upon O
request O
. O

The O
following O
file O
system O
artifacts O
are O
indicative O
of O
a O
compromised O
host O
: O
The O
following O
Windows O
Registry O
artifacts O
are O
indicative O
of O
a O
compromised O
host O
: O
The O
backdoor O
may O
be O
detected O
by O
several O
different O
Anti-Virus O
products O
under O
a O
signature O
with O
the O
name O
: O
Attribution O
in O
the O
cyber O
domain O
is O
always O
a O
tricky O
subject O
when O
relying O
solely O
on O
malicious O
samples O
. O

Compiler O
artifacts O
and O
language O
settings O
can O
of O
course O
be O
deliberately O
masked O
or O
spoofed O
. O

CrowdStrike O
uses O
a O
unique O
approach O
of O
comprehensive O
threat O
analysis O
in O
order O
to O
decipher O
attributable O
components O
. O

Based O
on O
the O
corroborating O
evidence O
discovered O
in O
the O
course O
of O
this O
analysis O
, O
it O
appears O
there O
are O
numerous O
indications O
that O
this O
is O
a O
Chinese-speaking O
actor O
. O

ZhuDongFangYu.exe O
is O
a O
component O
of O
360 O
360􀆔􀆔􀆔􀆔 O
, O
a O
Chinese O
security O
product O
available O
from O
http O
: O
//www.360.cn/ O
. O

This O
is O
particularly O
relevant O
in O
this O
case O
because O
the B-Entity
backdoor I-Entity
DLL I-Entity
sample I-Entity
with I-Entity
an I-Entity
MD5 I-Entity
of I-Entity
de7500fc1065a081180841f32f06a537 I-Entity
specifically O
avoids B-Action
installing B-Entity
the I-Entity
kernel I-Entity
driver I-Entity
on I-Entity
a I-Entity
system I-Entity
running I-Entity
this I-Entity
tool I-Entity
. O

Speculatively O
this O
may O
be O
because O
this O
security O
product O
detects O
this O
rootkit O
, O
or O
the O
author O
was O
attempting O
to O
prevent O
accidental O
infection O
on O
systems O
running O
this O
Anti-Virus O
product O
. O

The O
obfuscation O
of O
the O
KdDisableDebugger O
( O
) O
function O
call O
is O
seen O
on O
several O
Chinese O
language O
forums O
, O
and O
can O
be O
seen O
being O
reused O
in O
several O
code O
samples O
on O
those O
forums O
. O

As O
previously O
mentioned O
there O
is O
no O
advantage O
associated O
with O
using O
this O
call O
obfuscation O
, O
and O
appears O
to O
be O
reused O
for O
no O
apparent O
reason O
other O
than O
the O
attackers O
have O
copied O
code O
directly O
from O
forum O
code O
. O

While O
the B-Entity
various I-Entity
network I-Entity
hooking I-Entity
techniques I-Entity
used B-Action
in B-Modifier
the B-Entity
kernel I-Entity
driver I-Entity
may O
appear O
novel O
or O
well O
researched O
, O
upon O
close O
inspection O
it O
is O
actually O
a O
line-for-line O
copy O
of O
an O
existing O
post O
from O
the O
now-offline O
'rootkit.com O
' O
by O
a O
Chinese O
language O
developer O
. O

This O
post O
is O
currently O
mirrored O
on O
dozens O
of O
Chinese O
hacking O
websites O
. O

Similarly O
the O
system O
call O
hooking O
is O
less O
impressive O
after O
searching O
for O
'' O
IoAllocateMdl O
'' O
and O
'' O
cr0 O
'' O
( O
bbs.pediy O
. O

com/showthread.php O
? O
t=77467 O
perform B-Action
system B-Entity
call I-Entity
hooking I-Entity
through B-Modifier
MDLs B-Entity
. O

The O
ldasm O
inline O
hooking O
is O
also O
repeated O
in O
numerous O
postings O
to O
Chinese O
forums O
. O

One O
particular O
website O
( O
http O
: O
//read.pudn.com/downloads197/sourcecode/windows/sys- O
tem/927802/CCRootkit/RootkitSys/HookSSDT.c.htm O
) O
had O
an O
almost O
identical O
ldasm O
loop O
that O
tried O
to O
identify O
the O
exact O
same O
code O
sequences O
. O

Open O
source O
research O
of O
the O
4 O
innocuous O
kernel O
APIs O
'' O
ZwSaveKey O
ZwQueryValueKey O
ZwEnumerateValueKey O
IoAllocateMdl O
'' O
, O
in O
concert O
leads O
directly O
to O
a O
Chinese O
website O
that O
has O
a B-Entity
cached I-Entity
rootkit I-Entity
performing B-Action
similar B-Entity
hooks I-Entity
on B-Modifier
the B-Entity
same I-Entity
3 I-Entity
registry I-Entity
related I-Entity
APIs I-Entity
. O

While O
the O
driver O
does O
not O
use O
pool O
tags O
for O
most O
of O
its O
allocations O
, O
it O
does O
utilize O
them O
in O
the O
networking O
hooking O
code O
, O
much O
like O
the O
examples O
found O
on O
the O
Chinese O
language O
forums O
. O

This O
sample O
uses O
pool O
tags O
: O
'tnet O
, O
' O
and O
'KDTR O
' O
. O

Although O
the O
meaning O
of O
the O
KDTR O
tag O
is O
not O
obvious O
, O
we O
assess O
with O
high O
confidence O
that O
this O
is O
a O
shortened O
version O
of O
: O
'' O
Kernel O
DeTouR O
'' O
, O
which O
coincides O
with O
the O
matching O
functionality O
of O
the O
detour-style O
inline O
hook O
. O

The O
driver O
code O
( O
MD5 O
: O
dae6b9b3b8e39b08b10a51a6457444d8 O
) O
appears O
to O
be O
a O
combination O
of O
various O
code O
that O
is O
easily O
searchable O
on O
the O
Internet O
, O
and O
almost O
always O
attributed O
to O
Chinese O
language O
forums O
and O
websites O
. O

The O
system O
call O
hooking O
parts O
of O
the O
code O
appear O
to O
be O
identical O
to O
the O
HookSSDT.c O
code O
authored O
by O
Steven O
Lai O
'embedlinux O
' O
and O
utilized O
in O
what O
the O
author O
titled O
'CC O
Rootkit O
' O
on O
on O
August O
4 O
, O
2008 O
who O
's O
email O
address O
is O
hqulyc O
@ O
126.com O
. O

This O
user O
has O
a O
QQ O
identity O
of O
: O
5054-3533 O
, O
QQ O
is O
a O
popular O
instant O
messaging O
chat O
client O
used O
almost O
exclusively O
in O
China O
. O

His O
real O
name O
according O
to O
his O
QQ O
profile O
( O
http O
: O
//user.qzone.qq.com/50543533 O
) O
appears O
to O
be O
Steven O
Lai O
. O

He O
was O
is O
28 O
years O
old O
( O
born O
September O
5 O
, O
1983 O
) O
and O
lives O
in O
Xiamen O
, O
Fujian O
province O
( O
Nanjing O
Military O
Region O
) O
. O

According O
to O
his O
profile O
, O
he O
has O
worked O
at O
Xiamen O
XOCECO O
New O
Technic O
Co. O
, O
Ltd. O
( O
http O
: O
//www.likego.com/en/about.asp O
) O
, O
a O
company O
that O
builds O
audio/video O
systems O
for O
transportation O
systems O
. O

Mr. O
Lai O
is O
not O
being O
identified O
as O
the O
actor O
, O
his O
code O
however O
was O
used O
by O
whomever O
built O
the O
kernel O
driver O
utilized O
by O
the O
backdoor O
and O
for O
this O
reason O
we O
are O
providing O
the O
background O
on O
this O
individual O
. O

The O
samples O
involved O
in O
this O
incident O
are O
typical O
of O
attacks O
commonly O
associated O
with O
the O
People's O
Republic O
of O
China O
( O
PRC O
) O
. O

These O
code O
samples O
have O
a O
variety O
of O
Tools O
, O
Techniques O
, O
and O
Procedures O
( O
TTPs O
) O
that O
are O
used O
to O
track O
and O
identify O
specific O
adversary O
groups O
. O

The O
sophistication O
of O
the O
actor O
responsible O
this O
incident O
is O
difficult O
to O
quantify O
without O
visibility O
into O
the O
activities O
that O
transpired O
on O
the O
victims O
network O
. O

The O
ability O
to O
conduct O
Incident O
Response O
( O
IR O
) O
including O
forensics O
, O
and O
log O
analysis O
, O
greatly O
augments O
this O
visibility O
into O
these O
aspects O
of O
the O
incident O
. O

Some O
indications O
as O
to O
the O
adversaries O
' O
capabilities O
can O
be O
derived O
from O
the O
captured O
samples O
alone O
. O

The O
dropper O
code O
( O
MD5 O
: O
14c04f88dc97aef3e9b516ef208a2bf5 O
) O
does O
not O
utilize O
any O
techniques O
that O
are O
unique O
or O
unusual O
, O
and O
is O
consistent O
with O
tools O
, O
techniques O
, O
and O
procedures O
of O
attacks O
targeting O
proprietary O
information O
and O
generally O
attributed O
to O
the O
PRC O
. O

The O
presence O
of O
dead O
code O
and O
its O
replacement O
by O
a O
more O
simple O
obfuscation O
method O
to O
hide O
the O
to-be-dropped O
dll O
binary O
file O
indicates O
code O
reuse O
on O
the O
attacker O
side O
. O

The O
'dead O
code O
' O
utilizes O
a O
more O
sophisticated O
compression O
algorithm O
provided O
by O
a O
third O
party O
which O
was O
rendered O
useless O
for O
some O
reason O
. O

This O
may O
have O
been O
a O
result O
of O
the O
attacker O
modifying O
an O
existing O
tool O
, O
or O
unknowingly O
using O
a O
re-purposed O
tool O
. O

The O
dropper O
resources O
indicate O
the O
compiler O
used O
to O
build O
the O
tool O
was O
running O
on O
a O
system O
that O
utilized O
the O
Chinese O
'' O
Simple O
'' O
language O
pack O
and O
was O
built O
on O
Wednesday O
May O
4th O
, O
2011 O
at O
11:04:24 O
A.M. O
UTC O
( O
early O
evening O
time O
in O
China O
) O
. O

While O
this O
can O
be O
deliberately O
spoofed O
as O
a O
'false O
flag O
' O
other O
indicators O
including O
the O
C2 O
are O
consistent O
with O
this O
having O
been O
the O
work O
of O
a O
Chinese O
speaking O
actor O
. O

The B-Entity
dropped I-Entity
DLL I-Entity
( I-Entity
MD5 I-Entity
: I-Entity
47619fca20895abc83807321cbb80a3d I-Entity
) I-Entity
itself I-Entity
contains B-Action
functionality B-Entity
that I-Entity
is I-Entity
typical I-Entity
of I-Entity
a I-Entity
Remote I-Entity
Access I-Entity
Tool I-Entity
( I-Entity
RAT I-Entity
) I-Entity
which O
are O
commonly O
used B-Action
by O
PRC B-Entity
based I-Entity
actors I-Entity
in B-Modifier
data B-Entity
exfiltration I-Entity
attacks I-Entity
. O

The O
code O
quality O
is O
not O
impressive O
, O
and O
contains O
a O
trivial O
stack O
buffer O
overflow O
vulnerability O
. O

Despite O
the O
buf- O
fer O
overflow O
, O
the O
C2 O
channel O
lacks O
any O
command O
authenication O
or O
encryption O
, O
apart O
from O
the O
initial O
beacon O
encryption/obfuscation O
using O
a O
statically O
compiled O
XOR O
key O
. O

The O
sample O
uses O
TCP O
port O
443 O
for O
commu- O
nication O
, O
but O
makes O
no O
attempt O
to O
mimic O
the O
SSL O
protocol O
typically O
used O
on O
that O
port O
number O
, O
which O
would O
provide O
enhanced O
Operational O
Security O
( O
OPSEC O
) O
. O

This O
code O
appears O
to O
have O
been O
compiled O
on O
Wednes- O
day O
May O
4th O
, O
2011 O
at O
10:48:19 O
A.M. O
UTC O
( O
early O
evening O
time O
in O
China O
) O
. O

The O
post O
exploitation O
tool O
( O
MD5 O
: O
2dce7fc3f52a692d8a84a0c182519133 O
) O
is O
a O
dual-use O
tool O
, O
it B-Entity
can O
be B-Action
dropped I-Action
and O
executed B-Action
by O
a B-Entity
client-side I-Entity
exploit I-Entity
, O
or O
the B-Entity
adversary I-Entity
can O
launch B-Action
it B-Entity
using B-Modifier
a B-Entity
variety I-Entity
of I-Entity
command I-Entity
line I-Entity
options I-Entity
. O

This O
tool O
is O
built O
in O
Microsoft O
.NET O

framework O
, O
which O
is O
typically O
an O
indication O
of O
a O
less O
sophis- O
ticated O
attacker O
, O
because O
.NET O

is O
easier O
to O
develop O
in O
but O
requires O
the O
.NET O

framework O
be O
present O
on O
the O
victim O
machine O
. O

The O
tool O
appears O
to O
have O
been O
compiled O
on O
Thursday O
May O
26th O
, O
2011 O
at O
10:21:44 O
A.M. O
UTC O
( O
early O
evening O
time O
in O
China O
) O
. O

The B-Entity
sample I-Entity
utilizes B-Action
the B-Entity
AES I-Entity
cryptographic I-Entity
algorithm I-Entity
to B-Modifier
protect B-Entity
its I-Entity
C2 I-Entity
communications I-Entity
. O

This B-Entity
DLL I-Entity
is B-Action
a B-Entity
moderately I-Entity
sophisticated I-Entity
backdoor I-Entity
with O
several O
well O
designed O
communication O
mechanisms O
not O
typically O
seen O
in O
these O
types O
of O
implants O
. O

The O
code O
base O
for O
the O
sample O
was O
developed O
in O
C++ O
. O

The O
code O
appears O
to O
have O
been O
compiled O
on O
Sunday O
October O
30 O
, O
2011 O
at O
12:43:33 O
P.M. O
UTC O
( O
late O
evening O
time O
in O
China O
) O
. O

This B-Entity
sample I-Entity
has B-Action
multiple B-Entity
communication I-Entity
capabilities I-Entity
available I-Entity
that O
makes O
it O
far O
more O
versatile O
and O
stealthy O
. O

It B-Entity
implements B-Action
relatively B-Entity
well I-Entity
thought I-Entity
out I-Entity
protocols I-Entity
including I-Entity
HTTP I-Entity
and I-Entity
DNS I-Entity
. O

The B-Entity
tool I-Entity
has O
the O
ability O
to O
automatically O
down O
select B-Action
the B-Entity
most I-Entity
effective I-Entity
communication I-Entity
channel I-Entity
once B-Modifier
it B-Entity
has I-Entity
been I-Entity
instantiated I-Entity
, O
which O
can O
help O
avoid B-Action
detection B-Entity
from I-Entity
solutions I-Entity
like I-Entity
DNS I-Entity
blacklisting I-Entity
and I-Entity
RFC I-Entity
protocol I-Entity
enforcement I-Entity
. O

The O
DLL O
itself O
contains O
traces O
of O
the O
original O
C++ O
class O
names O
that O
were O
utilized O
in O
the O
source O
code O
, O
which O
in O
general O
were O
prefixed O
with O
'PCC O
' O
. O

The B-Entity
sample I-Entity
supports O
the O
ability O
to O
act B-Action
as B-Modifier
a B-Entity
generic I-Entity
proxy I-Entity
, O
this O
may O
be O
intended O
to O
proxy B-Action
C2 B-Entity
traffic I-Entity
for B-Modifier
other B-Entity
infected I-Entity
machines I-Entity
in B-Modifier
order I-Modifier
to I-Modifier
minimize B-Entity
the I-Entity
number I-Entity
of I-Entity
systems I-Entity
communicating I-Entity
to I-Entity
the I-Entity
C2 I-Entity
, O
thus O
enhancing O
OPSEC O
. O

The O
sample O
contains O
'dead O
code O
' O
which O
appears O
to O
be O
command O
and O
control O
server O
classes O
, O
this O
is O
likely O
an O
indicator O
that O
the B-Entity
C2 I-Entity
client I-Entity
which I-Entity
would I-Entity
communicate I-Entity
with I-Entity
this I-Entity
sample I-Entity
shares B-Action
the B-Entity
same I-Entity
communications I-Entity
library I-Entity
which I-Entity
was I-Entity
compiled I-Entity
into I-Entity
this I-Entity
sample I-Entity
. O

The B-Entity
kernel I-Entity
driver I-Entity
component I-Entity
dropped B-Action
by O
the B-Entity
Backdoor I-Entity
DLL I-Entity
bears O
many O
tool O
marks O
associating O
it O
with O
the O
CCRootkit O
package O
publicly O
by O
Steven O
Lai O
( O
a/k/a O
embedlinux O
) O
. O

This B-Entity
kernel I-Entity
mode I-Entity
rootkit I-Entity
implements B-Action
several B-Entity
hooking I-Entity
techniques I-Entity
that O
are O
aimed O
at O
preventing B-Action
a B-Entity
system I-Entity
administrator I-Entity
from B-Modifier
detecting B-Entity
the I-Entity
backdoor I-Entity
DLL I-Entity
. O

The O
implementation O
of O
these O
techniques O
has O
some O
unique O
idiosyncrasies O
that O
permit O
direct O
attribution O
to O
the O
source O
code O
Steven O
Lai O
posted O
. O

This B-Entity
driver I-Entity
attempts O
to O
hide B-Action
a B-Entity
wide I-Entity
swath I-Entity
of I-Entity
TCP I-Entity
ports I-Entity
( I-Entity
40000-45000 I-Entity
) I-Entity
for B-Modifier
an B-Entity
unknown I-Entity
reason I-Entity
, O
however O
it O
is O
suspected O
that O
this O
may O
relate O
to O
the O
potential O
network O
relaying O
capability O
alluded O
to O
for O
the O
backdoor O
dll O
. O

The B-Entity
kernel I-Entity
driver I-Entity
component I-Entity
dropped B-Action
by O
the B-Entity
Backdoor I-Entity
DLL I-Entity
bears O
many O
tool O
marks O
associating O
it O
with O
the O
CCRootkit O
package O
publicly O
by O
Steven O
Lai O
( O
a/k/a O
embedlinux O
) O
. O

This B-Entity
kernel I-Entity
mode I-Entity
rootkit I-Entity
implements B-Action
several B-Entity
hooking I-Entity
techniques I-Entity
that O
are O
aimed O
at O
preventing B-Action
a B-Entity
system I-Entity
administrator I-Entity
from B-Modifier
detecting B-Entity
the I-Entity
backdoor I-Entity
DLL I-Entity
. O

The O
implementation O
of O
these O
techniques O
has O
some O
unique O
idiosyncrasies O
that O
permit O
direct O
attribution O
to O
the O
source O
code O
Steven O
Lai O
posted O
. O

This B-Entity
driver I-Entity
attempts O
to O
hide B-Action
a B-Entity
wide I-Entity
swath I-Entity
of I-Entity
TCP I-Entity
ports I-Entity
( I-Entity
40000-45000 I-Entity
) I-Entity
for B-Modifier
an B-Entity
unknown I-Entity
reason I-Entity
, O
however O
it O
is O
suspected O
that O
this O
may O
relate O
to O
the O
potential O
network O
relaying O
capability O
alluded O
to O
for O
the O
backdoor O
dll O
. O

Implemented O
values O
for O
cmdID O
are O
as O
follows O
: O
cmdType O
can O
be O
one O
of O
the O
following O
( O
Interesting O
commands O
explained O
in O
detail O
) O
: O
string0 O
can O
have O
one O
of O
the O
following O
values O
dependant O
upon O
command O
id O
and O
type O
. O

cardmagic O
writes O
: O
Windows O
Vista O
has O
changed O
alot O
on O
network O
module O
, O
many O
old O
port O
hiding O
materials O
are O
no O
longer O
usable O
. O

In O
this O
post O
, O
I O
will O
share O
with O
you O
a O
simple O
code O
to O
hide O
port O
under O
Vista O
, O
hope O
it O
is O
useful O
for O
some O
guys O
. O

Actually O
under O
Windows O
Vista O
, O
netstat.exe O
will O
call O
InternalGetTcpTable2 O
which O
is O
exported O
by O
Iphlpapi.dll O
to O
list O
all O
open O
ports O
, O
then O
InternalGetTcpTable2 O
will O
transfer O
control O
to O
NsiAllocateAndGetTable O
which O
is O
exported O
by O
nsi.dll O
, O
and O
finally O
nsi.dll O
involve O
NsiEnumerateObjectsAllParametersEx O
to O
interact O
with O
kernel O
mode O
module O
of O
NSI O
-- O
nsiproxy.sys O
. O

nsiproxy.sys O
is O
almost O
like O
a O
wrapper O
of O
netio.sys O
, O
it O
will O
then O
call O
internal O
subroutines O
of O
netio.sys O
. O

Here O
, O
we O
will O
use O
a O
relatively O
easy O
way O
-- O
'' O
NSI O
Kernel O
Module O
Dispatch O
Routine O
Hook O
'' O
to O
demonstrate O
the O
specified O
port O
hiding O
uner O
Vista O
. O

Dispatch O
routine O
hook O
is O
an O
old O
topic O
, O
this O
time O
, O
we O
will O
apply O
this O
method O
to O
nsiproxy.sys O
. O

Please O
focus O
on O
how O
to O
handle O
the O
content O
filtering O
of O
NSI O
: O
) O
Check O
the O
following O
code O
( O
Notice O
: O
I O
only O
tested O
it O
under O
Windows O
Vista O
RTM O
32bit O
) O
: O
On O
February O
11 O
, O
FireEye O
identified O
a B-Entity
zero-day I-Entity
exploit I-Entity
( I-Entity
CVE-2014-0322 I-Entity
) I-Entity
being B-Action
served I-Action
up I-Action
from B-Modifier
the B-Entity
U.S. I-Entity
Veterans I-Entity
of I-Entity
Foreign I-Entity
Wars I-Entity
' I-Entity
website I-Entity
( I-Entity
vfw I-Entity
[ I-Entity
. I-Entity
] I-Entity
org I-Entity
) I-Entity
. O

We O
believe O
the O
attack O
is O
a O
strategic O
Web O
compromise O
targeting O
American O
military O
personnel O
amid O
a O
paralyzing O
snowstorm O
at O
the O
U.S. O
Capitol O
in O
the O
days O
leading O
up O
to O
the O
Presidents O
Day O
holiday O
weekend O
. O

Based O
on O
infrastructure O
overlaps O
and O
tradecraft O
similarities O
, O
we O
believe O
the O
actors O
behind O
this O
campaign O
are O
associated O
with O
two O
previously O
identified O
campaigns O
( O
Operation O
DeputyDog O
and O
Operation O
Ephemeral O
Hydra O
) O
. O

This O
blog O
post O
examines O
the O
vulnerability O
and O
associated O
attacks O
, O
which O
we O
have O
dubbed O
'' O
Operation O
SnowMan O
. O

'' O
After O
compromising O
the O
VFW O
website O
, O
the O
attackers O
added O
an O
iframe O
into O
the O
beginning O
of O
the O
website's O
HTML O
code O
that O
loads O
the O
attacker O
's O
page O
in O
the O
background O
. O

The O
attacker O
's O
HTML/JavaScript O
page O
runs O
a O
Flash O
object O
, O
which O
orchestrates O
the O
remainder O
of O
the O
exploit O
. O

The O
exploit O
includes O
calling O
back O
to O
the O
IE O
10 O
vulnerability O
trigger O
, O
which O
is O
embedded O
in O
the O
JavaScript O
. O

Specifically O
, O
visitors B-Entity
to I-Entity
the I-Entity
VFW I-Entity
website I-Entity
were B-Action
silently I-Action
redirected I-Action
through B-Modifier
an B-Entity
iframe I-Entity
to B-Modifier
the B-Entity
exploit I-Entity
at I-Entity
www. I-Entity
[ I-Entity
REDACTED I-Entity
] I-Entity
.com/Data/img/img.html I-Entity
. O

The O
exploit O
targets O
IE O
10 O
with O
Adobe O
Flash O
. O

It B-Entity
aborts B-Action
exploitation B-Entity
if B-Modifier
the B-Entity
user I-Entity
is I-Entity
browsing I-Entity
with I-Entity
a I-Entity
different I-Entity
version I-Entity
of I-Entity
IE I-Entity
or I-Entity
has I-Entity
installed I-Entity
Microsoft I-Entity
's I-Entity
Experience I-Entity
Mitigation I-Entity
Toolkit I-Entity
( I-Entity
EMET I-Entity
) I-Entity
. O

So O
installing O
EMET O
or O
updating O
to O
IE O
11 O
prevents O
this O
exploit O
from O
functioning O
. O

The O
vulnerability O
is O
a O
previously O
unknown O
use-after-free O
bug O
in O
Microsoft O
Internet O
Explorer O
10 O
. O

The O
vulnerability O
allows O
the B-Entity
attacker I-Entity
to O
modify B-Action
one B-Entity
byte I-Entity
of I-Entity
memory I-Entity
at B-Modifier
an B-Entity
arbitrary I-Entity
address I-Entity
. O

The O
attacker O
uses O
the O
vulnerability O
to O
do O
the O
following O
: O
The B-Entity
attacker I-Entity
uses B-Action
the B-Entity
Microsoft.XMLDOM I-Entity
ActiveX I-Entity
control I-Entity
to B-Modifier
load B-Entity
a I-Entity
one-line I-Entity
XML I-Entity
string I-Entity
containing I-Entity
a I-Entity
file I-Entity
path I-Entity
to I-Entity
the I-Entity
EMET I-Entity
DLL I-Entity
. O

Then O
the O
exploit O
code O
parses O
the O
error O
resulting O
from O
the O
XML O
load O
order O
to O
determine O
whether O
the O
load O
failed O
because O
the O
EMET O
DLL O
is O
not O
present O
. O

The O
exploit O
proceeds O
only O
if O
this O
check O
determines O
that O
the O
EMET O
DLL O
is O
not O
present O
. O

Because O
the O
vulnerability O
allows O
attackers B-Entity
to O
modify B-Action
memory B-Entity
to B-Modifier
an B-Entity
arbitrary I-Entity
address I-Entity
, O
the B-Entity
attacker I-Entity
can O
use B-Action
it B-Entity
to B-Modifier
bypass B-Entity
ASLR I-Entity
. O

For O
example O
, O
the O
attacker O
corrupts O
a O
Flash O
Vector O
object O
and O
then O
accesses O
the O
corrupted O
object O
from O
within O
Flash O
to O
access O
memory O
. O

We O
have O
discussed O
this O
technique O
and O
other O
ASLR O
bypass O
approaches O
in O
our O
blog O
. O

One O
minor O
difference O
between O
the O
previous O
approaches O
and O
this O
attack O
is O
the O
heap O
spray O
address O
, O
which O
was O
changed O
to O
0x1a1b2000 O
in O
this O
exploit O
. O

Once B-Modifier
the B-Entity
attacker I-Entity
's I-Entity
code I-Entity
has I-Entity
full I-Entity
memory I-Entity
access I-Entity
through I-Entity
the I-Entity
corrupted I-Entity
Flash I-Entity
Vector I-Entity
object I-Entity
, O
the B-Entity
code I-Entity
searches B-Action
through B-Modifier
loaded B-Entity
libraries I-Entity
gadgets I-Entity
by B-Modifier
machine B-Entity
code I-Entity
. O

The B-Entity
attacker I-Entity
then O
overwrites B-Action
the B-Entity
vftable I-Entity
pointer I-Entity
of I-Entity
a I-Entity
flash.Media.Sound I-Entity
( I-Entity
) I-Entity
object I-Entity
in B-Modifier
memory B-Entity
to B-Modifier
point B-Entity
to I-Entity
the I-Entity
pivot I-Entity
and O
begin B-Action
ROP B-Entity
. O

After O
successful O
exploitation O
, O
the O
code O
repairs O
the O
corrupted O
Flash O
Vector O
and O
flash.Media.Sound O
to O
continue O
execution O
. O

Subsequently O
, O
the B-Entity
malicious I-Entity
Flash I-Entity
code I-Entity
downloads B-Action
a B-Entity
file I-Entity
containing I-Entity
the I-Entity
dropped I-Entity
malware I-Entity
payload I-Entity
. O

The O
beginning O
of O
the O
file O
is O
a O
JPG O
image O
; O
the O
end O
of O
the O
file O
( O
offset O
36321 O
) O
is O
the O
payload O
, O
encoded O
with O
an O
XOR O
key O
of O
0×95 O
. O

The O
attacker O
appends O
the O
payload O
to O
the O
shellcode O
before O
pivoting O
to O
code O
control O
. O

Then O
, O
when B-Modifier
the B-Entity
shellcode I-Entity
is I-Entity
executed I-Entity
, O
the B-Entity
malware I-Entity
creates B-Action
files B-Entity
'' I-Entity
sqlrenew.txt I-Entity
'' I-Entity
and I-Entity
'' I-Entity
stream.exe I-Entity
'' I-Entity
. O

The B-Entity
tail I-Entity
of I-Entity
the I-Entity
image I-Entity
file I-Entity
is B-Action
decoded I-Action
, I-Action
and I-Action
written I-Action
to B-Modifier
these B-Entity
files I-Entity
. O

'' B-Entity
sqlrenew.txt I-Entity
'' I-Entity
is B-Action
then I-Action
executed I-Action
with B-Modifier
the B-Entity
LoadLibraryA I-Entity
Windows I-Entity
API I-Entity
call I-Entity
. O

As O
documented O
above O
, O
this B-Entity
exploit I-Entity
dropped B-Action
an B-Entity
XOR I-Entity
( I-Entity
0×95 I-Entity
) I-Entity
payload I-Entity
that O
executed B-Action
a B-Entity
ZxShell I-Entity
backdoor I-Entity
( I-Entity
MD5 I-Entity
: I-Entity
8455bbb9a210ce603a1b646b0d951bce I-Entity
) I-Entity
. O

The O
compile O
date O
of O
the O
payload O
was O
2014-02-11 O
, O
and O
the O
last O
modified O
date O
of O
the O
exploit O
code O
was O
also O
2014-02-11 O
. O

This O
suggests O
that O
this O
instantiation O
of O
the O
exploit O
was O
very O
recent O
and O
was O
deployed O
for O
this O
specific O
strategic O
Web O
compromise O
of O
the O
Veterans O
of O
Foreign O
Wars O
website O
. O

A O
possible O
objective O
in O
the O
SnowMan O
attack O
is O
targeting O
military O
service O
members O
to O
steal O
military O
intelligence O
. O

In O
addition O
to O
retirees O
, O
active O
military O
personnel O
use O
the O
VFW O
website O
. O

It O
is O
probably O
no O
coincidence O
that O
Monday O
, O
Feb. O
17 O
, O
is O
a O
U.S. O
holiday O
, O
and O
much O
of O
the O
U.S. O
Capitol O
shut O
down O
Thursday O
amid O
a O
severe O
winter O
storm O
. O

The B-Entity
ZxShell I-Entity
backdoor I-Entity
is O
a O
widely O
used O
and O
publicly O
available O
tool O
used B-Action
by O
multiple B-Entity
threat I-Entity
actors I-Entity
linked I-Entity
to I-Entity
cyber I-Entity
espionage I-Entity
operations I-Entity
. O

This B-Entity
particular I-Entity
variant I-Entity
called B-Action
back B-Modifier
to I-Modifier
a B-Entity
command I-Entity
and I-Entity
control I-Entity
server I-Entity
located I-Entity
at I-Entity
newss I-Entity
[ I-Entity
. I-Entity
] I-Entity
effers I-Entity
[ I-Entity
. I-Entity
] I-Entity
com I-Entity
. O

This O
domain O
currently O
resolves O
to O
118.99.60.142 O
. O

The O
domain O
info O
[ O
. O

] O
flnet O
[ O
. O

] O
org O
also O
resolved O
to O
this O
IP O
address O
on O
2014-02-12 O
. O

The O
info O
[ O
. O

] O
flnet O
[ O
. O

] O
org O
domain O
overlaps O
with O
icybin O
[ O
. O

] O
flnet O
[ O
. O

] O
org O
and O
book O
[ O
. O

] O
flnet O
[ O
. O

] O
org O
via O
the O
previous O
resolutions O
to O
the O
following O
IP O
addresses O
: O
We O
previously O
observed O
Gh0stRat B-Entity
samples I-Entity
with I-Entity
the I-Entity
custom I-Entity
packet I-Entity
flag I-Entity
'' I-Entity
HTTPS I-Entity
'' I-Entity
calling B-Action
back B-Modifier
to I-Modifier
book B-Entity
[ I-Entity
. I-Entity
] I-Entity
flnet I-Entity
[ I-Entity
. I-Entity
] I-Entity
org I-Entity
and I-Entity
icybin I-Entity
[ I-Entity
. I-Entity
] I-Entity
flnet I-Entity
[ I-Entity
. I-Entity
] I-Entity
org I-Entity
. O

The O
threat O
actor O
responsible O
for O
Operation O
DeputyDog O
also O
used O
the O
'' O
HTTPS O
'' O
version O
of O
the O
Gh0st O
. O

We O
also O
observed O
another B-Entity
'' I-Entity
HTTPS I-Entity
'' I-Entity
Gh0st I-Entity
variant I-Entity
connecting B-Action
to B-Modifier
a B-Entity
related I-Entity
command I-Entity
and I-Entity
control I-Entity
server I-Entity
at I-Entity
me I-Entity
[ I-Entity
. I-Entity
] I-Entity
scieron I-Entity
[ I-Entity
. I-Entity
] I-Entity
com I-Entity
. O

The O
me O
[ O
. O

] O
scieron O
[ O
. O

] O
com O
domain O
previously O
resolved O
to O
58.64.199.22 O
. O

The O
book O
[ O
. O

] O
flnet O
[ O
. O

] O
org O
domain O
also O
resolved O
to O
another O
IP O
in O
the O
same O
subnet O
58.64.199.0/24 O
. O

Specifically O
, O
book O
[ O
. O

] O
flnet O
[ O
. O

] O
org O
previously O
resolved O
to O
58.64.199.27 O
. O

Others O
domain O
seen O
resolving O
to O
this O
same O
/24 O
subnet O
were O
dll O
[ O
. O

] O
freshdns O
[ O
. O

] O
org O
, O
ali O
[ O
. O

] O
blankchair O
[ O
. O

] O
com O
, O
and O
cht O
[ O
. O

] O
blankchair O
[ O
. O

] O
com O
. O

The O
domain O
dll O
[ O
. O

] O
freshdns O
[ O
. O

] O
org O
resolved O
to O
58.64.199.25 O
. O

Both O
ali O
[ O
. O

] O
blankchair O
[ O
. O

] O
com O
and O
cht O
[ O
. O

] O
blankchair O
[ O
. O

] O
com O
resolved O
to O
58.64.199.22 O
. O

A O
number O
of O
other O
related O
domains O
resolve O
to O
these O
IPs O
and O
other O
IPs O
also O
in O
this O
/24 O
subnet O
. O

For O
the O
purposes O
of O
this O
blog O
, O
we O
've O
chosen O
to O
focus O
on O
those O
domains O
and O
IP O
that O
relate O
to O
the O
previously O
discussed O
DeputyDog O
and O
Ephemeral O
Hydra O
campaigns O
. O

You O
may O
recall O
that O
dll B-Entity
[ I-Entity
. I-Entity
] I-Entity
freshdns I-Entity
[ I-Entity
. I-Entity
] I-Entity
org I-Entity
, I-Entity
ali I-Entity
[ I-Entity
. I-Entity
] I-Entity
blankchair I-Entity
[ I-Entity
. I-Entity
] I-Entity
com I-Entity
and I-Entity
cht I-Entity
[ I-Entity
. I-Entity
] I-Entity
blankchair I-Entity
[ I-Entity
. I-Entity
] I-Entity
com I-Entity
were B-Action
all I-Action
linked I-Action
to B-Modifier
both B-Entity
Operation I-Entity
DeputyDog I-Entity
and I-Entity
Operation I-Entity
Ephemeral I-Entity
Hydra I-Entity
. O

Figure O
1 O
illustrates O
the O
infrastructure O
overlaps O
and O
connections O
we O
observed O
between O
the O
strategic O
Web O
compromise O
campaign O
leveraging O
the O
VFW O
's O
website O
, O
the O
DeputyDog O
, O
and O
the O
Ephemeral O
Hydra O
operations O
. O

Other O
tradecraft O
similarities O
between O
the O
actor O
( O
s O
) O
responsible O
for O
this O
campaign O
and O
the O
actor O
( O
s O
) O
responsible O
for O
the O
DeputyDog/Ephemeral O
Hydra O
campaigns O
include O
: O
We O
observed O
many O
similarities O
from O
the O
exploitation O
side O
as O
well O
. O

At O
a O
high O
level O
, O
this O
attack O
and O
the O
CVE- O
2013-3163 O
attack O
both O
leveraged O
a O
Flash O
file O
that O
orchestrated O
the O
exploit O
, O
and O
would O
call O
back O
into O
IE O
JavaScript O
to O
trigger O
an O
IE O
flaw O
. O

The O
code O
within O
the O
Flash O
files O
from O
each O
attack O
are O
extremely O
similar O
. O

They B-Entity
build B-Action
ROP B-Entity
chains I-Entity
and O
shellcode O
the O
same O
way O
, O
both O
choose O
to O
corrupt O
a O
Flash O
Vector O
object O
, O
have O
some O
identical O
functions O
with O
common O
typos O
, O
and O
even O
share O
the O
same O
name O
. O

These O
actors O
have O
previously O
targeted O
a O
number O
of O
different O
industries O
, O
including O
: O
The O
proven O
ability O
to O
successfully O
deploy B-Action
a B-Entity
number I-Entity
of I-Entity
different I-Entity
private I-Entity
and I-Entity
public I-Entity
RATs I-Entity
using B-Modifier
zero-day B-Entity
exploits I-Entity
against B-Modifier
high-profile B-Entity
targets I-Entity
likely O
indicates O
that O
this B-Entity
actor I-Entity
( I-Entity
s I-Entity
) I-Entity
will O
continue O
to O
operate O
in O
the O
mid O
to O
long-term O
. O

This O
entry O
was O
posted O
in O
Advanced O
Malware O
, O
Exploits O
, O
Targeted O
Attack O
, O
Threat O
Research O
, O
Vulnerabilities O
and O
tagged O
0day O
, O
zero-day O
by O
Darien O
Kindlund O
, O
Dan O
Caselden O
, O
Xiaobo O
Chen O
, O
Ned O
Moran O
and O
Mike O
Scott O
. O

Bookmark O
the O
permalink O
. O

Most B-Entity
targeted I-Entity
attacks I-Entity
against I-Entity
organizations I-Entity
originate B-Action
as B-Modifier
spear-phish B-Entity
campaigns I-Entity
or I-Entity
watering I-Entity
hole I-Entity
style I-Entity
web I-Entity
driveby I-Entity
attacks I-Entity
. O

Within O
the O
last O
six O
months O
, O
Invincea O
has O
discovered O
and O
stopped O
targeted O
malvertizing O
attacks O
against O
specific O
companies O
-- O
particularly O
those O
in O
the O
Defense O
Industrial O
Base O
. O

The O
combination O
of O
traditional O
cyber O
crime O
methods O
( O
malvertising O
) O
with O
targeted O
attacks O
against O
Defense O
industrials O
for O
theft O
of O
IP O
represents O
another O
development O
in O
the O
on-going O
blending O
of O
techniques O
from O
cyber O
crime O
and O
advanced O
threat O
actors O
with O
nation O
state O
agendas O
. O

We O
are O
tracking O
an O
on-going O
campaign O
against O
US O
Defense O
companies O
under O
the O
code O
name O
Operation O
DeathClick O
. O

Traditional O
malvertizing O
has O
been O
an O
effective O
but O
indiscriminate O
method O
cyber B-Entity
crime I-Entity
gangs I-Entity
use O
to O
compromise O
endpoints O
to O
perpetrate B-Action
ad B-Entity
fraud I-Entity
, O
identity B-Entity
fraud I-Entity
, O
and O
banking B-Entity
credential I-Entity
theft I-Entity
. O

In O
this O
new O
targeted O
variation O
of O
malvertizing O
, O
the O
perpetrators O
are O
attacking O
specific O
organizations O
by O
leveraging O
real- O
time O
ad O
bidding O
networks O
and O
micro-targeting O
techniques O
developed O
over O
the O
last O
decade O
in O
online O
advertising O
. O

The O
objective O
of O
these O
micro-targeted O
attacks O
against O
the O
Defense O
sector O
is O
likely O
theft O
of O
Intellectual O
Property O
more O
than O
ad O
fraud O
and O
indicates O
motive O
and O
sophistication O
characteristic O
of O
advanced O
threat O
actors O
. O

Since O
these O
attacks O
were O
blocked O
by O
Invincea O
prior O
to O
compromise O
of O
the O
machine O
or O
network O
, O
we O
can O
not O
confirm O
the O
specific O
IP O
the O
perpetrators O
are O
after O
– O
only O
the O
Tactics O
, O
Techniques O
, O
and O
Protocols O
( O
TTPs O
) O
used O
which O
we O
describe O
herein O
, O
similar O
to O
methods B-Entity
used O
to O
provide B-Action
backdoor B-Entity
access I-Entity
and I-Entity
command I-Entity
and I-Entity
control I-Entity
over I-Entity
compromised I-Entity
networks I-Entity
. O

While O
we O
discovered O
these O
attacks O
across O
multiple O
Defense O
companies O
, O
we O
expect O
it O
will O
not O
be O
long O
, O
if O
not O
already O
, O
before O
other O
highly O
targeted O
segments O
including O
Federal O
, O
Financial O
Services O
, O
Manufacturing O
, O
and O
HealthCare O
are O
victimized O
with O
the O
same O
micro-targeted O
malvertising O
. O

The O
campaign O
described O
here O
does O
not O
represent O
a O
single O
flaw O
, O
0-day O
, O
or O
unpatched O
bug O
, O
but O
rather O
a O
significant O
development O
in O
the O
adversary O
's O
capabilities O
and O
strategy O
to O
leverage O
legitimate O
online O
advertising O
platforms O
on O
well-known O
ad O
supported O
websites O
via O
a O
technique O
called O
Real-Time O
Ad O
Bidding O
. O

In O
other O
words O
, O
this O
problem O
will O
not O
be O
patched O
on O
Tuesday O
. O

UPDATE O
: O
We O
have O
updated O
this O
document O
to O
include O
a O
new O
section O
on O
a O
campaign O
of O
distributing O
CryptoWall O
ransomware O
via O
malvertising O
. O

While O
the O
attack O
vector O
is O
the O
same O
, O
we O
believe O
this O
to O
be O
motivated O
by O
cybercrime O
rather O
than O
theft O
of O
IP O
from O
Defense O
companies O
. O

Malvertising O
has O
seen O
meteoric O
rise O
in O
2014 O
. O

Threat B-Entity
actors I-Entity
create O
a O
corporate O
front O
, O
advertise O
on O
commonly O
visited O
sites O
, O
then O
later O
switch B-Action
out B-Modifier
the B-Entity
landing I-Entity
pages I-Entity
for I-Entity
their I-Entity
ads I-Entity
to B-Modifier
pages B-Entity
that I-Entity
host I-Entity
exploit I-Entity
kits I-Entity
, O
or O
simply O
create B-Action
a B-Entity
temporary I-Entity
redirection I-Entity
from I-Entity
their I-Entity
usual I-Entity
content I-Entity
to I-Entity
the I-Entity
malicious I-Entity
landing I-Entity
page I-Entity
. O

These O
exploit O
kits O
are O
hosted O
on O
compromised O
web O
servers O
across O
the O
world O
. O

In O
other O
words O
, O
they O
leverage O
legitimate O
ad-supported O
popular O
websites O
together O
with O
compromised O
websites O
for O
hosting O
exploit O
landing O
pages O
, O
defeating O
black-listing O
techniques O
. O

The O
lifetime O
of O
these O
ads O
and O
landing O
pages O
are O
measured O
in O
hours O
. O

In O
the O
campaign O
described O
here O
, O
Operation O
DeathClick O
, O
traditional B-Entity
malvertising I-Entity
has O
been B-Action
armed I-Action
with B-Modifier
a B-Entity
micro-targeting I-Entity
system I-Entity
using I-Entity
IP I-Entity
address I-Entity
ranges I-Entity
, I-Entity
geographically I-Entity
narrowed I-Entity
down I-Entity
to I-Entity
zip I-Entity
codes I-Entity
, I-Entity
and I-Entity
interests I-Entity
of I-Entity
the I-Entity
user I-Entity
( I-Entity
recorded I-Entity
in I-Entity
cookies I-Entity
) I-Entity
to B-Modifier
target B-Entity
specific I-Entity
companies I-Entity
, I-Entity
company I-Entity
types I-Entity
, I-Entity
and I-Entity
user I-Entity
interests/preferences I-Entity
. O

They O
are O
employing O
the O
tactics O
of O
real-time O
ad O
bidding O
to O
guarantee O
malicious O
ad O
delivery O
to O
intended O
targets O
of O
the O
campaign O
– O
building O
on O
a O
decade O
of O
work O
in O
real-time O
analytics O
for O
online O
ad O
placement O
, O
but O
for O
nefarious O
purposes O
. O

The O
threat O
actors O
redirect O
their O
ads O
for O
just O
minutes O
at O
a O
time O
and O
then O
abandon O
their O
exploit O
kit O
pages O
forever O
. O

This O
means O
that O
list-based O
threat O
intelligence O
feeds O
are O
rendered O
ineffective O
. O

The O
domains O
used O
do O
not O
appear O
in O
any O
proxy O
blacklist O
, O
and O
the O
malware O
droppers O
delivered O
by O
the O
exploit O
pages O
always O
employ O
different O
signatures O
, O
evading O
traditional O
network O
and O
endpoint O
detection O
technology O
. O

Ad O
delivery O
networks O
today O
are O
not O
incentivized O
to O
address O
the O
problem O
in O
a O
credible O
manner O
as O
they O
derive O
revenue O
from O
the O
criminal O
enterprise O
, O
while O
not O
being O
held O
accountable O
. O

Turning O
a O
blind O
eye O
to O
the O
problem O
is O
rewarded O
economically O
. O

Meanwhile O
the O
perpetrators O
are O
able O
to O
use O
traditional O
malvertising O
and O
ad O
fraud O
bots O
to O
fund O
the O
criminal O
enterprise O
. O

Without O
cooperation O
of O
ad O
networks O
to O
vet O
the O
advertisers O
working O
through O
front O
companies O
, O
this O
attack O
vector O
will O
go O
unchecked O
. O

And O
now O
, O
with O
the O
advent O
of O
real-time O
ad O
bidding O
, O
these B-Entity
threat I-Entity
actors I-Entity
have O
weaponized B-Action
ad B-Entity
delivery I-Entity
networks I-Entity
to B-Modifier
target B-Entity
victims I-Entity
based O
on O
: O
Real-time O
ad O
bidding O
allows O
advertisers O
, O
and O
by O
extension O
, O
adversaries O
, O
to O
micro-target O
ad O
delivery O
on O
an O
extremely O
granular O
basis O
. O

For O
example O
, O
oppressive O
regimes O
trying O
to O
gather O
intelligence O
on O
activist O
protests O
can O
deliver O
ads O
to O
people O
getting O
email O
from O
within O
a O
specific O
locality O
where O
they O
are O
protesting O
. O

Today O
, O
it O
is O
commonplace O
for O
micro-targeting O
techniques O
to O
be O
used O
as O
part O
of O
the O
toolset O
in O
legitimate O
online O
advertising O
. O

For O
instance O
, O
a O
defense O
contractor O
, O
trying O
to O
win O
a O
new O
omnibus O
contract O
, O
can O
deliver O
targeted O
ads O
to O
online O
news O
sites O
frequented O
by O
Government O
program O
personnel O
. O

The O
latest O
software O
product O
release O
can O
be O
delivered O
to O
Windows O
users O
visiting O
PC O
Magazine O
's O
website O
. O

A O
local O
car O
dealership O
can O
sense O
when O
someone O
is O
in O
the O
market O
for O
a O
new O
car O
and O
can O
deliver O
advertising O
to O
those O
users O
, O
based O
solely O
on O
browsing O
history O
. O

Now O
advanced B-Entity
threat I-Entity
actors I-Entity
are O
able O
to O
target B-Action
an B-Entity
organization I-Entity
directly B-Entity
via B-Modifier
micro-targeted B-Entity
malvertising I-Entity
, O
based B-Modifier
solely I-Modifier
on I-Modifier
their B-Entity
corporate I-Entity
network I-Entity
IP I-Entity
range I-Entity
. O

Thus O
, O
it O
does O
n't O
matter O
where O
in O
the O
world O
you O
point O
your O
web O
browser O
-- O
an O
online O
video O
poker O
room O
, O
a O
fantasy O
football O
club O
homepage O
, O
a O
Pakistani O
news O
homepage O
, O
or O
even O
checking O
your O
own O
webmail O
at O
a O
trusted O
email O
provider O
. O

Those B-Entity
ad I-Entity
windows I-Entity
can O
and O
are O
being B-Action
used I-Action
to B-Modifier
deliver B-Entity
malware I-Entity
if B-Modifier
the B-Entity
bidding I-Entity
price I-Entity
is I-Entity
right I-Entity
. O

Recently O
, O
multiple B-Entity
US I-Entity
Defense/Aerospace I-Entity
contractors I-Entity
were B-Action
targeted I-Action
by O
a B-Entity
malvertising I-Entity
campaign I-Entity
. O

These O
contractors O
had O
deployed O
world-class O
enterprise O
security O
defense O
in O
depth O
approaches O
to O
protect O
their O
intellectual O
property O
. O

They O
had O
next O
generation O
firewalls O
that O
relied O
on O
threat O
intelligence O
feeds O
to O
do O
auto-blocking O
of O
known O
malicious O
sites O
. O

They O
had O
malware O
interception O
technology O
that O
relied O
on O
known O
bad O
hashes O
to O
prevent O
malicious O
downloads O
. O

The O
multiple O
proxies O
in O
place O
subscribed O
to O
real O
time O
feeds O
of O
known O
bad O
URLs O
. O

They O
deployed O
AV O
at O
the O
gateways O
and O
on O
the O
endpoints O
. O

But O
in O
a O
two O
week O
period O
, O
these B-Entity
organizations I-Entity
were B-Action
hit I-Action
with B-Modifier
dozens B-Entity
of I-Entity
micro-targeted I-Entity
malvertising I-Entity
attacks I-Entity
, O
each O
of O
which O
would O
have O
provided O
a O
beachhead O
for O
the O
threat O
actors O
from O
which O
to O
compromise O
the O
network O
, O
if O
successful O
. O

In O
each O
instance O
, O
the B-Entity
attacks I-Entity
were B-Action
carried I-Action
out I-Action
by B-Modifier
targeting B-Entity
these I-Entity
Defense I-Entity
contractors I-Entity
directly I-Entity
via I-Entity
real-time I-Entity
ad I-Entity
bidding I-Entity
. O

Once O
targeted O
, O
an O
end O
user O
only O
needed O
to O
browse O
to O
any O
website O
, O
anywhere O
in O
the O
world O
, O
which O
contained O
a O
DoubleClick O
ad-partner O
embedded O
window O
. O

Invincea O
stopped O
these O
attacks O
on O
the O
endpoints O
by O
containing O
the O
delivered O
exploits O
in O
secure O
virtual O
containers O
, O
while O
producing O
the O
forensics O
that O
led O
to O
this O
discovery O
. O

Next O
we O
go O
in O
some O
detail O
about O
example O
attacks O
perpetrated O
against O
the O
defense O
firms O
. O

It O
is O
important O
to O
note O
that O
the O
websites O
we O
show O
next O
that O
served O
up O
targeted O
malvertising O
were O
victims O
of O
malvertising O
campaigns O
with O
no O
knowledge O
of O
the O
malicious O
ads O
they O
were O
serving O
up O
. O

These O
malicious O
ads O
were O
served O
up O
by O
3rd O
party O
networks O
, O
who O
are O
unwittingly O
sourcing O
malicious O
content O
. O

As O
we O
will O
discuss O
later O
, O
the O
3rd O
party O
ad O
networks O
themselves O
are O
falling O
victim O
to O
malicious O
content O
campaigns O
. O

A O
user O
visited O
his O
online O
fantasy O
football O
league O
homepage O
at O
Fleaflicker.com O
. O

As O
soon O
as O
the O
page O
loaded O
, O
a B-Entity
malicious I-Entity
ad I-Entity
delivered B-Action
a B-Entity
backdoor I-Entity
Trojan I-Entity
via B-Modifier
a B-Entity
Java-based I-Entity
exploit I-Entity
. O

Figure O
1 O
shows O
a O
screenshot O
of O
the O
page O
that O
was O
visited O
. O

You O
will O
notice O
the O
two O
inline O
ad O
placements O
for O
DoubleClick O
ad O
delivery O
. O

The B-Entity
malware I-Entity
delivered O
came O
from O
a O
compromised O
Polish O
website O
, O
and O
would O
have O
installed B-Action
a B-Entity
generic I-Entity
backdoor I-Entity
Trojan I-Entity
. O

Note O
the O
prominent O
ad O
placements O
by O
AdChoice O
, O
a O
DoubleClick O
affiliate O
. O

Figure O
2 O
shows O
an O
event O
tree O
of O
the B-Entity
exploit I-Entity
and I-Entity
malware I-Entity
delivered B-Action
from B-Modifier
an B-Entity
ad I-Entity
by B-Modifier
visiting B-Entity
Fleaflicker.com I-Entity
. O

The O
event O
tree O
in O
Figure O
2 O
taken O
from O
Invincea O
's O
Threat O
Management O
Console O
shows O
the B-Entity
exploited I-Entity
Java I-Entity
process I-Entity
dropped B-Action
a B-Entity
file I-Entity
called I-Entity
fvJcrgR0.exe I-Entity
, O
and O
that O
it O
likely O
came O
from O
Pubmatic O
, O
an O
ad O
delivery O
network O
that O
allows O
for O
real O
time O
bidding O
to O
deliver O
ads O
. O

In O
this O
instance O
, O
the O
Pubmatic O
server O
redirected O
to O
a B-Entity
Web I-Entity
server I-Entity
in I-Entity
Poland I-Entity
that O
dropped B-Action
the B-Entity
malware I-Entity
. O

The O
timeline O
below O
shows O
the O
exact O
times O
and O
URLs O
visited O
. O

Note O
the O
number O
of O
re-directs O
from O
Fleaflicker.com O
to O
different O
outside O
properties O
in O
Figure O
3 O
. O

Invincea O
Threat O
Management O
provides O
a O
quick O
way O
to O
search O
for O
an O
MD5 O
hash O
on O
third O
party O
sites O
( O
see O
Figure O
4 O
) O
. O

By O
clicking O
the O
VirusTotal O
link O
, O
the O
analyst O
will O
see O
the O
following O
VirusTotal O
report O
in O
Figure O
5 O
: O
From O
the O
VirusTotal O
report O
in O
Figure O
5 O
, O
you O
will O
see O
that O
this B-Entity
malware I-Entity
is B-Action
a B-Entity
Trojan I-Entity
backdoor I-Entity
that O
would O
likely O
be O
used O
to O
download B-Action
additional B-Entity
malware I-Entity
or O
to O
provide B-Action
remote B-Entity
persistent I-Entity
access I-Entity
to B-Modifier
the B-Entity
attacker I-Entity
. O

An O
employee O
at O
a O
defense O
contractor O
visited O
a O
free O
Texas O
Poker O
online O
game O
. O

The O
Poker O
site O
had O
advertisements O
on O
the O
page O
, O
one O
of O
which O
launched O
a O
similar O
attack O
as O
seen O
in O
before O
on O
other O
websites O
visited O
by O
employees O
at O
this O
firm O
. O

It O
should O
be O
noted O
that O
Gpokr.com O
no O
longer O
appears O
to O
be O
serving O
advertisements O
from O
their O
site O
. O

At O
the O
time O
of O
the O
incident O
, O
as O
seen O
in O
the O
logs O
below O
, O
an O
ad O
window O
was O
previously O
present O
. O

In O
the O
event O
tree O
shown O
in O
Figure O
7 O
, O
you O
will O
see O
that O
the O
winning O
bid O
redirected O
to O
a O
direct-to-IP O
site O
instead O
of O
a O
site O
via O
domain O
name O
. O

Also O
, O
above O
is O
the O
first O
indication O
of O
specific O
executable O
DLL O
files O
. O

Searches O
for O
these O
filenames O
returned O
zero O
results O
on O
VirusTotal O
. O

This O
event O
on O
September O
14 O
( O
Figure O
8 O
) O
shows O
that O
delivery.first-impression.com B-Entity
redirected B-Action
directly O
to B-Modifier
an B-Entity
IP I-Entity
address I-Entity
, I-Entity
not I-Entity
a I-Entity
domain I-Entity
name I-Entity
to B-Modifier
deliver B-Entity
its I-Entity
malicious I-Entity
payload I-Entity
. O

Note O
the O
multiple O
DLL O
files O
written O
to O
disk O
and O
the O
spawning O
of O
rundll32.exe O
. O

At O
this O
point O
, O
the O
Invincea-protected O
host O
recognized O
the O
unauthorized O
process O
and O
reverted O
itself O
to O
a O
clean O
state O
. O

In O
another O
incident O
an O
employee O
checked O
their O
online O
Earthlink O
account O
. O

When O
they O
replied O
to O
an O
email O
, O
a B-Entity
new I-Entity
ad I-Entity
was O
loaded O
on O
a O
page O
that O
attempted O
to O
exploit B-Action
Java B-Entity
. O

This O
malvertising O
was O
from O
the O
same O
IP O
address O
seen O
in O
other O
incidents O
. O

You O
will O
notice O
the O
inline O
advertisements O
on O
this O
page O
in O
Figure O
9 O
. O

The O
event O
tree O
in O
Figure O
10 O
notes O
that O
this B-Entity
was B-Action
likely O
a B-Entity
spear-phish I-Entity
attack I-Entity
. O

The O
timeline O
will O
show O
that O
when O
the O
user O
replied O
to O
an O
email O
, O
the B-Entity
ads I-Entity
on I-Entity
the I-Entity
Earthlink I-Entity
page I-Entity
refreshed O
, O
dropping B-Action
the B-Entity
exploit I-Entity
code I-Entity
via B-Modifier
Java B-Entity
. O

Note O
in O
the O
timeline O
in O
Figure O
11 O
, O
how O
there O
was O
a O
7 O
minute O
gap O
between O
the O
DoubleClick O
ad O
redirect O
and O
the O
delivery.first-impression.com O
ad O
. O

This O
is O
an O
indication O
that O
the O
page O
was O
refreshed O
or O
the O
ad O
was O
refreshed O
on O
the O
page O
. O

The O
same O
exploit O
IP O
address O
from O
the O
Gpokr O
event O
is O
present O
. O

This O
event O
is O
the O
oldest O
, O
happening O
on O
September O
11 O
. O

The O
three O
examples O
above O
are O
samples O
of O
the O
more O
than O
two O
dozen O
micro-targeted O
attacks O
we O
have O
witnessed O
and O
blocked O
as O
part O
of O
Operation O
DeathClick O
since O
mid-September O
. O

Defense O
Industrial O
Base O
customers O
witnessed O
micro-targeted O
malvertising O
at O
a O
rate O
six O
times O
that O
of O
comparable O
private O
sector O
companies O
with O
similar O
defense-in-depth O
capabilities O
. O

We O
observed O
in O
Operation O
DeathClick O
that O
real-time B-Entity
ad I-Entity
bidding I-Entity
networks I-Entity
are O
being B-Action
used I-Action
by O
criminal B-Entity
enterprise I-Entity
to B-Modifier
target B-Entity
companies I-Entity
with I-Entity
malicious I-Entity
content I-Entity
in O
order O
to O
gain B-Action
persistent B-Entity
remote I-Entity
access I-Entity
. O

In O
these O
third-party O
arrangements O
, O
the O
content O
is O
frequently O
not O
vetted O
because O
billions O
of O
impressions O
are O
rendered O
in O
real-time O
. O

Most O
of O
the O
content O
is O
legitimate O
ads O
. O

A O
small O
fraction O
is O
malicious B-Entity
content I-Entity
linking B-Action
to B-Modifier
landing B-Entity
pages I-Entity
that I-Entity
infect I-Entity
users I-Entity
. O

Real-time O
ad O
networks O
are O
being O
used O
, O
often O
unwittingly O
, O
and O
some O
have O
taken O
steps O
to O
try O
and O
combat O
malicious O
use O
of O
their O
networks O
. O

The O
Online O
Trust O
Alliance O
is O
one O
such O
industry O
group O
comprised O
of O
major O
software O
companies O
and O
ad O
networks O
working O
together O
to O
try O
and O
address O
this O
problem O
. O

Our O
goal O
in O
this O
paper O
is O
to O
shed O
light O
on O
the O
micro-targeting O
of O
companies O
by O
criminal O
enterprise O
employing O
real-time O
ad O
networks O
, O
and O
to O
aid O
the O
industry O
in O
collectively O
addressing O
this O
problem O
. O

Real-time O
ad O
bidding O
networks O
have O
evolved O
over O
the O
last O
ten O
years O
as O
a O
means O
of O
micro-targeting O
customers O
with O
advertising O
content O
they O
are O
more O
likely O
to O
click-on O
. O

From O
Wikipedia O
: O
Real-time O
bidding O
( O
RTB O
) O
refers O
to O
the O
means O
by O
which O
ad O
inventory O
is O
bought O
and O
sold O
on O
a O
per- O
impression O
basis O
, O
via O
programmatic O
instantaneous O
auction O
, O
similar O
to O
financial O
markets O
. O

[ O
1 O
] O
With O
real-time O
bidding O
, O
advertising O
buyers O
bid O
on O
an O
impression O
and O
, O
if O
the O
bid O
is O
won O
, O
the O
buyer O
's O
ad O
is O
instantly O
displayed O
on O
the O
publisher O
's O
site O
. O

[ O
2 O
] O
Real-time O
bidding O
lets O
advertisers O
manage O
and O
optimize O
ads O
from O
multiple O
ad-networks O
by O
granting O
the O
user O
access O
to O
a O
multitude O
of O
different O
networks O
, O
allowing O
them O
to O
create O
and O
launch O
advertising O
campaigns O
, O
prioritize O
networks O
and O
allocate O
advertising O
stock O
. O

Real-time O
bidding O
is O
a O
dynamic O
bidding O
process O
where O
each O
impression O
is O
bid O
for O
in O
( O
near O
) O
real O
time O
, O
against O
a O
static O
auction O
where O
the O
impressions O
are O
typically O
bundled O
in O
groups O
of O
1,000 O
. O

A O
typical O
transaction O
begins O
with O
a O
user O
visiting O
a O
website O
. O

This O
triggers O
a O
bid O
request O
that O
can O
include O
various O
pieces O
of O
data O
such O
as O
the O
user O
's O
demographic O
information O
, O
browsing O
history O
, O
location O
, O
and O
the O
page O
being O
loaded O
. O

The O
request O
goes O
from O
the O
publisher O
to O
an O
ad O
exchange O
, O
which O
submits O
it O
and O
the O
accompanying O
data O
to O
multiple O
advertisers O
who O
automatically O
submit O
bids O
in O
real O
time O
to O
place O
their O
ads O
. O

Advertisers O
bid O
on O
each O
ad O
impression O
as O
it O
is O
served O
. O

The O
impression O
goes O
to O
the O
highest O
bidder O
and O
their O
ad O
is O
served O
on O
the O
page.This O
process O
is O
repeated O
for O
every O
ad O
slot O
on O
the O
page O
. O

Real O
time O
bidding O
transactions O
typically O
happen O
within O
100 O
milliseconds O
from O
the O
moment O
the O
ad O
exchange O
received O
the O
request O
. O

The O
bidding O
happens O
autonomously O
and O
advertisers O
set O
maximum O
bids O
and O
budgets O
for O
an O
advertising O
campaign O
. O

The O
criteria O
for O
bidding O
on O
particular O
types O
of O
consumers O
can O
be O
very O
complex O
, O
taking O
into O
account O
everything O
from O
very O
detailed O
behavioral O
profiles O
to O
conversion O
data O
. O

The O
following O
infographic O
summarizes O
how O
advanced O
adversaries O
are O
now O
micro-targeting O
companies O
using O
malvertising O
. O

The O
marketplace O
and O
auction O
of O
ads O
sounds O
great O
for O
actual O
ads O
. O